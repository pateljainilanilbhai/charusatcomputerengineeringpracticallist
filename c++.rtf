{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\froman\fcharset0 Times New Roman;}{\f1\fswiss\fcharset0 Courier New;}}
{\*\generator Riched20 10.0.14393}\viewkind4\uc1 
\pard\sb100\sa100\sl240\slmult1\f0\fs24 Function Overloading Example\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 # include<iostream>\line\line using namespace std;\line\line int area(int side)\line\{\line  return side*side;\line\}\line\line int area(int l , int b)\line\{\line  return l*b;\line\}\line\line int main()\line\{\line\line         int (*p1)(int);\line         int (*p2)(int,int);\line\line         p1=area;\line         p2=area;\line\line         cout<<"Address of area(int)="<<p1<<endl;\line         cout<<"Address of area(int,int)="<<p2<<endl;\line\line         cout<<"\\n";\line\line         cout<<"Invoking area(int) via p1 "<<p1(20)<<endl;\line         cout<<"Invoking area(int,int) via p2 "<<p2(10,20);\line\line         return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Address of area(int)=4199220\par
Address of area(int,int)=4199232\par
\par
Invoking area(int) via p1 400\par
Invoking area(int,int) via p2 200\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Simple Class example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 # include<iostream>\line # include<math.h>\line\line using namespace std;\line\line class point\line\{\line  int x,y,z;\line\line public:\line   point()\line  \{\line          x=y=z=0;\line  \}\line\line   point(int i,int j,int k)\line  \{\line   x=i;\line   y=j;\line   z=k;\line  \}\line\line   point(point &a)\line  \{\line   x=a.x;\line   y=a.y;\line   z=a.z;\line  \}\line\line     void negate()\line  \{\line   x=-x;\line   y=-y;\line   z=-z;\line  \}\line\line  void print()\line  \{\line   cout<<"("<<x<<","<<y<<","<<z<<")\\n";\line  \}\line\line  int norm()\line  \{\line   return(sqrt(x*x+y*y+z*z));\line  \}\line\};\line\line int main()\line\{\line       point p(2,3,4),p1(p);\line\line       cout<<"The point has the coordinates\\n";\line       p.print();\line       cout<<"The point coordinates after negation\\n";\line\par
 p.negate();\line       p.print();\line\line       cout<<"Normal Distance of the point from (0,0,0) is \\n"<<p.norm()<<"\\n";\line       cout<<"The coordinates of the point p1 after copy constructor is \\n";\line\line       p1.print();\line\line       return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 The point has the coordinates\par
(2,3,4)\par
The point coordinates after negation\par
(-2,-3,-4)\par
Normal Distance of the point from (0,0,0) is\par
5\par
The coordinates of the point p1 after copy constructor is\par
(2,3,4)\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Class Example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line  \line using namespace std;\line  \line class programming\line\{\line    private:\line       int variable;\line  \line    public:\line  \line       void input_value()\line       \{\line          cout << "In function input_value, Enter an integer\\n";\line          cin >> variable;\line       \}\line  \line       void output_value()\line       \{\line          cout << "Variable entered is ";\line          cout << variable << "\\n";\line       \}\line\};\line  \line int main()\line\{\line    programming object;\line  \line    object.input_value();\line    object.output_value();\line  \line    //object.variable;  Will produce an error because variable is private\line  \line    return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
function input_value, Enter an integer 5 Variable entered is 5\par
Minus Operator Overloading \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line class MinusOperatorOverloading\line\{\line     int x,y,z;\line\line     public:\line     void get_data(int a,int b,int c)\line     \{\line         x = a;\line         y = b;\line         z = c;\line     \}\line\line     void operator -()\line     \{\line         x = x - 10;\line         y = y - 10;\line         z = z - 10;\line     \}\line\line     void display()\line     \{\line         cout<<"\\nx: "<<x;\line         cout<<"\\ny: "<<y;\line         cout<<"\\nz: "<<z;\line     \}\line\};\line\line int main()\line\{\line     MinusOperatorOverloading oo;\line     oo.get_data(53,73,93);\line     cout<<"Before overloading:";\line     oo.display();\line\line     -oo;\line\line     cout<<"\\n\\n";\line     cout<<"After overloading:";\line\line     oo.display();\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Before overloading:\par
x: 53\par
y: 73\par
z: 93\par
\par
After overloading:\par
x: 43\par
y: 63\par
z: 83\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Function Overloading (Polymorphism) \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line class Add\line\{\line     public:\line     void add(int a,int b)\line     \{\line         int c;\line         c=(a+b);\line         cout<<a<<" + "<<b<<" = "<<c<<endl;\line     \}\line\line     void add(float a,float b)\line     \{\line         float c;\line         c=(a+b);\line         cout<<a<<" + "<<b<<" = "<<c<<endl;\line     \}\line\line     void add(int a,int b,int c)\line     \{\line         int d;\line         d=(a+b+c);\line         cout<<a<<" + "<<b<<" + "<<c<<" = "<<d<<endl;\line     \}\line\};\line\line int main()\line\{\line     Add a;\line     a.add(5,6);\line     a.add(7,8,9);\line     a.add(8.0f,9.0f);\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 5 + 6 = 11\par
7 + 8 + 9 = 24\par
8 + 9 = 17\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Hierarchical Inheritance Example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line class Shape\line\{\line protected:\line  float width, height;\line\line public:\line  void set_data (float a, float b)\line  \{\line   width = a;\line   height = b;\line  \}\line\};\line\line //inheriting Shape class\line class Rectangle: public Shape\line\{\line public:\line  float area ()\line  \{\line   return (width * height);\line  \}\line\};\line\line //inheriting Shape class\line class Triangle: public Shape\line\{\line     public:\line         float area ()\line         \{\line             return (width * height / 2);\line         \}\line\};\line\line int main ()\line\{\line  Rectangle rect;\line  Triangle tri;\line\line  rect.set_data (5,3);\line  tri.set_data (2,5);\line\line  cout <<"Area of Rectangle : " <<rect.area() << endl;\line  cout <<"Area of Triangle : "<< tri.area() << endl;\line\line  return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Area of Rectangle : 15\par
Area of Triangle : 5\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Multiple Inheritance Example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line class Area\line\{\line     public:\line     float area_calc(float l,float b)\line     \{\line         return l*b;\line     \}\line\};\line\line class Perimeter\line\{\line     public:\line     float peri_calc(float l,float b)\line     \{\line         return 2*(l+b);\line     \}\line\};\line\line //Rectangle class is derived from classes Area and Perimeter.\line class Rectangle : private Area, private Perimeter\line\{\line     private:\line     float length, breadth;\line\line     public:\line     Rectangle() : length(0.0), breadth(0.0) \{ \}\line\line     void get_data( )\line     \{\line         cout<<"Enter length: ";\line         cin>>length;\line\line         cout<<"Enter breadth: ";\line         cin>>breadth;\line     \}\line\line     float area_calc()\line     \{\line         //Calls area_calc() of class Area and returns it.\line         return Area::area_calc(length,breadth);\line     \}\line\line     float peri_calc()\line     \{\line         //Calls peri_calc() function of class Perimeter and returns it.\line         return Perimeter::peri_calc(length,breadth);\line     \}\line\};\line\line int main()\line\{\line     Rectangle r;\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 r.get_data();\line\line cout<<"\\n\\n";\line\line cout<<"Area = "<<r.area_calc();\line cout<<"\\nPerimeter = "<<r.peri_calc();\line\line return 0;\line\}\par
OUTPUT\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter length: 3\par
Enter breadth: 2\par
\par
Area = 6\par
Perimeter = 10\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Single Inheritance Example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line class Value\line\{\line     protected:\line         int val;\line\line     public:\line         void set_values (int a)\line         \{\line             val=a;\line         \}\line\};\line\line class Cube: public Value\line\{\line     public:\line         int cube()\line         \{\line             return (val*val*val);\line         \}\line\};\line\line int main()\line\{\line     Cube cub;\line     cub.set_values (5);\line\line     cout << "The Cube of 5 is : " << cub.cube() << endl;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 The Cube of 5 is : 125\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Multilevel Inheritance Example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<string.h>\line\line using namespace std;\line\line class student\line\{\line     private:\line       int rl;\line       char nm[20];\line\line     public:\line        void read();\line        void display();\line\};\line\line class marks : public student\line\{\line     protected:\line       int s1;\line       int s2;\line       int s3;\line\line     public:\line        void getmarks();\line        void putmarks();\line\};\line\line class result : public marks\line\{\line     private:\line       int t;\line       float p;\line       char div[10];\line\line     public:\line        void process();\line        void printresult();\line\};\line\line void student::read()\line\{\line     cout<<"Enter Roll no. : ";\line     cin>>rl;\line\line     cout<<"Enter Name : ";\line     cin>>nm;\line\}\line\line void student:: display()\line\{\line     cout <<"\\nRoll no. : "<<rl<<endl;\line     cout<<"Name : "<<nm<<endl;\line\line     cout<<"\\n";\par
\}\line\line void marks ::getmarks()\line\{\line     cout<<"Enter marks for 3  subjects : "<<endl;\line     cin>>s1>>s2>>s3;\line\}\line\line void marks ::putmarks()\line\{\line     cout<<"Subject 1 :"<<s1<<endl;\line     cout<<"Subject 2 : "<<s2<<endl;\line     cout<<"Subject 3 : "<<s3<<endl;\line\}\line\line void result::process()\line\{\line     t= s1+s2+s3;\line     p = t/3.0;\line     p>=60?strcpy(div,"First"):p>=50?strcpy(div, "Second"): strcpy(div,"Third");\line\}\line\line void result::printresult()\line\{\line     cout<<"Total = "<<t<<endl;\line\line     cout<<"\\n";\line\line     cout<<"Percentage  = "<<p<<endl;\line     cout<<"Division = "<<div<<endl;\line\}\line\line int main()\line\{\line     result x;\line\line     x.read();\line     x.getmarks();\line     x.process();\line     x.display();\line     x.putmarks();\line     x.printresult();\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter Roll no. : 1\par
Enter Name : Yogesh\par
Enter marks for 3  subjects :\par
87\par
98\par
76\par
\par
Roll no. : 1\par
Name : Yogesh\par
\par
Subject 1 :87\par
Subject 2 : 98\par
Subject 3 : 76\par
Total = 261\par
\par
Percentage  = 87\par
Division = First\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Hybrid Inheritance Example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line class A\line\{\line     public:\line         int l;\line         void len()\line         \{\line            cout<<"Lenght : ";\line            cin>>l;\line         \}\line\};\line\line class B : public A\line\{\line     public:\line         int b,c;\line        void l_into_b()\line        \{\line            len();\line            cout<<"Breadth : ";\line            cin>>b;\line            c=b*l;\line        \}\line\};\line\line class C\line\{\line     public:\line         int h;\line         void height()\line         \{\line            cout<<"Height : ";\line            cin>>h;\line         \}\line\};\line\line //Hybrid Inheritance Level\line class D : public B , public C\line\{\line     public:\line         int res;\line         void result()\line         \{\line            l_into_b();\line            height();\line            res=h*c;\line\line            cout<<"\\n";\line            cout<<endl<<"Result (l*b*h) : "<<res;\line         \}\line\};\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 int main()\line\{\line D dObj;\line dObj.result();\line\line return 0;\line\}\par
OUTPUT\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Lenght : 5\par
Breadth : 6\par
Height : 7\par
\par
Result (l*b*h) : 210\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Operator Overloading Example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line using namespace std;\line\line class Box\line\{\line    public:\line\line       double getVolume(void)\line       \{\line          return length * breadth * height;\line       \}\line       void setLength( double len )\line       \{\line           length = len;\line       \}\line\line       void setBreadth( double bre )\line       \{\line           breadth = bre;\line       \}\line\line       void setHeight( double hei )\line       \{\line           height = hei;\line       \}\line       // Overload + operator to add two Box objects.\line       Box operator+(const Box& b)\line       \{\line          Box box;\line          box.length = this->length + b.length;\line          box.breadth = this->breadth + b.breadth;\line          box.height = this->height + b.height;\line          return box;\line       \}\line    private:\line       double length;      // Length of a box\line       double breadth;     // Breadth of a box\line       double height;      // Height of a box\line\};\line // Main function for the program\line int main( )\line\{\line    Box Box1;                // Declare Box1 of type Box\line    Box Box2;                // Declare Box2 of type Box\line    Box Box3;                // Declare Box3 of type Box\line    double volume = 0.0;     // Store the volume of a box here\line\line    // box 1 specification\line    Box1.setLength(6.0);\line    Box1.setBreadth(7.0);\line    Box1.setHeight(5.0);\line\line    // box 2 specification\line    Box2.setLength(12.0);\line    Box2.setBreadth(13.0);\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Box2.setHeight(10.0);\line\line // volume of box 1\line volume = Box1.getVolume();\line cout << "Volume of Box1 : " << volume <<endl;\line\line // volume of box 2\line volume = Box2.getVolume();\line cout << "Volume of Box2 : " << volume <<endl;\line\line // Add two object as follows:\line Box3 = Box1 + Box2;\line\line // volume of box 3\line volume = Box3.getVolume();\line cout << "Volume of Box3 : " << volume <<endl;\line\line return 0;\line\}\par
OUTPUT\par
\f1\fs20 Volume of Box1 : 210 Volume of Box2 : 1560 Volume of Box3 : 5400 \f0\fs24\par
Friend Function Example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 /* C++ program to demonstrate the working of friend function.*/\line #include <iostream>\line\line using namespace std;\line\line class Distance\line\{\line     private:\line         int meter;\line     public:\line         Distance(): meter(0)\{ \}\line         //friend function\line         friend int func(Distance);\line\line\};\line\line //function definition\line int func(Distance d)\line\{\line     //accessing private data from non-member function\line     d.meter = 10;\line     return d.meter;\line\line\}\line\line int main()\line\{\line\line     Distance D;\line     //using friend function\line     cout<<"Distace: "<<func(D)<<"\\n";\line     return 0;\line\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
\f1\fs20 Distace: 10 \f0\fs24\par
Pure Virtual Function Example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line //Abstract base class\line class Base\line\{\line  public:\line     //Pure Virtual Function\line     virtual void show() = 0;\line\};\line\line\line class Derived:public Base\line\{\line  public:\line     void show()\line     \{\line         cout << "Implementation of Virtual Function in Derived class";\line     \}\line\};\line\line int main()\line\{\line  Base *b;\line\line  Derived d;\line  b = &d;\line  b->show();\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Implementation of Virtual Function in Derived class\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Merge Singly linked list \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <cstdlib>\line\line using namespace std;\line\line typedef struct linked_list\line\{\line     int data;\line     struct linked_list *next;\line\}\line Linked_list;\line\line //for adding node\line int add_node(Linked_list **head, int d)\line\{\line     Linked_list *l = new Linked_list;\line     if(l == NULL) return 0;\line\line     Linked_list *t = *head;\line     l->data = d;\line     l->next = NULL;\line\line     if(*head == NULL)\line     \{\line         *head = l;\line         return 1;\line     \}\line\line     while(t->next != NULL)\line     \{\line         t = t->next;\line     \}\line\line     t->next = l;\line\line     return 1;\line\}\line\line //print the value which are there in linked list\line void print_list(Linked_list *head)\line\{\line     while(head != NULL)\line     \{\line         cout << head->data << " ";\line         head = head->next;\line     \}\line     cout << endl;\line\}\line\line void del_list(Linked_list *head)\line\{\line     while(head != NULL)\line     \{\line         Linked_list *t = head ->next;\line         delete head;\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 head = t;\line\}\line\}\line\line Linked_list * merge_list(Linked_list *l1, Linked_list *l2)\line\{\line Linked_list *h = l1, *r = l1, t;\line\line if(l1 == NULL)\line\{\line return l2;\line\}\line\line if(l2 == NULL)\line\{\line return l1;\line\}\line\line if(l1->data < l2->data)\line\{\line h = r = l1;\line l1 = l1->next;\line\}\line else\line\{\line h = r = l2;\line l2 = l2->next;\line\}\line\line while(l1->next != NULL && l2->next != NULL)\line\{\line if(l1->data < l2->data)\line\{\line r->next = l1;\line l1 = l1->next;\line r = r->next;\line\}\line else\line\{\line r->next = l2;\line l2 = l2->next;\line r = r->next;\line\}\line\}\line\line if(l1->next != NULL)\line\{\line r->next = l1;\line\}\line\line if(l2->next != NULL)\line\{\line r->next = l2;\line\}\line\line return h;\line\}\line\line\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 //declaration of main method\line int main(int argc, char* argv[])\line\{\line     Linked_list *l1 = NULL;\line     Linked_list *l2 = NULL;\line\line     for(int i = 0; i < 10; i ++)\line     \{\line         add_node(&l1, i * 3);\line     \}\line\line     print_list(l1);//it will print first linked list\line\line     for(int i = 0; i < 10; i ++)\line     \{\line         add_node(&l2, i * 7);\line     \}\line\line     print_list(l2); //it will print 2nd linked list\line\line     Linked_list *h = merge_list(l1, l2);\line\line     print_list(h);\line\line     del_list(h);\line\line  return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
0 3 6 9 12 15 18 21 24 27\par
0 7 14 21 28 35 42 49 56 63\par
0 0 3 6 7 9 12 14 15 18 21 21 24 28 35 42 49 56 63\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Prime number using Constructor \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<conio.h>\line using namespace std;\line\line class prime\line\{\line     int num,k,i;\line\line     public:prime(int x)  //declaration of constructor\line     \{\line         num=x;\line     \}\line\line     void check()\line     \{\line         k=1;\line         \{\line             for(i=2;i<=num/2;i++)\line             \{\line                 if(num%i==0)\line                 \{\line                     k=0;\line                     break;\line                 \}\line                 else\line                 \{\line                     k=1;\line                 \}\line             \}\line\line         \}\line     \}\line\line     void show()\line     \{\line         if(k==1)\line         \{\line             cout<<"\\n"<<num<<" is a prime number.";\line         \}\line         else\line         \{\line             cout<<"\\n"<<num<<" is Not a prime number.";\line         \}\line     \}\line\};\line\line //declaration of main function\line int main()\line\{\line\line     int a;\line     cout<<"Enter the Number : ";\line     cin>>a;\line     prime obj(a);   //calling constructor\line     obj.check();\par
  obj.show();\line\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output\par
Enter the Number : 7 7 is a prime number.\par
setprecision Manipulator \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 //using setprecision manipulator\line  #include <iostream>\line  #include <iomanip>\line  using namespace std;\line  int main ()\line  \{\line     float  num1,num2,result;\line     num1=20;\line     num2=3;\line     result=num1/num2;\line\line     //use while displaying a floating point value\line     cout << setprecision (1) << result << endl;\line     cout << setprecision (2) << result << endl;\line     cout << setprecision (3) << result << endl;\line     cout << setprecision (4) << result << endl;\line\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
7 6.7 6.67 6.667\par
Using ws manipulator \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <iomanip>\line using namespace std;\line\line int main ( )\line\{\line     char empname [100];\line     cout<<"Enter a employee name : ";\line\line     //ws is use to add white spaces\line     cin>>ws;\line     cin>>empname;\line     cout<<"\\n";\line     cout<<"Employee name = "<<empname;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter a employee name : John Employee name = John\par
Operations using Class \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line using namespace std;\line\line //define class\line class operations\line\{\line     //member variables\line     public:\line         int num1,num2;\line\line     //member function or methods\line     public:\line        void add()\line        \{\line            cout<<"enter two number for addition : ";\line            cin>>num1>>num2;\line            cout<<"addition = "<<num1+num2;\line            cout<<"\\n";\line        \}\line\line         void sub()\line        \{\line            cout<<"enter two number for subtraction : ";\line            cin>>num1>>num2;\line            cout<<"addition = "<<num1-num2;\line            cout<<"\\n";\line        \}\line\line         void mul()\line        \{\line            cout<<"enter two number for multiplication : ";\line            cin>>num1>>num2;\line            cout<<"addition = "<<num1*num2;\line            cout<<"\\n";\line        \}\line\line         void div()\line        \{\line            cout<<"enter two number for division : ";\line            cin>>num1>>num2;\line            cout<<"addition = "<<(float)num1/num2;\line            cout<<"\\n";\line        \}\line\};\line  int main()\line  \{\line      //creation of object\line       operations op1;\line       op1.add();\line       op1.sub();\line       op1.mul();\line       op1.div();\line       return 0;\line  \}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 OUTPUT\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
enter two number for addition : 1   2\par
addition = 3\par
enter two number for subtraction : 5  2\par
addition = 3\par
enter two number for multiplication : 4  6\par
addition = 24\par
enter two number for division : 6  8\par
addition = 0.75\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Constructor and Destructor Demo \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line //class creation\line class CubeDemo\line\{\line     //member variable and member function declaration\line     public:\line         int side;\line\line         //constructor declaration\line         CubeDemo()\line          \{\line           side=8;\line          \}\line         //destructor declaration\line         ~CubeDemo()\line          \{\line           cout<<"\\nDestructor called...";\line          \}\line\line\};\line\line //declaration of main method\line\line int main()\line\{\line     //object creation\line     CubeDemo cdemoobj;\line     cout<<"";\line     cout << cdemoobj.side;\line\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
8 Destructor called...\par
Method Overloading Example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 //program to show how method overloading works\line\line # include<iostream>\line\line using namespace std;\line\line //area method with one parameter\line int area(int side)\line\{\line  return side*side;\line\}\line\line //area method with two parameter\line int area(int l , int b)\line\{\line  return l*b;\line\}\line\line int main()\line\{\line\line  int (*para1)(int);\line  int (*para2)(int,int);\line\line  para1=area;\line  para2=area;\line\line  cout<<"Address of area(int) : "<<(unsigned int)para1<<endl;\line  cout<<"Address of area(int,int) : "<<(unsigned int)para2<<endl;\line\line  cout<<"Invoking area(int) via para1 : "<<para1(20)<<endl;\line  cout<<"Invoking area(int,int) via para2 : "<<para2(10,20);\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Address of area(int) : 4199232 Address of area(int,int) : 4199244 Invoking area(int) via para1 : 400 Invoking area(int,int) via para2 : 200\par
Swap two numbers using Call By Value \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 //program to show how call by value works\line\line #include<iostream>\line using namespace std;\line\line //function definition\line void swap(int x, int y)\line\{\line     int z;\line     z = x;\line     x = y;\line     y = z;\line     cout<<"Swapped value of a is  : "<< x<<endl;\line     cout<<"Swapped value of b is : "<<y<<endl;\line\}\line\line int main (int argc, char *argv[])\line\{\line     //variable declaration\line     int a ,b;\line\line     //take user input\line     cout<<"Enter Two numbers : ";\line     cin>>a>>b;\line\line     cout<<"Original values of a  and b  are : "<<endl;\line     cout<<"Value of a is : "<<a<<endl;\line     cout<<"Value of b is : "<<b<<endl;\line\line     //call to swap function\line     swap(a, b);\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 OUTPUT\par
Enter Two numbers : 4 5 Original values of a and b are : Value of a is : 4 Value of b is : 5 Swapped value of a is : 5 Swapped value of b is : 4\par
Sum of Numbers using Function \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 //program to add N integers using function\line #include<iostream>\line using namespace std;\line\line //function declaration\line int add(int num);\line\line //main method\line int main()\line\{\line     //variable declaration\line     int num;\line\line     //take input from user\line     cout << "Enter a positive integer : ";\line     cin >> num;\line\line     //calling add function\line     cout << "Sum of n integer is :  " << add(num);\line     return 0;\line\}\line\line //method definition\line int add(int num)\line\{\line     if(num!=0)\line     \{\line         return num+add(num-1);\line     \}\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter a positive integer : 2 Sum of n integer is : 3\par
Constructor overloading \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line using namespace std;\line class Area\line\{\line     private:\line        int length;\line        int breadth;\line\line     public:\line         // Constructor without argument\line        Area(): length(5), breadth(2)\line        \{\line        \}\line        // Constructor with two argument\line        Area(int l, int b): length(l), breadth(b)\line        \{ \}\line        void GetLength()\line        \{\line            cout<<"Enter length and breadth : ";\line            cin>>length>>breadth;\line        \}\line        int AreaCalculation()\line         \{\line            return (length*breadth);\line         \}\line        void DisplayArea(int temp)\line        \{\line            cout<<"Area is : "<<temp<<endl;\line        \}\line\};\line int main()\line\{\line     Area objarea1,objarea2(24,2);\line     int temp;\line     objarea1.GetLength();\line     cout<<"Area when default constructor is called."<<endl;\line     temp=objarea1.AreaCalculation();\line     objarea1.DisplayArea(temp);\line     cout<<"Area when (parameterized constructor is called."<<endl;\line     temp=objarea2.AreaCalculation();\line     objarea2.DisplayArea(temp);\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter length and breadth : 5 7 Area when default constructor is called. Area is : 35 Area when (parameterized constructor is called. Area is : 48\par
Copy constructor \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line class Point\line\{\line private:\line     int x, y;\line public:\line     Point(int x1, int y1) \line     \{ \line         x = x1; y = y1; \line     \}\line\line     // Copy constructor\line     Point(const Point &p2)\line     \{\line         x = p2.x;\line         y = p2.y;\line     \}\line\line     int getX()\line     \{\line          return x;\line     \}\line     int getY()\line     \{\line         return y;\line     \}\line\};\line\line int main()\line\{\line     // simple constructor is called\line     Point objpoint1(53, 13);\line     // Copy constructor is called\line     Point objpoint2 = objpoint1;\line     cout << "objpoint1.x : " << objpoint1.getX() << ", objpoint1.y : " << objpoint1.getY();\line     cout << "\\nobjpoint2.x : " << objpoint2.getX() << ", objpoint2.y : " << objpoint2.getY();\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
objpoint1.x : 53, objpoint1.y : 13 objpoint2.x : 53, objpoint2.y : 13\par
Read Char using cin example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <stdlib.h>\line\line using namespace std;\line\line int main()\line\{\line char mychar[100];\line int i = 0;\line //while the character is not a new line\line while((mychar[i] = cin.get()) != '\\n')\line i++;\line\line mychar[i] = NULL;\line //display characters\line cout<<mychar<<endl;\line\line return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Hello\par
Hello\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Print Time in 24 hrs and Standard format \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<conio.h>\line\line using namespace std;\line\line int main()\line\{\line\line\line\line    int hours,mins,seconds,x;\line\line    cout<<"Enter hours=";\line\line    cin>>hours;\line\line    cout<<"\\nEnter minutes=";\line\line    cin>>mins;\line\line    cout<<"\\nEnter seconds=";\line\line    cin>>seconds;\line\line    if(hours > 24)\line\line     \{\line\line      cout<<"Invalid Entery";\line\line    \}\line\line    else\line\line    \{\line\line        cout<<"\\n24 Hours Format\\n";\line\line cout<<"Hours  :  Mins  :  Seconds\\n"<<"  "<<hours<<"  :     "<<mins<<"   :     "<<seconds<<"\\n";\line\line\line   if(hours > 12)\line\line\{\line\line   hours=hours-12;\line\line   cout<<"12 Hours Format\\n";\line\line cout<<"Hours  :  Mins  :  Seconds\\n"<<"  "<<hours<<"  :     "<<mins<<"   :     "<<seconds;\line\line   \}\line\par
\line        else\line\line   \{\line\line  cout<<"12 Hours Format\\n";\line\line  cout<<"Hours  :  Mins  :  Seconds\\n"<<" "<<hours<<": "<<mins<<"   :        "<<seconds;\line\line   \}\line\line    \}\line\line\}                            // end of main\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter hours=4\par
\par
Enter minutes=44\par
\par
Enter seconds=33\par
\par
24 Hours Format\par
Hours  :  Mins  :  Seconds\par
  4  :     44   :     33\par
12 Hours Format\par
Hours  :  Mins  :  Seconds\par
 4: 44   :        33\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Hello World Example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line  \line using namespace std;\line  \line int main()\line\{\line  cout << "Hello World\\n";\line  return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 OUTPUT\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Hello World\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Hello World using Class \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line  \line using namespace std;\line  \line // Creating class\line  \line class Message\line\{\line   public:\line  \line     void display() \{\line       cout << "Hello World\\n";\line     \}\line\};\line  \line int main()\line\{\line  Message c;    // Creating object\line  c.display();  // Calling function\line  \line  return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Hello World\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Multiplication Table \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int num;\line\line     cout<<"Enter number to find multiplication table : ";\line     cin>>num;\line\line     for(int a=1;a<=10;a++)\line         cout<<num<<" * "<<a<<" = "<<num*a<<endl;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter number to find multiplication table : 19\par
19 * 1 = 19\par
19 * 2 = 38\par
19 * 3 = 57\par
19 * 4 = 76\par
19 * 5 = 95\par
19 * 6 = 114\par
19 * 7 = 133\par
19 * 8 = 152\par
19 * 9 = 171\par
19 * 10 = 190\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Check vowel using switch statement \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line int main()\line\{\line   char ch;\line\line   cout<<"Input a character : ";\line   cin>>ch;\line\line   switch(ch)\line   \{\line     case 'a':\line     case 'A':\line     case 'e':\line     case 'E':\line     case 'i':\line     case 'I':\line     case 'o':\line     case 'O':\line     case 'u':\line     case 'U':\line       cout<<ch<<" is a vowel.";\line       break;\line     default:\line       cout<<ch<<" is not a vowel.";\line   \}\line\line   return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Input a character : u\par
u is a vowel.\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Basic Calculator \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 # include <iostream>\line using namespace std;\line int main()\line\{\line     char operation;\line     float num1,num2;\line     cout << "Enter operator either + or - or * or /: ";\line     cin >> operation;\line     cout << "Enter two operands: ";\line     cin >> num1 >> num2;\line     switch(operation) \{\line         case '+':\line             cout << num1+num2;\line             break;\line         case '-':\line             cout << num1-num2;\line             break;\line         case '*':\line             cout << num1*num2;\line             break;\line         case '/':\line             cout << num1/num2;\line             break;\line         default:\line             /* If operator is other than +, -, * or /, error message is shown */\line             cout << "Error! operator is not correct";\line             break;\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter operator either + or - or * or /: +\par
Enter two operands: 4 2\par
6\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 FizzBuzz Program \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line int main()\line\{\line     for(int i=1;i<=100;i++)\line     \{\line         if(i%15==0)\line         \{\line             cout<<"FizzBuzz"<<endl;\line         \}\line         else if(i%3==0)\line         \{\line             cout<<"Fizz"<<endl;\line         \}\line         else if(i%5==0)\line         \{\line             cout<<"Buzz"<<endl;\line         \}\line         else\line         \{\line             cout<<i<<endl;\line         \}\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 1\par
2\par
Fizz\par
4\par
Buzz\par
Fizz\par
7\par
8\par
Fizz\par
Buzz\par
11\par
Fizz\par
13\par
14\par
FizzBuzz\par
16\par
17\par
Fizz\par
19\par
Buzz\par
Fizz\par
22\par
23\par
Fizz\par
Buzz\par
26\par
Fizz\par
28\par
29\par
FizzBuzz\par
31\par
32\par
Fizz\par
34\par
Buzz\par
Fizz\par
37\par
38\par
Fizz\par
Buzz\par
41\par
Fizz\par
43\par
44\par
FizzBuzz\par
46\par
47\par
Fizz\par
49\par
Buzz\par
Fizz\par
52\par
53\par
Fizz\par
Buzz\par
56\par
Fizz\par
58\par
59\par
FizzBuzz\par
61\par
62\par
Fizz\par
64\par
Buzz\par
Fizz\par
67\par
68\par
Fizz\par
Buzz\par
71\par
Fizz\par
73\par
74\par
FizzBuzz\par
76\par
77\par
Fizz\par
79\par
Buzz\par
Fizz\par
82\par
83\par
Fizz\par
Buzz\par
86\par
Fizz\par
88\par
89\par
FizzBuzz\par
91\par
92\par
Fizz\par
94\par
Buzz\par
Fizz\par
97\par
98\par
Fizz\par
Buzz\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Symbol Table \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 //Request No.16635\line\line #include<stdio.h>\line #include<conio.h>\line #include<string.h>\line #include<stdlib.h>#define NULL 0\line\line int size=0;\line void Insert();\line void Display();\line void Delete();\line int Search(char lab[]);\line void Modify();\line struct SymbTab\line\{\line     char label[10],symbol[10];\line     int addr;\line     struct SymbTab *next;\};\line     struct SymbTab *first,*last;\line     \line     void main()\line     \{\line         int op,y;\line         char la[10];\line\line         do\line         \{\line             printf("\\n\\tSYMBOL TABLE IMPLEMENTATION\\n");\line             printf("\\n\\t1.INSERT\\n\\t2.DISPLAY\\n\\t3.DELETE\\n\\t4.SEARCH\\n\\t5.MODIFY\\n\\t6.END\\n");\line\line             printf("\\n\\tEnter your option : ");\line             scanf("%d",&op);\line\line             switch(op)\line             \{\line                 case 1:\line                 Insert();\line                 break;\line\line                 case 2:\line                 Display();\line                 break;\line\line                 case 3:\line                 Delete();\line                 break;\line\line                 case 4:\line                 printf("\\n\\tEnter the label to be searched : ");\line                 scanf("%s",la);\line\line                 y=Search(la);\line                 printf("\\n\\tSearch Result:");\line\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 if(y==1)\line printf("\\n\\tThe label is present in the symbol table\\n");\line else\line printf("\\n\\tThe label is not present in the symbol table\\n");\line break;\line\line case 5:\line Modify();\line break;\line\line case 6:\line exit(0);\line\}\line\}\line while(op<6);\line getch();\line\}\line\line void Insert()\line\{\line int n;\line char l[10];\line\line printf("\\n\\tEnter the label : ");\line scanf("%s",l);\line\line n=Search(l);\line if(n==1)\line\{\line printf("\\n\\tThe label exists already in the symbol table\\n\\tDuplicate can't be inserted");\line\}\line\line else\line\{\line struct SymbTab *p;\line p=malloc(sizeof(struct SymbTab));\line strcpy(p->label,l);\line printf("\\n\\tEnter the symbol : ");\line scanf("%s",p->symbol);\line printf("\\n\\tEnter the address : ");\line scanf("%d",&p->addr);\line p->next=NULL;\line\line if(size==0)\line\{\line first=p;\line last=p;\line\}\line else\line\{\line last->next=p;\line last=p;\line\}\line size++;\line\par
\}\line printf("\\n\\tLabel inserted\\n");\line\}\line\line\line void Display()\line\{\line int i;\line struct SymbTab *p;\line p=first;\line\line printf("\\n\\tLABEL\\t\\tSYMBOL\\t\\tADDRESS\\n");\line\line for(i=0;i<size;i++)\line\{\line printf("\\t%s\\t\\t%s\\t\\t%d\\n",p->label,p->symbol,p->addr);\line p=p->next;\line\}\line\}\line\line int Search(char lab[])\line\{\line int i,flag=0;\line struct SymbTab *p;\line p=first;\line\line for(i=0;i<size;i++)\line\{\line if(strcmp(p->label,lab)==0)\line flag=1;\line p=p->next;\line\}\line return flag;\line\}\line\line void Modify()\line\{\line char l[10],nl[10];\line int add,choice,i,s;\line struct SymbTab *p;\line p=first;\line printf("\\n\\tWhat do you want to modify?\\n");\line printf("\\n\\t1.Only the label\\n\\t2.Only the address\\n\\t3.Both the label and address\\n");\line printf("\\tEnter your choice : ");\line scanf("%d",&choice);\line switch(choice)\line\{\line case 1:\line printf("\\n\\tEnter the old label : ");\line scanf("%s",l);\line s=Search(l);\line if(s==0)\line\{\line printf("\\n\\tLabel not found\\n");\line\}\line else\line\{\line\par
printf("\\n\\tEnter the new label : ");\line scanf("%s",nl);\line for(i=0;i<size;i++)\line\{\line\line if(strcmp(p->label,l)==0)\line\{\line strcpy(p->label,nl);\line p=p->next;\line\}\line\line printf("\\n\\tAfter Modification:\\n");\line Display();\line\}\line\line break;\line case 2:\line printf("\\n\\tEnter the label where the address is to be modified : ");\line scanf("%s",l);\line s=Search(l);\line\line if(s==0)\line\{\line printf("\\n\\tLabel not found\\n");\line\}\line else\line\{\line printf("\\n\\tEnter the new address : ");\line scanf("%d",&add);\line for(i=0;i<size;i++)\line\{\line if(strcmp(p->label,l)==0)\line\{\line p->addr=add;\line p=p->next;\line\}\line\}\line\line printf("\\n\\tAfter Modification:\\n");\line Display();\line\}\line break;\line\line case 3:\line printf("\\n\\tEnter the old label : ");\line scanf("%s",l);\line s=Search(l);\line\line if(s==0)\line\{\line printf("\\n\\tLabel not found\\n");\line\}\line else\line\{\line printf("\\n\\tEnter the new label : ");\line scanf("%s",nl);\line\par
\line printf("\\n\\tEnter the new address : ");\line scanf("%d",&add);\line\line for(i=0;i<size;i++)\line\{\line if(strcmp(p->label,l)==0)\line\{\line strcpy(p->label,nl);\line p->addr=add;\line\}\line\line p=p->next;\line\}\line\line printf("\\n\\tAfter Modification:\\n");\line Display();\line\} \line break;\line\}\line\}\line\line\par
void Delete()\line\{\line int a;\line char l[10];\line struct SymbTab *p,*q;\line p=first;\line\line printf("\\n\\tEnter the label to be deleted : ");\line scanf("%s",l);\line a=Search(l);\line\line if(a==0)\line\{\line printf("\\n\\tLabel not found\\n");\line\}\line else\line\{\line if(strcmp(first->label,l)==0)\line\{\line first=first->next;\line\}\line else if(strcmp(last->label,l)==0)\line\{\line q=p->next;\line\line while(strcmp(q->label,l)!=0)\line\{\line p=p->next;\line q=q->next;\line\}\line\line p->next=NULL;\line last=p;\line\}\line else\line\{\line q=p->next;\line\line while(strcmp(q->label,l)!=0)\line\{\line p=p->next;\line q=q->next;\line\}\line\line p->next=q->next;\line\}\line size--;\line\line printf("\\n\\tAfter Deletion:\\n");\line Display();\line\}\line\}\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
OUTPUT\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 SYMBOL TABLE IMPLEMENTATION 1.INSERT 2.DISPLAY 3.DELETE 4.SEARCH 5.MODIFY 6.END\par
Absolute value of a number \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line\line int main()\line\{\line  float num;\line  cout<<"Enter any number:";\line  cin>>num;\line\line  if(num>0)\line     \{\line          cout<<"The absolute value of number is:"<<num;\line     \}\line  else\line     \{\line          cout<<"The absolute value of number is:"<<-(num);\line     \}\line\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter any number:-9 The absolute value of number is:9\par
Largest and Smallest number in an vector \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<conio.h>\line using namespace std;\line\line int main()\line\{\line     int i,num;\line\line     cout<<"Enter how many elements : ";\line     cin>>num;\line\line     int vec[num],large,small;\line\line     cout<<"Enter values in the vector";\line     cout<<endl;\line\line     for(i=0;i<num;i++)\line     \{\line         cin>>vec[i];\line     \}\line\line     large=vec[1];\line     small=vec[1];\line\line     for(i=0;i<num;i++)\line     \{\line         if(vec[i]>large)\line         \{\line             large=vec[i];\line         \}\line\line         else\line         \{\line             if(vec[i]<small)\line             \{\line                 small=vec[i];\line             \}\line\line         \}\line\line     \}\line\line     cout<<endl<<"Largest element = "<<large;\line     cout<<endl<<"Smallest element = "<<small;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter how many elements : 5 Enter values in the vector 6 1 3 9 3 Largest element = 9 Smallest element = 1\par
Leap Year \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<conio.h>\line using namespace std;\line\line\line int main()\line\{\line\line    //declare variable\line    int year;\line\line    //take user input for year\line    cout<<"Enter year : ";\line    cin>>year;\line\line    if(year%4==0 || year%400==0 || year%100==0)\line    cout<<"This is a leap year"<<endl;\line\line    else\line    cout<<"This is not a leap year"<<endl;\line\line    return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter year : 2016 This is a leap year\par
Display System Date and Time \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <ctime>\line\line using namespace std;\line\line int main( )\line\{\line    // current date/time based on your system\line    time_t nowuptime = time(0);\line\line    // convert current time  to string format\line    char* date = ctime(&nowuptime);\line\line\line    //print the value\line    cout << "The localhost date and time is : " <<"\\n";\line    cout<<date << endl;\line\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
The localhost date and time is: Fri Jan 22 13:11:30 2016\par
Count Vowels Consonants Numbers and Blank spaces in a sentance \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<cstring>\line using namespace std;\line\line int main()\line\{\line     //variable declaration\line     char str[150];\line     int i,vowel,cons,ch,digit,space,o;\line     o=vowel=cons=ch=digit=space=0;\line\line     //take input from user\line     cout << "Enter a string : " << endl;\line     cin.getline(str, 150);\line\line     //logic for checking vowels,consonants,digit and blank spaces\line     for(i=0;str[i]!='\\0';++i)\line     \{\line         if(str[i]=='a'|| str[i]=='e'|| str[i]=='i'|| str[i]=='o'|| str[i]=='u'|| str[i]=='A'|| str[i]=='E'|| str[i]=='I'\line            || str[i]=='O'|| str[i]=='U')\line         \{\line             ++vowel;\line         \}\line         else if((str[i]>='a'&& str[i]<='z')|| (str[i]>='A'&& str[i]<='Z'))\line         \{\line             ++cons;\line         \}\line\line         else if(str[i]>='0'&&cons<='9')\line         \{\line             ++digit;\line         \}\line         else if (str[i]==' ')\line         \{\line             ++space;\line         \}\line\line     \}\line\line     //display output\line     cout << "\\nNumbers of Vowels : " << vowel << endl;\line     cout << "Numbers of Consonants : " << cons << endl;\line     cout << "Numbers of Digits : " << digit << endl;\line     cout << "Numbers of White Spaces : " << space << endl;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter a string : i love programming very much Numbers of Vowels : 8 Numbers of Consonants : 16 Numbers of Digits : 0 Numbers of White Spaces : 4\par
Date Format \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 // Display the current date in the formats of "2007-11-10"\line // and "Sunday, November 10, 2007".\line\line #include <vector>\line #include <string>\line #include <iostream>\line #include <ctime>\line\line class Date\line\{\line  struct tm ltime;\line\line  public:\line  \line  /// Default constructor.\line  Date()\line  \{\line   time_t t = time(0);\line   localtime_r(&t, &ltime);\line  \}\line\line  std::string getDate(const char* fmt)\line  \{\line   char out[200];\line   size_t result = strftime(out, sizeof out, fmt, &ltime);\line   return std::string(out, out + result);\line  \}\line\line  std::string getISODate() \{return getDate("%F");\}\line\line  std::string getTextDate() \{return getDate("%A, %B %d, %Y");\}\line\};\line\line int main()\line\{\line  Date d;\line  std::cout << d.getISODate() << std::endl;\line  std::cout << d.getTextDate() << std::endl;\line  return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 2016-03-16\par
Wednesday, March 16, 2016\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Calendar \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<string>\line #include<iomanip>\line using namespace std;\line\line class Calendar\line\{\line  private:\line   int month;\line   int year;\line   int firstday;\line  \line  public:\line   Calendar(int =03, int =2016);\line   void setFirstDay();\line   void print();\line\};\line\line Calendar :: Calendar (int _month, int _year)\line\{\line  month = _month;\line  year = _year;\line\}\line  \line void Calendar :: setFirstDay()\line\{\line     //This part determines which day will be the first day of that year (0 for Sunday, 1 for Monday, etc.)\line  int day=1;\line  int y = year - (14-month)/12;\line  int m = month +12 * ((14-month) / 12) -2;\line  firstday= (day + y + y / 4 - y / 100 + y / 400 + (31 * m / 12)) % 7;\line\}\line\line void Calendar :: print()\line\{\line  int NumberOfDaysInMonth;\line  int FirstDayOfMonth = 0;\line  int DayOfWeekCounter = 0;\line  int DateCounter = 1;\line\line  switch (month)\line  \{\line    case 1:\line   cout<<setw(21)<<"January "<<year;\line   NumberOfDaysInMonth = 31;\line    break;\line\line    case 2:\line   cout<<setw(21)<<"February "<<year;\line   if (year % 400 == 0 || (year % 4 == 0 && year % 100 != 0))\line     NumberOfDaysInMonth = 29;\line   else\line     NumberOfDaysInMonth = 28;\line     break;\line\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24\line\line case 3:\line cout<<setw(21)<<"March "<<year;\line NumberOfDaysInMonth = 31;\line break;\line\line case 4:\line cout<<setw(21)<<"April "<<year;\line NumberOfDaysInMonth = 30;\line break;\line\line case 5:\line cout<<setw(21)<<"May "<<year;\line NumberOfDaysInMonth = 31;\line break;\line\line case 6:\line cout<<setw(21)<<"June "<<year;\line NumberOfDaysInMonth = 30;\line break;\line\line case 7:\line cout<<setw(21)<<"July "<<year;\line NumberOfDaysInMonth = 31;\line break;\line\line case 8:\line cout<<setw(21)<<"August "<<year;\line NumberOfDaysInMonth = 31;\line break;\line\line case 9:\line cout<<setw(21)<<"September "<<year;\line NumberOfDaysInMonth = 30;\line break;\line\line case 10:\line cout<<setw(21)<<"October "<<year;\line NumberOfDaysInMonth = 31;\line break;\line\line case 11:\line cout<<setw(21)<<"November "<<year;\line NumberOfDaysInMonth = 30;\line break;\line\line case 12:\line cout<<setw(21)<<"December "<<year;\line NumberOfDaysInMonth = 31;\line break;\line\line\}\line\line //Display the days at the top of each month\line\line cout<<"\\nSun Mon Tue Wed Thu Fri Sat";\line cout<<"\\n\\n"<<setw(2);\line\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20  //Determine where the first day begins\line\line  for (FirstDayOfMonth; FirstDayOfMonth < firstday; ++FirstDayOfMonth)\line  \{\line\line   cout<<setw(14);\line  \}\line\line  int tempfirstday=firstday;\line  DateCounter = 1;\line  DayOfWeekCounter = tempfirstday;\line\line  //This loop represents the date display and will continue to run until\line  //the number of days in that month have been reached\line\line  for (DateCounter; DateCounter <= NumberOfDaysInMonth; ++DateCounter)\line  \{\line   cout<<DateCounter<<setw(6);\line   ++DayOfWeekCounter;\line   if (DayOfWeekCounter > 6)\line   \{\line    cout<<"\\n\\n"<<setw(2);\line    DayOfWeekCounter = 0;\line   \}\line  \}\line  cout << " \\n" ;\line\line  tempfirstday = DayOfWeekCounter + 1;\line\}\line\line int main()\line\{\line  Calendar c;\line  c.setFirstDay();\line  c.print();\line  return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
March 2016 Sun Mon Tue Wed Thu Fri Sat 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 \par
Balanced Brackets \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <algorithm>\line #include <iostream>\line #include <string>\line using namespace std;\line\line string generate(int n, char left = '[', char right = ']')\line\{\line     string str(std::string(n, left) + std::string(n, right));\line     random_shuffle(str.begin(), str.end());\line     return str;\line\}\line\line bool balanced(const string &str, char left = '[', char right = ']')\line\{\line     int count = 0;\line     for (string::const_iterator it = str.begin(); it != str.end(); ++it)\line     \{\line         if (*it == left)\line             count++;\line         else if (*it == right)\line             if (--count < 0) return false;\line     \}\line     return count == 0;\line\}\line\line int main()\line\{\line     srand(time(NULL)); // seed rng\line     for (int i = 0; i < 9; ++i)\line     \{\line         string s(generate(i));\line         cout << (balanced(s) ? " ok: " : "bad: ") << s << "\\n";\line     \}\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
ok: ok: [] ok: [[]] bad: ][[]][ bad: [][[]]][ ok: [][[][][]] bad: []]][[[][[]] ok: [[[][][]][]][] bad: ][]]][[[[[][]]][\par
Huffman coding \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <queue>\line #include <map>\line // for CHAR_BIT\line #include <climits> \line #include <iterator>\line #include <algorithm>\line\line const int UniqueSymbols = 1 << CHAR_BIT;\line const char* SampleString = "this is an example for huffman encoding";\line\line typedef std::vector<bool> HuffCode;\line typedef std::map<char, HuffCode> HuffCodeMap;\line\line class INode\line\{\line public:\line     const int f;\line\line     virtual ~INode() \{\}\line\line protected:\line     INode(int f) : f(f) \{\}\line\};\line\line class InternalNode : public INode\line\{\line public:\line     INode *const left;\line     INode *const right;\line\line     InternalNode(INode* c0, INode* c1) : INode(c0->f + c1->f), left(c0), right(c1) \{\}\line     ~InternalNode()\line     \{\line         delete left;\line         delete right;\line     \}\line\};\line\line class LeafNode : public INode\line\{\line public:\line     const char c;\line\line     LeafNode(int f, char c) : INode(f), c(c) \{\}\line\};\line\line struct NodeCmp\line\{\line     bool operator()(const INode* lhs, const INode* rhs) const \{ return lhs->f > rhs->f; \}\line\};\line\line INode* BuildTree(const int (&frequencies)[UniqueSymbols])\line\{\line     std::priority_queue<INode*, std::vector<INode*>, NodeCmp> trees;\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 for (int i = 0; i < UniqueSymbols; ++i)\line\{\line if(frequencies[i] != 0)\line trees.push(new LeafNode(frequencies[i], (char)i));\line\}\line while (trees.size() > 1)\line\{\line INode* childR = trees.top();\line trees.pop();\line\line INode* childL = trees.top();\line trees.pop();\line\line INode* parent = new InternalNode(childR, childL);\line trees.push(parent);\line\}\line return trees.top();\line\}\line\line void GenerateCodes(const INode* node, const HuffCode& prefix, HuffCodeMap& outCodes)\line\{\line if (const LeafNode* lf = dynamic_cast<const LeafNode*>(node))\line\{\line outCodes[lf->c] = prefix;\line\}\line else if (const InternalNode* in = dynamic_cast<const InternalNode*>(node))\line\{\line HuffCode leftPrefix = prefix;\line leftPrefix.push_back(false);\line GenerateCodes(in->left, leftPrefix, outCodes);\line\line HuffCode rightPrefix = prefix;\line rightPrefix.push_back(true);\line GenerateCodes(in->right, rightPrefix, outCodes);\line\}\line\}\line\line int main()\line\{\line // Build frequency table\line int frequencies[UniqueSymbols] = \{0\};\line const char* ptr = SampleString;\line while (*ptr != '\\0')\line ++frequencies[*ptr++];\line\line INode* root = BuildTree(frequencies);\line\line HuffCodeMap codes;\line GenerateCodes(root, HuffCode(), codes);\line delete root;\line\line for (HuffCodeMap::const_iterator it = codes.begin(); it != codes.end(); ++it)\line\{\line std::cout << it->first << " ";\line std::copy(it->second.begin(), it->second.end(),\line std::ostream_iterator<bool>(std::cout));\line\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20  std::cout << std::endl;\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
110 a 1001 c 101010 d 10001 e 1111 f 1011 g 101011 h 0101 i 1110 l 01110 m 0011 n 000 o 0010 p 01000 r 01001 s 0110 t 01111 u 10100 x 10000\par
Generate Random numbers \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<conio.h>\line #include<stdlib.h>\line #include<time.h>\line\line using namespace std;\line\line int main()\line\{\line\line int min,max,i,range,r,x;\line unsigned first = time(NULL);\line\line cout<<"FIRST = " << first <<endl;\line srand(first);\line cout<<"ENTER THE MINIMUM NUMBER :";\line cin>>min;\line cout<<"ENTER THE MAXIMUM NUMBER :";\line cin>>max;\line cout<<"ENTER THE NO.OF TERMS YOU WANT :";\line cin>>x;\line\line range=max-min+1;\line\line for(i=0;i<x;i++)\line  \{\line  r=rand()/100%range+min;\line  cout<<r<<" ";\line  \}\line\line getch();\line\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 FIRST = 1408222966\par
ENTER THE MINIMUM NUMBER :33\par
ENTER THE MAXIMUM NUMBER :55\par
ENTER THE NO.OF TERMS YOU WANT :4\par
35 44 36 37\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Perfect Number example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<conio.h>\line\line using namespace std;\line\line int main()                 //Start of main\line\{\line\line    int i=1, u=1, sum=0;\line    while(i<=500)\line  \{                                  // start of first loop.\line\line    while(u<=500)\line    \{                               //start of second loop.\line      if(u<i)\line      \{\line       if(i%u==0 )\line       sum=sum+u;\line      \}                          //End of if statement\line\line      u++;\line    \}                           //End of second loop\line\line    if(sum==i)\line    \{\line     cout<<i<<" is a perfect number."<<"\\n";\line    \}\line\line    i++;\line    u=1;  sum=0;\line  \}                             //End of First loop\line    getch();\line  \}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 6 is a perfect number.\par
28 is a perfect number.\par
496 is a perfect number.\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Greatest of three numbers \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line int main()\line\{\line     int num1,num2,num3;\line     cout<<" Enter value for first number ";\line     cin>>num1;\line\line     cout<<" Enter value for second number ";\line     cin>>num2;\line\line     cout<<" Enter value for third number ";\line     cin>>num3;\line     if(num1>num2&&num1>num3)\line       \{\line           cout<<" First number is greatest:"<<endl<<"which is= "<<num1;\line       \}\line     else if(num2>num1&&num2>num3)\line       \{\line           cout<<" Second number is greatest"<<endl<<"which is= "<<num2;\line       \}\line     else\line     \{\line         cout<<" Third number is greatest"<<endl<<"whick is= "<<num3;\line     \}\line return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20  Enter value for first number 5\par
 Enter value for second number 6\par
 Enter value for third number 3\par
 Second number is greatest\par
 which is= 6\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Factorial of a number \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\line\{\line\line     int num,factorial=1;\line\line     cout<<"Enter Number To Find Its Factorial:  ";\line\line     cin>>num;\line\line     for(int a=1;a<=num;a++)\line\line     \{\line\line         factorial=factorial*a;\line\line     \}\line     \line     cout<<"Factorial of Given Number is = "<<factorial<<endl;\line\line     return 0;\line\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter Number To Find Its Factorial:  5\par
Factorial of Given Number is = 120\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Swap two numbers \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\line\{\line\line int var1, var2, swap;\line\line  cout<<"Enter value for first integer:  ";\line\line  cin>>var1;\line\line  cout<<"Enter value for second integer:  ";\line\line  cin>>var2;\line\line  cout<<"\\nValues Before swapping:  \\n"<<endl;\line\line  cout<<"First Integer ="<<var1<<endl;\line\line  cout<<"Second Interger ="<<var2<<endl;\line\line               swap=var1;\line\line               var1=var2;\line\line               var2=swap;\line\line  cout<<"\\nValues After swapping:  \\n"<<endl;\line\line  cout<<"First Integer ="<<var1<<endl;\line\line  cout<<"Second Interger ="<<var2<<endl;\line\line  return 0;\line\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter value for first integer:  4\par
Enter value for second integer:  5\par
\par
Values Before swapping:\par
\par
First Integer =4\par
Second Interger =5\par
\par
Values After swapping:\par
\par
First Integer =5\par
Second Interger =4\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Print Fibonacci Series \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line     using namespace std;\line     int main()\line     \{\line        int range, first = 0, second = 1, fibonicci=0;\line        cout << "Enter Range for Terms of Fibonacci Sequence: ";\line        cin >> range;\line        cout << "Fibonicci Series upto " << range << " Terms "<< endl;\line        for ( int c = 0 ; c < range ; c++ )\line        \{\line           if ( c <= 1 )\line              fibonicci = c;\line           else\line           \{\line              fibonicci = first + second;\line              first = second;\line              second = fibonicci;\line           \}\line           cout << fibonicci <<" ";\line        \}\line        return 0;\line     \}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter Range for Terms of Fibonacci Sequence: 5\par
Fibonicci Series upto 5 Terms\par
0 1 1 2 3\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Quotient and Remainder \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line  \line using namespace std;\line int main()\line\{\line     int a = 33, b = 5;\line     cout << "Quotient = " << a / b << endl;\line     cout << "Remainder = "<< a % b << endl;\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Quotient = 6\par
Remainder = 3\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Check Prime Number \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line int main()\line\{\line     int number,count=0;\line     cout<<"Enter number to check its Prime or Not : ";\line     cin>>number;\line\line     for(int a=1;a<=number;a++)\line         if(number%a==0)\line             count++;\line\line     if(count==2)\line         cout<<"Its Prime Number \\n";\line     else\line         cout<<"Its not a Prime Number\\n";\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter number to check its Prime or Not : 13\par
Its Prime Number\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Average of Positive Numbers using Recursion \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line void recurse (float sum, int i ) // Each call gets its own count\line\{\line     int num = 0;\line\line     cout<<"Enter another positive integer: ";\line     cin>>num;\line\line     if(num < 0)\{\line\line         cout<<"ERROR\\n";\line         recurse (sum, i ); //First function call, so it starts at one\line\line     \}\line      else if(num == 0)\{\line\line         if(sum == 0)\{\line             cout<<"NO AVERAGE";\line         \}\line         else \{\line             cout<<"\\nThe Average of Positive Integers is "<<(sum/i)<<"\\n";\line         \}\line\line     \}\line     else \{\line\line         sum = sum + num;\line         i++;\line         recurse (sum, i );\line     \}\line\}\line\line int main()\line\{\line\line     float num;\line     float sum = 0;\line     int i = 0;\line\line     cout<<"Enter a positive integer: ";\line     cin>>num;\line\line     if(num < 0)\{\line\line         cout<<"ERROR\\n";\line         recurse (sum, i ); //First function call, so it starts at one\line\line     \}\line     else if(num == 0)\{\line\line         cout<<"NO AVERAGE";\line\par
\line\line     \}\line     else \{\line\line         sum = sum + num;\line         i++;\line         recurse (sum, i );\line     \}\line\line\line   return(0);\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter a positive integer: -1\par
ERROR\par
Enter another positive integer: 2\par
Enter another positive integer: 3\par
Enter another positive integer: 0\par
\par
The Average of Positive Integers is 2.5\par
\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Sum of n Numbers \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line int main()\line\{\line     int times, Inp, sum,i;\line\line     times=Inp=sum=i=0;\line\line     cout << "Input the number of integers you want to add:";\line     cin >> times;\line\line     for (i=times; i>0; i--)\line     \{\line         cout << "Enter a number:";\line         cin >> Inp;\line         sum=sum+Inp;\line     \}\line\line     cout<<"The sum of your " << times << " numbers is "<< sum;\line     cout<< "." << endl;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Input the number of integers you want to add:5\par
Enter a number:7\par
Enter a number:1\par
Enter a number:3\par
Enter a number:9\par
Enter a number:5\par
The sum of your 5 numbers is 25.\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Sum of n Squares \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line int main()\line\{\line     int times, Inp, sum,i;\line\line     times=Inp=sum=i=0;\line\line     cout << "Input the number of integers you want to square and add : ";\line     cin >> times;\line\line     for (i=times; i>0; i--)\line     \{\line         cout<<"Enter a number:";\line         cin>>Inp;\line         sum=sum+(Inp*Inp);\line     \}\line\line     cout<<"The sum of squares of " << times << " numbers is "<< sum;\line     cout<< "." << endl;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Input the number of integers you want to square and add : 3\par
Enter a number:4\par
Enter a number:3\par
Enter a number:5\par
The sum of squares of 3 numbers is 50.\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Average of Numbers \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line int main()\line\{\line     int n;\line     double average(0);\line     cout<<"Enter the number of values : ";\line     cin >> n;\line     for(int i = 0; i < n; ++i)\line     \{\line         int value;\line         cin >> value;\line         average += value;\line     \}\line     average /= n;\line     cout<<"Average is "<<average;\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the number of values : 5\par
12\par
35\par
20\par
45\par
95\par
Average is 41.4\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Armstrong Number \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line using namespace std;\line int main()\line\{\line  int n, n1, rem, num=0;\line  \line  cout<<"Enter a positive  integer: ";\line  cin>>n;\line  n1 = n;\line  \line  while(n1!=0)\line  \{\line   rem=n1%10;\line   num+=rem*rem*rem;\line   n1/=10;\line  \}\line  \line  if(num==n)\line  \{\line   cout << n << " is an Armstrong number.";\line  \}\line  else\line  \{\line   cout << n << " is not an Armstrong number.";\line  \}\line  \line  return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter a positive integer: 153\par
153 is an Armstrong number.\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Binary to Decimal \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line int main()\line\{\line     long bin, dec = 0, rem, num, base = 1;\line\line     cout << "Enter the binary number(1s and 0s) : ";\line     cin >> num;\line     bin = num;\line     while (num > 0)\line     \{\line         rem = num % 10;\line         dec = dec + rem * base;\line         base = base * 2;\line         num = num / 10;\line     \}\line     cout << "The decimal equivalent of " << bin << " : " << dec << endl;\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the binary number(1s and 0s) : 1111\par
The decimal equivalent of 1111 : 15\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Decimal to Binary \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line void binary(int num)\line\{\line     int rem;\line\line     if (num <= 1)\line     \{\line         cout << num;\line         return;\line     \}\line     rem = num % 2;\line     binary(num / 2);\line     cout << rem;\line\}\line\line int main()\line\{\line     int dec, bin;\line     cout << "Enter the number : ";\line     cin >> dec;\line\line     if (dec < 0)\line         cout << dec << " is not a positive integer." << endl;\line     else\line     \{\line         cout << "The binary form of " << dec << " is ";\line         binary(dec);\line         cout << endl;\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the number : 64\par
The binary form of 64 is 1000000\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Check whether two numbers are Amicable Numbers \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line int check(int a,int b)\line\{\line     int s=0,i;\line     for(i=1;i<a;i++)\line     \{\line         if(a%i==0)\line         \{\line             s=s+i;\line         \}\line     \}\line\line     if(s==b)\line     \{\line         s=0;\line         for(i=1;i<b;i++)\line         \{\line             if(b%i==0)\line             \{\line                 s=s+i;\line             \}\line         \}\line\line         if(s==a)\line             return 1;\line         else\line             return 0;\line     \}\line\line     return 0;\line\}\line\line int main()\line\{\line     int a,b;\line\line     cout<<"Enter 1st no. : ";\line     cin>>a;\line     cout<<"Enter 2nd no. : ";\line     cin>>b;\line\line     if(check(a,b))\line     \{\line         cout<<a<<" and "<<b<<" are Amicable Number";\line     \}\line     else\line     \{\line         cout<<a<<" and "<<b<<" are not Amicable Number";\line     \}\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Example 1\par
\par
Enter 1st no. : 220\par
Enter 2nd no. : 284\par
220 and 284 are Amicable Number\par
\par
Example 2\par
\par
Enter 1st no. : 110\par
Enter 2nd no. : 184\par
110 and 184 are not Amicable Number\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Swap two numbers using friend function \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line class Sample\line\{\line    private:\line        int x,y;\line    public:\line        void setdata(int a,int b)\line        \{\line           x=a;\line           y=b;\line        \}\line        void showdata()\line        \{\line           cout<<"x="<<x<<"\\ny="<<y;\line        \}\line\line     friend void swap(Sample &s);\line\};\line\line void swap(Sample &s)\line\{\line     int temp;\line     temp=s.x;\line     s.x=s.y;\line     s.y=temp;\line\}\line\line int main()\line\{\line     Sample s;\line     int x,y;\line\line     cout<<"Enter x = ";\line     cin>>x;\line     cout<<"Enter y = ";\line     cin>>y;\line\line     s.setdata(x,y);\line\line     cout<<"\\nBefore Swapping\\n";\line     s.showdata();\line     cout<<"\\nAfter Swapping\\n";\line     swap(s);\line     s.showdata();\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter x = 15\par
Enter y = 5\par
\par
Before Swapping\par
x=15\par
y=5\par
After Swapping\par
x=5\par
y=15\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Reverse of Number \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line using namespace std;\line\line int main()\line\{\line int number, reverse = 0;\line\line cout<<"Input a Number to Reverse and press Enter: ";\line // Taking Input Number in variable number\line cin>> number;\line\line    while(number!= 0)\line    \{\line       reverse = reverse * 10;\line       reverse = reverse + number%10;\line       number = number/10;\line    \}\line    cout<<"New Reversed Number is:  "<<reverse;\line    return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Input a Number to Reverse and press Enter: 123\par
New Reversed Number is:  321\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Find all Prime Factor of the Number \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 # include <iostream>\line # include <math.h>\line\line using namespace std;\line\line void primeFactors(int n)\line\{\line     while (n%2 == 0)\line     \{\line         cout<<"2 ";\line         n = n/2;\line     \}\line\line     for (int i = 3; i <= sqrt(n); i = i+2)\line     \{\line         while (n%i == 0)\line         \{\line             cout<<i<<" ";\line             n = n/i;\line         \}\line     \}\line\line     if (n > 2)\line     \{\line         cout<<n;\line     \}\line\}\line\line int main()\line\{\line     int n;\line     cout<<"Enter number to find all prime factor : ";\line     cin>>n;\line     cout<<"Prime factors are : ";\line     primeFactors(n);\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter number to find all prime factor : 55\par
Prime factors are : 5 11\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Find Primorial(P#) of a number \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int num,i,j,flag,res = 1;\line     cout<<"Enter number : ";\line     cin>>num;\line\line     for(i=2;i<=num;i++)\line     \{\line         flag=0;\line         for(j=2;j<i;j++)\line         \{\line             if(i%j==0)\line             \{\line                 flag=1;\line                 break;\line             \}\line         \}\line         if(flag!=1)\line         \{\line             res *= i;\line         \}\line     \}\line     cout<<num<<"# = "<<res;\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter number : 13\par
13# = 30030\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Count Number of Digits \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line   int n,count=0;\line   cout<<"Enter an integer: ";\line   cin>>n;\line\line   while(n!=0)\line   \{\line       n/=10;\line       ++count;\line   \}\line   cout<<"Number of digits : "<<count;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter an integer: 1234567\par
Number of digits : 7\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Number is Palindrome or Not \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int i,temp,d,revrs=0;\line\line     cout<<"Enter the number : ";\line         cin>>i;\line     temp=i;\line     while(temp>0)\line     \{\line         d=temp%10;\line         temp/=10;\line         revrs=revrs*10+d;\line\line     \}\line     if(revrs==i)\line         cout<<i<<" is Palindrome";\line     else\line         cout<<i<<" is not Palindrome";\line\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the number : 121\par
121 is Palindrome\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Arithmetic Operation of a Complex number using Structure \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<conio.h>\line #include<math.h>\line using namespace std;\line struct complex\line\{\line  float rel;\line  float img;\line\}s1,s2;\line\line int main()\line\{\line\line  float a,b;\line  cout<<"Enter real and imaginary part of 1st complex number:";\line  cin>>s1.rel>>s1.img;\line  cout<<"Enter real and imaginary part of 2nd complex number:";\line  cin>>s2.rel>>s2.img;\line\line   //Addition\line  a=(s1.rel)+(s2.rel);\line  b=(s1.img)+(s2.img);\line  cout<<"\\nAddition: "<<"("<<a<<")"<<"+"<<"("<<b<<")"<<"i";\line\line   //Subtraction\line  a=(s1.rel)-(s2.rel);\line  b=(s1.img)-(s2.img);\line  cout<<"\\nSubtraction: "<<"("<<a<<")"<<"+"<<"("<<b<<")"<<"i";\line\line   //Multiplication\line  a=((s1.rel)*(s2.rel))-((s1.img)*(s2.img));\line  b=((s1.rel)*(s2.img))+((s2.rel)*(s1.img));\line  cout<<"\\nMultiplication: "<<"("<<a<<")"<<"+"<<"("<<b<<")"<<"i";\line\line   //Division\line  a=(((s1.rel)*(s2.rel))+((s1.img)*(s2.img)))/(pow(s2.rel,2)+pow(s2.img,2));\line  b=(((s2.rel)*(s1.img))-((s1.rel)*(s2.img)))/(pow(s2.rel,2)+pow(s2.img,2));\line  cout<<"\\nDivision: "<<"("<<a<<")"<<"+"<<"("<<b<<")"<<"i";\line  return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter real and imaginary part of 1st complex number:4 2\par
Enter real and imaginary part of 2nd complex number:3 -1\par
\par
Addition: (7)+(1)i\par
Subtraction: (1)+(3)i\par
Multiplication: (14)+(2)i\par
Division: (1)+(1)i\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Find Even or Odd \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     int n;\line     cout<<"Enter an integer : ";\line     cin>>n;\line     if(n % 2 == 0)\line     \{\line         cout<<n<<" is even.";\line     \}\line     else\line     \{\line         cout << n << " is odd.";\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter an integer : 7\par
7 is odd.\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Find prime number in given range \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line int main()\line\{\line     int startNum,endNum;\line     int found=0,count=0,i,j;\line\line     bool b[1000];\line\line     cout<<"Enter number START of range : ";\line     cin>>startNum;\line     cout<<"Enter number END of range : ";\line     cin>>endNum;\line\line     for(i=2;i<endNum;i++)\line     \{\line             b[i]=true;\line     \}\line\line     cout<<"Prime number from "<<startNum<<" to "<<endNum<<" : "<<endl;\line\line     for(i=startNum;i<endNum;i++)\line     \{\line         if(b[i])\line         \{\line             cout<<i<<" ";\line             for(j=i*2;j<endNum;j+=i)\line             \{\line                 b[j]=false;\line             \}\line         \}\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter number START of range : 1\par
Enter number END of range : 30\par
Prime number from 1 to 30 : \par
2 3 5 7 11 13 17 19 23 29 \par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Perfect Square Number \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <stdio.h>\line #include <math.h>\line #include<iostream>\line using namespace std;\line\line int main()\line     \{\line         int num, tempnum;\line\line         cout<<"Enter a number: ";\line         cin>>num;\line\line         tempnum = sqrt(num);\line\line         if(tempnum*tempnum==num)\line         \{\line            cout<<"YES,its perfect square";\line         \}\line\line         else\line         \{\line             cout<<"NO,its not perfect square";\line         \}\line\line\line         return 0;\line     \}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter a number: 9 YES,its perfect square\par
Largest and Smallest number \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line int main()\line\{\line\line     //declaration of variables\line     int num1, num2, num3;\line     int smallest, largest;\line\line     //take input from user\line     cout << "Please enter 3 numbers : "<<"" ;\line     cin >> num1 >> num2 >> num3;\line\line     //assign initial value for comparison\line     smallest = num1;\line     largest = num1;\line\line     if (num2 > largest)\line         \{\line            largest = num2;\line         \}\line\line     if (num3 > largest)\line         \{\line             largest = num3;\line         \}\line\line     if (num2 < smallest)\line         \{\line             smallest = num2;\line         \}\line\line     if (num3 < smallest)\line         \{\line             smallest = num3;\line         \}\line\line         //display largest number and smallest number\line     cout << "largest: " << largest << "\\nsmallest: " << smallest << "\\n";\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Please enter 3 numbers : 88 34 54 largest: 88 smallest: 34\par
Magic Square \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <stdio.h>\line #include<iostream>\line using namespace std;\line\line void magicsquare(int, int [][10]);\line\line //\line int main( )\line\{\line     int size;\line     int num[10][10];\line\line    cout<<"enter size but number should be odd number : ";\line     cin>>size;\line\line         if (size % 2 == 0)\line             \{\line                 cout<<"Magic square works for an odd numbered size\\n";\line             \}\line         else\line             \{\line                 magicsquare(size, num);\line             \}\line     return 0;\line\}\line\line //magicsquare method declaration\line void magicsquare(int size, int a[][10])\line\{\line     int sqr = size * size;\line     int i = 0, j = size / 2, k;\line\line     for (k = 1; k <= sqr; ++k)\line     \{\line         a[i][j] = k;\line         i--;\line         j++;\line\line         if (k % size == 0)\line             \{\line                 i += 2;\line                 --j;\line             \}\line         else\line             \{\line                 if (j == size)\line                 \{\line                     j -= size;\line                 \}\line                 else if (i < 0)\line                 \{\line                     i += size;\line                 \}\line             \}\line     \}\par
 for (i = 0; i < size; i++)\line         \{\line             for (j = 0; j < size; j++)\line             \{\line                 cout<<a[i][j]<<"  ";\line\line             \}\line             cout<<"\\n";\line         \}\line         cout<<"\\n";\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
enter size but number should be odd number : 3 8 1 6 3 5 7 4 9 2\par
Integer to Roman \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 //C++ Program to Convert Integer to Roman Numeral\line\line #include<iostream>\line #include<conio.h>\line using namespace std;\line int main()\line\{\line     //variable declaration\line  int Number,j,m,d,c,l,x,ix,v,iv,i;\line\line  //take user input\line  cout << " Enter an Integer Number : ";\line  cin >> Number;\line\line  if (Number <= 0)\line  \{\line   cout << " Invalid number." << endl;\line   cout << " Press enter to continue..." << endl;\line   cin.ignore();\line   cin.get();\line   return 0;\line  \}\line\line  m = Number / 1000;\line  Number = Number % 1000;\line\line  d = Number / 500;\line  Number = Number % 500;\line\line  c = Number / 100;\line  Number = Number % 100;\line\line  l = Number / 50;\line  Number = Number % 50;\line\line  x = Number / 10;\line  Number = Number % 10;\line\line  ix = Number / 9;\line  Number = Number % 9;\line\line  v = Number / 5;\line  Number = Number % 5;\line\line  iv = Number / 4;\line  Number = Number % 4;\line\line  i = Number;\line\line  cout << " Roman Numeral = ";\line  for (j = 1; j <= m; j++)\line   cout << "M";\line\line  for (j = 1; j <= d; j++)\line   cout << "D";\par
for (j = 1; j <= c; j++)\line   cout << "C";\line\line  for (j = 1; j <= l; j++)\line   cout << "L";\line\line  for (j = 1; j <= x; j++)\line   cout << "X";\line\line  for (j = 1; j <= ix; j++)\line   cout << "IX";\line\line  for (j = 1; j <= v; j++)\line   cout << "V";\line\line  for (j = 1; j <= iv; j++)\line   cout << "IV";\line\line  for (j = 1; j <= i; j++)\line   cout << "I";\line\line  cout << endl;\line\line  cout << " Press enter to continue..." << endl;\line  cin.ignore();\line  cin.get();\line  return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter an Integer Number : 32 Roman Numeral = XXXII\par
automorphic Number \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line int main()\line\{\line     //variable declaration\line     int s,c,p,n,i,t;\line\line     //take user input\line     cout<<"Enter a number : ";\line     cin>>n;\line\line     s=n*n;\line     c=0;\line     p=1;\line     t=n;\line\line     while(n!=0)\line     \{\line         c++;\line         n=n/10;\line     \}\line\line     for(i=1;i<=c;i++)\line     \{\line         p=p*10;\line     \}\line\line     if(s%p==t)\line     \{\line         cout<<"Number is automorphic.";\line     \}\line\line     else\line     \{\line         cout<<"Number is not automorphic.";\line     \}\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter a number : 25 Number is automorphic.\par
Decimal to Octal \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 //program to convert decimal to octal or vise versa\line #include <iostream>\line #include <cmath>\line using namespace std;\line\line //method declaration\line int decimal_octal(int n);\line int octal_decimal(int n);\line\line int main()\line\{\line     //variable declaration\line     int n;\line     char c;\line\line     //take user input\line     cout << "Enter your choice : " << endl;\line     cout << "1. Enter alphabet 'o' to convert decimal to octal." << endl;\line     cout << "2. Enter alphabet 'd' to convert octal to decimal." << endl;\line     cin >> c;\line     if (c =='d' || c == 'D')\line     \{\line         cout << "Enter a octal number : ";\line         cin >> n;\line         cout << n << " in octal : " << octal_decimal(n) << " in decimal";\line     \}\line\line     if (c =='o' || c == 'O')\line     \{\line         cout << "Enter a decimal number : ";\line         cin >> n;\line         cout << n << " in decimal : " << decimal_octal(n) << " in octal";\line     \}\line\line     return 0;\line\}\line\line /* Function to convert decimal to octal */\line int decimal_octal(int n)\line\{\line     int rem, i=1, octal=0;\line     while (n!=0)\line     \{\line         rem=n%8;\line         n/=8;\line         octal+=rem*i;\line         i*=10;\line     \}\line\line     return octal;\line\}\line\line /* Function to convert octal to decimal */\line int octal_decimal(int n)\line\{\par
 int decimal=0, i=0, rem;\line     while (n!=0)\line     \{\line         rem = n%10;\line         n/=10;\line         decimal += rem*pow(8,i);\line         ++i;\line     \}\line     return decimal;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter your choice : 1. Enter alphabet 'o' to convert decimal to octal. 2. Enter alphabet 'd' to convert octal to decimal. o Enter a decimal number : 34 34 in decimal : 42 in octal\par
Convert Number to Word \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line void convetTo(int);\line int main()\line\{\line     int num;\line      cout<<"Enter a number : ";\line     cin>>num;\line  cout<<endl;\line     convetTo(num);\line\}\line\line void convetTo(int value)\line\{\line     const char * const ones[20] = \{"zero", "one", "two", "three","four","five","six","seven",\line      "eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen",\line      "eighteen","nineteen"\};\line      \line  const char * const tens[10] = \{"", "ten", "twenty", "thirty","forty","fifty","sixty","seventy",\line      "eighty","ninety"\};\line\line     if(value<0)\line      \{\line   cout<<"minus ";\line          convetTo(-value);\line  \}\line    \line  else if(value>=1000)\line   \{\line          convetTo(value/1000);\line          cout<<" thousand";\line\line          if(value % 1000)\line          \{\line               if(value % 1000 < 100)\line               \{\line                   cout << " and";\line               \}\line               cout << " " ;\line               convetTo(value % 1000);\line          \}\line      \}\line     \line  else if(value >= 100)\line      \{\line          convetTo(value / 100);\line          cout<<" hundred";\line\line          if(value % 100)\line          \{\line               cout << " and ";\line               convetTo (value % 100);\line          \}\line      \}\line     \par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 else if(value >= 20)\line\{\line cout << tens[value / 10];\line if(value % 10)\line\{\line cout << " ";\line convetTo(value % 10);\line\}\line\}\line\line else\line\{\line cout<<ones[value];\line\}\line\line return;\line\}\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 OUTPUT\par
Enter a number : 112\par
one hundred and twelve\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Niven number \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line int main(void)\line\{\line     int n,d,a,sum = 0; // Initializing the variable\line\line     std:: cout << "Enter the number : ";\line     std:: cin >> n;\line\line     a = n;\line\line     while(a > 0) // Finding the sum of digit\line     \{\line         d = a % 10;\line         sum = sum + d;\line         a = a / 10;\line     \}\line\line     if(n % sum == 0) //Checking if the remainder is zero or not\line         std:: cout << "\\nThe number is Niven Number ";\line     else\line         std:: cout << "\\nThe number is not a Niven Number ";\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter the number : 54 The number is Niven Number \par
Rotation of a String \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\line\line #include<stdio.h>\line #include<conio.h>\line #include<string.h>\line\line using namespace std;\line\line int main()\line\{\line\line                 char name[40],bubble,temp[40];\line                 int loop,size,count;\line                 printf("Enter the word ");\line                 scanf("%s",name);\line                 printf("");\line                 for(loop=0;loop<strlen(name);loop++)\line                 \{\line                     temp[loop]=name[loop];\line                     printf("%c",temp[loop]);\line                 \}\line\line                 for(count=1;count<strlen(name);count++)\line                 \{\line                         for(loop=0;loop<(strlen(name));loop++)\line                         \{\line                                 if(loop==0)\line                                     bubble=temp[0];\line                                 temp[loop]=temp[loop+1];\line                                 temp[strlen(name)]=bubble;\line                         \}\line                                 printf(" ");\line                                 for(loop=0;loop<(strlen(name));loop++)\line                                                   printf("%c",temp[loop]);\line                 \}\line                 getch();\line\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the word Hello\par
Hello elloH lloHe loHel oHell\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Strings Sorting \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <set>\line #include <algorithm>\line\line using namespace std;\line void print(const string& item)\line\{\line     cout<< endl << item ;\line\}\line\line int main()\line\{\line     set<string> sortedItems;\line     int size;\line     cout<< "How many names you want to sort : ";\line     cin>>size;\line     for(int i = 1; i <= size; ++i)\line     \{\line         string name;\line         cout << i << ". ";\line         cin >> name;\line\line         sortedItems.insert(name);\line     \}\line     cout<< "Sorted String -> ";\line     for_each(sortedItems.begin(), sortedItems.end(), &print);\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 How many names you want to sort : 5\par
1. Mark\par
2. Larry\par
3. Bill\par
4. Harry\par
5. John\par
Sorted String ->\par
Bill\par
Harry\par
John\par
Larry\par
Mark\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Concat Strings \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <string>\line\line using namespace std;\line\line int main ()\line\{\line    string str1 = "Programming";\line    string str2 = "Hub";\line    string str3;\line    int  len ;\line\line    // copy str1 into str3\line    str3 = str1;\line    cout << "str3 : " << str3 << endl;\line\line    // concatenates str1 and str2\line    str3 = str1 + str2;\line    cout << "str1 + str2 : " << str3 << endl;\line\line    // total lenghth of str3 after concatenation\line    len = str3.size();\line    cout << "str3.size() :  " << len << endl;\line\line    return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 str3 : Programming\par
str1 + str2 : ProgrammingHub\par
str3.size() :  14\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Length of String without inbuilt method \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<stdio.h>\line\line using namespace std;\line\line int main( )\line\{\line  char str[80];\line  int i = 0;\line  cout<<"Enter a string : ";\line  gets(str);\line\line  for(i=0;str[i]!='\\0';i++);\line\line  cout<<"Length of string is : "<<i;\line  return 0;\line\}\par
OUTPUT\par
Enter a string : C++ Programs\par
Length of string is : 12\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Reverse the String \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<stdio.h>\line\line using namespace std;\line\line int main( )\line\{\line  char str[80];\line  int temp,l,i,j;\line  cout<<"Enter string : ";\line  gets(str);\line\line  for(l=0;str[l]!='\\0';l++);    //finding length of string\line\line  for(i=0,j=l-1;i<l/2;i++,j--)\line  \{\line   temp=str[i];\line   str[i]=str[j];\line   str[j]=temp;\line  \}\line\line  cout<<"Reverse of String : "<<str;\line\line  return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter string : programs\par
Reverse of String : smargorp\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Convert String to Lowercase \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<stdio.h>\line\line using namespace std;\line\line int main( )\line\{\line  char str[80];\line  cout<<"Enter a string : ";\line  gets(str);\line\line  for(int i=0;str[i]!='\\0';i++)\line   str[i] = (str[i]>='A' && str[i]<='Z')?(str[i]+32):str[i];\line\line  cout<<str;\line\line  return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter a string : HelLo\par
hello\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Convert String to Uppercase \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<stdio.h>\line\line using namespace std;\line\line int main( )\line\{\line  char str[80];\line  cout<<"Enter a string : ";\line  gets(str);\line\line  for(int i=0;str[i]!='\\0';i++)\line   str[i] = (str[i]>='a' && str[i]<='z')?(str[i]-32):str[i];\line\line  cout<<str;\line\line  return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter a string : heLlo\par
HELLO\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 String is Palindrome or Not \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<stdio.h>\line #include<string.h>\line\line using namespace std;\line\line int main()\line\{\line     char a[100], b[100];\line\line     printf("Enter the string to check if it is a palindrome : ");\line     gets(a);\line\line     strcpy(b,a);\line     strrev(b);\line\line     if( strcmp(a,b) == 0 )\line     printf("Entered string is a palindrome.\\n");\line     else\line     printf("Entered string is not a palindrome.\\n");\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the string to check if it is a palindrome : madam\par
Entered string is a palindrome.\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Convert String to Char Array \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <stdio.h>\line #include <string.h>\line\line using namespace std;\line\line int main()\line\{\line     string tmp = "C Plus Plus";\line\line     cout<<"String : "<<tmp<<endl;\line\line     cout<<"Converting string to char array : ";\line\line     char charArray[1024];\line     strncpy(charArray, tmp.c_str(), sizeof(charArray));\line     charArray[sizeof(charArray) - 1] = 0;\line\line     for(int i = 0;charArray[i]!=0;i++)\line     \{\line         cout<<endl<<"charArray["<<i<<"] :\\t"<<charArray[i];\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 String : C Plus Plus\par
Converting string to char array :\par
charArray[0] :  C\par
charArray[1] :\par
charArray[2] :  P\par
charArray[3] :  l\par
charArray[4] :  u\par
charArray[5] :  s\par
charArray[6] :\par
charArray[7] :  P\par
charArray[8] :  l\par
charArray[9] :  u\par
charArray[10] : s\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Find Area and Perimeter of Rectangle \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\line\{\line\line     int width,height,area,perimeter;\line\line     cout<<"Enter  Width of Rectangle = ";\line\line     cin>>width;\line\line     cout<<"Enter  Height of Rectangle = ";\line\line     cin>>height;\line\line     area=height*width;\line\line     cout<<"Area of Rectangle = "<<area<<endl;\line\line     perimeter=2*(height+width);\line\line     cout<<"Perimeter of rectangle are = "<<perimeter<<endl;\line\line     return 0;\line\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter  Width of Rectangle = 4\par
Enter  Height of Rectangle = 5\par
Area of Rectangle = 20\par
Perimeter of rectangle are = 18\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Area of Circle \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line using namespace std;\line int main()\line\{\line     float r,a;\line\line     cout<<"Enter Radius : ";\line     cin>>r;\line\line     a=3.14*r*r;\line\line     cout<<"Area of Circle : "<<a;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter Radius : 3\par
Area of Circle : 28.26\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Calculate Area and Circumference of a Circle \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 // to calculate the circumference and area of circle\line #include <iostream>\line using namespace std;\line\line // define identifier PI with a constant\line #define PI 3.14159\line // define identifier TWO with a constant\line #define TWO 2.0\line\line int main(void)\line\{\line\line float area, circumference, radius;\line\line cout<<"\\nEnter a radius of the circle in meter: ";\line cin>>radius;\line // circle area = PI*radius*radius\line area = PI * radius * radius;\line\line // circumference = 2*PI*radius\line circumference = TWO * PI * radius;\line\line // circle circumference\line cout<<"\\nCircumference = "<<circumference<<" meter";\line\line // circle area\line cout<<"\\nCircle area = "<<area<<" square meter"<<endl;\line\line return 0;\line\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter a radius of the circle in meter: 2\par
\par
Circumference = 12.5664 meter\par
Circle area = 12.5664 square meter\par
\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Convert Gregorian Date to Julian Day \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line  long gregorian_calendar_to_jd(int y, int m, int d)\line     \{\line\line  y+=8000;\line  if(m<3) \{ y--; m+=12; \}\line  return (y*365) +(y/4) -(y/100) +(y/400) -1200820\line               +(m*153+3)/5-92\line               +d-1;\line\line     \}\line\line int main()\line\{\line     \line     int year = 2014;\line     int month = 11;\line     int day = 26;\line\line     cout<<"Day in Julian Calendar is "<<gregorian_calendar_to_jd(year,month,day)<<"\\n";\line     return(0);\line     \line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Day in Julian Calendar is 2456988\par
\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Convert Celsius to Fahrenheit \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line int main()\line\{\line     float fahrenheit, celsius;\line\line     cout << "Enter the temperature in Celsius : ";\line     cin >> celsius;\line     fahrenheit = (celsius * 9.0) / 5.0 + 32;\line     cout << "The temperature in Celsius    : " << celsius << endl;\line     cout << "The temperature in Fahrenheit : " << fahrenheit << endl;\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the temperature in Celsius : 32\par
The temperature in Celsius    : 32\par
The temperature in Fahrenheit : 89.6\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Find the roots of a Quadratic Equation \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <cmath>\line using namespace std;\line\line int main()\line  \{\line     float a, b, c, x1, x2, determinant, realPart, imaginaryPart;\line     cout << "Enter coefficients a, b and c: ";\line     cin >> a >> b >> c;\line     determinant = b*b - 4*a*c;\line\line     if(a==0)\line     \{\line       cout<<" 'a'can not be zero";\line     \}\line     else\line     \{\line         if (determinant > 0)\line          \{\line             x1 = (-b + sqrt(determinant)) / (2*a);\line             x2 = (-b - sqrt(determinant)) / (2*a);\line             cout << "Roots are real and different." << endl;\line             cout << "x1 = " << x1 << endl;\line             cout << "x2 = " << x2 << endl;\line          \}\line         else if (determinant == 0)\line          \{\line             cout << "Roots are real and same." << endl;\line             x1 = (-b + sqrt(determinant)) / (2*a);\line             cout << "x1 = x2 =" << x1 << endl;\line          \}\line         else \line         \{\line             realPart = -b/(2*a);\line             imaginaryPart =sqrt(-determinant)/(2*a);\line             cout << "Roots are complex and different."  << endl;\line             cout << "x1 = " << realPart << "+" << imaginaryPart << "i" << endl;\line             cout << "x2 = " << realPart << "-" << imaginaryPart << "i" << endl;\line         \}\line     return 0;\line     \}\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter coefficients a, b and c: 4 2 3\par
Roots are complex and different.\par
x1 = -0.25+0.829156i\par
x2 = -0.25-0.829156i\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Area of Triangle \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<math.h>\line\line using namespace std;\line\line int main()\line\{\line     float base,height;\line     float area;\line\line     cout<<"Enter base of Triangle : ";\line     cin>>base;\line\line     cout <<"Enter height of Triangle : ";\line     cin>>height;\line\line     area = 0.5 * (base * height);\line     cout<<"Area of Triangle :"<<area;\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter base of Triangle : 5\par
Enter height of Triangle : 8\par
Area of Triangle :20\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 (a+b)^2 \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line  \line class Mathematics \line\{\line   int a, b;\line  \line  public:\line  void input() \line  \{\line   cout << "Input a:\\n";\line   cin >> a;\line   cout << "Input b:\\n\\n";\line   cin >> b;\line  \}\line  \line  void add() \line  \{\line   cout << "(a+b)^2 = " << ((a*a)+(2*a*b)+(b*b));\line  \}\line  \};\line  \line int main()\line\{\line    Mathematics m; // Creating object of class\line  \line    m.input();\line    m.add();\line  \line    return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Input a:8 Input b:10 (a+b)^2 = 324\par
Body Mass Intake (BMI) \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<iomanip>\line #include<math.h>\line\line using namespace std;\line\line int main()\line\{\line     float weight;\line     float height;\line     float bmi;\line     char response;\line\line     do\line     \{\line         cout<<"Please enter your weight (pounds): ";\line         cin>>weight;\line         cout<<"Please enter your height (inches): ";\line         cin>>height;\line         bmi = (weight / pow(height, 2)) * 703;\line         cout<<"\\n";\line         cout<<fixed<<showpoint<<setprecision(2);\line         cout<<"Your BMI is "<<bmi<<endl;\line\line         if (bmi < 18.5)\line         \{\line             cout<<"You are underweight!"<<endl;\line             cout<<"Eat more!!"<<endl;\line         \}\line         else if (bmi >= 18.5 && bmi < 25)\line         \{\line             cout<<"You are normal!"<<endl;\line         \}\line         else if (bmi >= 25)\line         \{\line             cout<<"You are overweight!"<<endl;\line         \}\line         else\line         \{\line             cin.get();\line         \}\line\line         cin.get();\line         cout<<endl;\line\line         cout<<"Would you like to enter the information again? ";\line         cin>>response;\line     \}\line     while (toupper(response) == 'Y');\line     cout<<"Okay, see you next time.."<<endl;\line\line     return 0;\line\}\par
OUTPUT\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Please enter your weight (pounds):100 Please enter your height (inches):67 Your BMI is 15.66 You are underweight! Eat more!! Would you like to enter the information again?\par
Find Radius of a Circle using Area \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<math.h>\line using namespace std;\line\line int main()\line\{\line     int area;\line     cout<<"enter area of circle  : ";\line     cin>>area;\line\line     cout<<"\\n";\line\line     double radius=sqrt(area/3.14);\line\line     cout<<"Radius of circle is : "<<radius;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
enter area of circle : 314 Radius of circle is : 10\par
Perfect Square \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <stdio.h>\line #include <math.h>\line #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int num, tempnum;\line\line     cout<<"Enter a number: ";\line     cin>>num;\line\line     tempnum = sqrt(num);\line\line     if(tempnum*tempnum==num)\line     \{\line        cout<<"YES,its perfect square of : "<<sqrt(num);\line     \}\line\line     else\line     \{\line         cout<<"NO,its not perfect square";\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Enter a number: 9\par
YES,its perfect square of : 3\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Compound Interest \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<cmath>\line using namespace std;\line\line int main()\line\{\line  float PA,R,Time,CI;\line  cout<<"Enter Principal amount : ";\line  cin>>PA;\line  cout<<"\\n";\line  cout<<"enter rate : ";\line  cin>>R;\line  cout<<"\\n";\line  cout<<"enter time(in year) : ";\line  cin>>Time;\line\line  //formula to calculate compound intrest\line  CI=PA*pow((1+R/100),Time) - PA;\line  cout<<"Compound Interest is : "<<CI;\line\line     cout<<"\\n";\line  return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter Principal amount : 400 enter rate : 7 enter time(in year) : 1 Compound Interest is : 28\par
Simple Interest \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line int main()\line\{\line  float p,r,t,i;\line\line  cout<<"Enter Principle : ";\line  cin>>p;\line  cout<<"Enter Rate : ";\line  cin>>r;\line  cout<<"Enter Time(in years) : ";\line  cin>>t;\line\line  //formula to calculate intrest\line  i=(p*r*t)/100;\line  cout<<"Simple interest is : "<<i;\line\line  return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter Principle : 400 Enter Rate : 7 Enter Time(in years) : 2 Simple interest is : 56\par
(a-b)^2 \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line class Mathematics\line\{\line   int a, b;\line\line  public:\line  void input()\line  \{\line   cout << "Input a:\\n";\line   cin >> a;\line   cout << "Input b:\\n\\n";\line   cin >> b;\line  \}\line\line  void add()\line  \{\line   cout << "(a-b)^2 = " << ((a*a)-(2*a*b)+(b*b));\line  \}\line  \};\line\line int main()\line\{\line    Mathematics m; // Creating object of class\line\line    m.input();\line    m.add();\line\line    return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Input a: 50 Input b: 10 (a-b)^2 = 1600\par
Convert Hexadecimal to Decimal \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <iomanip>\line using namespace std;\line\line int main()\line\{\line     int num;\line\line     cout<<"Enter Hexadecimal Number : ";\line     cin >> hex >> num;\line\line     cout<<"Decimal number for given hexadecimal number is : ";\line     cout << num << endl;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter Hexadecimal Number : fffh Decimal number for given hexadecimal number is : 4095\par
GCD and LCM \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line\line     //variable declaration\line     int num1, num2, gcd = 1;\line\line     //take input from user\line     cout << "Enter two numbers : ";\line     cin >> num1;\line     cin >> num2;\line\line     //logic to calculate gcd and lcm\line     for (int i = 1; i < 1000; ++i)\line     \{\line         if ((num1 % i == 0) && (num2 % i == 0))\line         \{\line             gcd = i;\line         \}\line     \}\line\line     //print calculated value of gcd and lcm\line\line     cout << "\\nGCD of two number is : " << gcd;\line     cout << "\\nLCM of two number is : " << (num1 * num2) / gcd;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Enter two numbers : 5\par
2\par
\par
GCD of two number is : 1\par
LCM of two number is : 10\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Convert Centimeter to Meters and Kilometres \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     //variable declaration\line     float meter, cmeter, kmeter;\line\line     //user input\line     cout << "\\nEnter length in centimeters : ";\line     cin >> cmeter;\line\line\line     // Convert centimeter into meter and kilometer\line\line     meter = cmeter / 100.0;\line     kmeter = cmeter / 100000.0;\line\line     //display converted values\line\line     cout << "\\nLength in Meter : ";\line     cout << meter;\line\line     cout << "\\nLength in Kilometer : ";\line     cout << kmeter;\line\line     cout << endl;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Enter length in centimeter : 100\par
\par
Length in Meter : 1\par
Length in Kilometer : 0.001\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Square and Cube Root \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <cmath>\line\line using namespace std;\line\line int main()\line\{\line\line     //variable declaration\line     int number;\line\line     //take input for number from user\line     cout << "Enter number : ";\line     cin >> number;\line\line     //use of sqrt function to find square root\line     cout << "square root of " << number << " is " << sqrt(number);\line\line     cout << "\\n\\n";\line\line     //use of cbrt function to find cube root\line     cout << "cube root of " << number << " is " << cbrt(number);\line\line     cout << "\\n";\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter number : 27 square root of 27 is 5.19615 cube root of 27 is 3\par
Volume of box \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     double length;\line     double width;\line     double height;\line     double volume;\line\line     cout << "Please Enter a Length for your box: ";\line     cin >> length;\line\line     cout << "\\nPlease Enter a Width for your box: ";\line     cin >> width;\line\line     cout << "\\nPlease Enter a Height for your box: ";\line     cin >> height;\line\line\line     volume = length * width * height;\line     cout << "\\n\\nThe Volume of your box is: " << volume << endl;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Please Enter a Length for your box:2\par
\par
Please Enter a Width for your box:3\par
\par
Please Enter a Height for your box:4\par
\par
The Volume of your box is:24\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Star Half Pyramid \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     int i, j, rows;\line     cout << "Enter the number of rows: ";\line     cin >> rows;\line     for (i = 1; i <= rows; ++i)\line     \{\line         for (j = 1; j <= i; ++j)\line         \{\line             cout << "* ";\line         \}\line         cout << "\\n";\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the number of rows: 6\par
*\par
* *\par
* * *\par
* * * *\par
* * * * *\par
* * * * * *\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Half Pyramid with Numbers \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     int i, j, rows;\line     cout << "Enter the number of rows: ";\line     cin >> rows;\line     for (i = 1; i <= rows; ++i)\line     \{\line         for (j = 1; j <= i; ++j)\line         \{\line             cout << j << " ";\line         \}\line         cout << "\\n";\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the number of rows: 5\par
1\par
1 2\par
1 2 3\par
1 2 3 4\par
1 2 3 4 5\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Half Pyramid with Characters \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     int i, j;\line     char input, temp = 'A';\line     cout << "Enter uppercase character you want in triange at last row: ";\line     cin >> input;\line     for (i = 1; i <= (input - 'A' + 1); ++i)\line     \{\line         for (j = 1; j <= i; ++j)\line             cout << temp << " ";\line         ++temp;\line         cout << endl;\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter uppercase character you want in triange at last row: E\par
A\par
B B\par
C C C\par
D D D D\par
E E E E E\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Pyramid of Digits \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     int i, space, rows, k = 0, count = 0, count1 = 0;\line     cout << "Enter the number of rows: ";\line     cin >> rows;\line     for (i = 1; i <= rows; ++i)\line     \{\line         for (space = 1; space <= rows - i; ++space)\line         \{\line             cout << "  ";\line             ++count;\line         \}\line         while (k != 2 * i - 1)\line         \{\line             if (count <= rows - 1)\line             \{\line                 cout << i + k << " ";\line                 ++count;\line             \}\line             else\line             \{\line                 ++count1;\line                 cout << i + k - 2 * count1 << " ";\line             \}\line             ++k;\line         \}\line         count1 = count = k = 0;\line         cout << "\\n";\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the number of rows: 5\par
        1\par
      2 3 2\par
    3 4 5 4 3\par
  4 5 6 7 6 5 4\par
5 6 7 8 9 8 7 6 5\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Floyd's Triangle \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     int rows, i, j, k = 0;\line     cout << "Enter number of rows: ";\line     cin >> rows;\line     for (i = 1; i <= rows; i++)\line     \{\line         for (j = 1; j <= i; ++j)\line             cout << k + j << " ";\line         ++k;\line         cout << endl;\line     \}\line     return 0;\line\}\par
OUTPUT\par
Enter number of rows: 5\par
1\par
2 3\par
3 4 5\par
4 5 6 7\par
5 6 7 8 9\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Pascal's triangle \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <string>\line\line using namespace std;\line\line void PascalsTriangle(int);\line\line int main()\line\{\line     int n;\line     cout << "Enter the number of rows you would like to print for Pascal's Triangle: ";\line     cin >> n;\line     cout << endl;\line     PascalsTriangle(n);\line     return 0;\line\}\line\line int numdigits(int x)\line\{\line     int count = 0;\line     while (x != 0)\line     \{\line         x = x / 10;\line         ++count;\line     \}\line     return count;\line\}\line\line void PascalsTriangle(int n)\line\{\line     int i, j, x, y, maxlen;\line     string len;\line     for (i = 0; i < n; i++)\line     \{\line         x = 1;\line         len = string((n - i - 1) * (n / 2), ' ');\line         cout << len;\line         for (j = 0; j <= i; j++)\line         \{\line             y = x;\line             x = x * (i - j) / (j + 1);\line             maxlen = numdigits(x) - 1;\line             if (n % 2 == 0)\line                 cout << y << string(n - 1 - maxlen, ' ');\line             else\line             \{\line                 cout << y << string(n - 2 - maxlen, ' ');\line             \}\line         \}\line         cout << endl;\line     \}\line\}\par
OUTPUT\par
Enter the number of rows you would like to print for Pascal's Triangle: 5\par
\par
        1\par
      1   1\par
    1   2   1\par
  1   3   3   1\par
1   4   6   4   1\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Triangle with only Border \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line void drawTriangle(char border, char filler, int length)\line\{\line     int start = 2;\line     int base = 4;\line     int i;\line     for (i = start; i <= length; i++)\line     \{\line         for (int sp = 0; sp <= length - i; sp++)\line         \{\line             cout << " ";\line         \}\line         if (i > start)\line         \{\line             cout << border << " ";\line         \}\line         if (i > start)\line         \{\line             for (int b = base; b <= i; b++)\line             \{\line                 cout << filler << " ";\line             \}\line         \}\line         cout << border << " ";\line         cout << endl;\line     \}\line\line     for (int j = base; j < length + base; j++)\line     \{\line         cout << border << " ";\line     \}\line     cout << endl;\line\}\line\line\line int main()\line\{\line     int length = 12;\line     drawTriangle('*', ' ', length);\line     return 0;\line\}\par
           *\par
          * *\par
         *   *\par
        *     *\par
       *       *\par
      *         *\par
     *           *\par
    *             *\par
   *               *\par
  *                 *\par
 *                   *\par
* * * * * * * * * * * *\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Diamond Pattern \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     int i, j, k, n;\line     cout << "Enter the number of lines to be printed: ";\line     cin >> n;\line\line     for (i = 0; i < n; i++)\line     \{\line         for (j = 0; j < (n - i - 1); j++)\line             cout << " ";\line         for (k = 0; k < (2 * i + 1); k++)\line             cout << "*";\line\line         cout << endl;\line     \}\line     for (i = 0; i < n - 1; i++)\line     \{\line         for (j = 0; j <= i; j++)\line             cout << " ";\line         for (k = (2 * n - 2 * i - 3); k > 0; k--)\line             cout << "*";\line         cout << endl;\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the number of lines to be printed: 5\par
    *\par
   ***\par
  *****\par
 *******\par
*********\par
 *******\par
  *****\par
   ***\par
    *\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Reverse Star Triangle \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int i, n, j;\line\line     cout << "Enter number of lines for Pattern : ";\line     cin >> n;\line\line     for (i = n; i > 0; i--)\line     \{\line         for (j = n - i; j > 0; j--)\line         \{\line             cout << "  ";\line         \}\line         for (j = 2 * i - 1; j > 0; j--)\line         \{\line             cout << " *";\line         \}\line         cout << endl;\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter number of lines for Pattern : 5\par
 * * * * * * * * *\par
   * * * * * * *\par
     * * * * *\par
       * * *\par
         *\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Star Pattern 1 \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     //variable declaration\line     int i, j, rows;\line\line     //take number of rows\line     cout << "Enter the number of rows : ";\line     cin >> rows;\line\line     for (i = rows; i >= 1; --i)\line     \{\line         for (j = 1; j <= i; ++j)\line         \{\line             cout << "* ";\line         \}\line         cout << "\\n";\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter the number of rows: 9 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\par
Number Pattern 1 \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int num, c, k;\line\line     cout << "Enter number of rows : ";\line     cin >> num;\line     cout << "\\n";\line\line     for (c = 1; c <= num; c++)\line     \{\line         for (k = 1; k <= c; k++)\line         \{\line             cout << c;\line         \}\line\line         cout << "\\n";\line     \}\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter number of rows : 9 1 22 333 4444 55555 666666 7777777 88888888 999999999 \par
Alphabet Pattern 1 \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<stdio.h>\line\line using namespace std;\line\line int main()\line\{\line     //variable declaration\line     int x, y, n;\line     char ch;\line     cout << "Number of rows : ";\line     cin >> n;\line\line     for (x = 1; x <= n; x++)\line     \{\line         cout << "\\n";\line         ch = 'A';\line         for (y = 1; y <= x; y++)\line         \{\line             cout << ch;\line             ch++;\line         \}\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Number of rows : 9\par
\par
A\par
AB\par
ABC\par
ABCD\par
ABCDE\par
ABCDEF\par
ABCDEFG\par
ABCDEFGH\par
ABCDEFGHI\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Number Pattern 2 \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<stdio.h>\line #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     //variable declaration\line     int i, j, k, rows;\line     k = 1;\line\line     //user input for rows\line\line     cout << "Enter how many rows you want : ";\line     cin >> rows;\line\line     //to generate pattern\line     for (i = 1; i <= rows; i++)\line     \{\line         for (j = 1; j <= i; j++)\line         \{\line             cout << k++;\line         \}\line         cout << "\\n";\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter how many rows you want : 4 1 23 456 78910\par
Matrix Multiplication \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line\line     int a[5][5], b[5][5], c[5][5], m, n, p, q, i, j, k;\line\line     cout << "Enter rows and columns of first matrix: ";\line     cin >> m >> n;\line\line     cout << "Enter rows and columns of second matrix: ";\line     cin >> p >> q;\line\line     if (n == p)\line     \{\line         cout << "\\nEnter first matrix:\\n";\line         for (i = 0; i < m; ++i)\line             for (j = 0; j < n; ++j)\line                 cin >> a[i][j];\line\line         cout << "\\nEnter second matrix:\\n";\line         for (i = 0; i < p; ++i)\line             for (j = 0; j < q; ++j)\line                 cin >> b[i][j];\line\line         cout << "\\nThe new matrix is:\\n";\line\line         for (i = 0; i < m; ++i)\line         \{\line             for (j = 0; j < q; ++j)\line             \{\line                 c[i][j] = 0;\line                 for (k = 0; k < n; ++k)\line                     c[i][j] = c[i][j] + (a[i][k] * b[k][j]);\line                 cout << c[i][j] << "\\t";\line             \}\line             cout << "\\n";\line         \}\line     \}\line     else\line         cout << "\\nSorry!!!! Matrix multiplication can't be done";\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter rows and columns of first matrix: 2\par
3\par
Enter rows and columns of second matrix: 3\par
2\par
\par
Enter first matrix:\par
1\par
2\par
3\par
4\par
5\par
6\par
\par
Enter second matrix:\par
1\par
\par
2\par
3\par
4\par
5\par
6\par
\par
The new matrix is:\par
22      28\par
49      64\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Accessing Two-Dimensional Array Elements \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     // an array with 5 rows and 2 columns.\line     int a[5][2] = \{\{0, 0\},\line                    \{1, 2\},\line                    \{2, 4\},\line                    \{3, 6\},\line                    \{4, 8\}\};\line\line     // output each array element's value\line     for (int i = 0; i < 5; i++)\line     \{\line         for (int j = 0; j < 2; j++)\line         \{\line             cout << "a[" << i << "][" << j << "]: ";\line             cout << a[i][j] << endl;\line         \}\line     \}\line     \line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 a[0][0]: 0\par
a[0][1]: 0\par
a[1][0]: 1\par
a[1][1]: 2\par
a[2][0]: 2\par
a[2][1]: 4\par
a[3][0]: 3\par
a[3][1]: 6\par
a[4][0]: 4\par
a[4][1]: 8\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Array Initialization \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 int main()\line\{\line     //If the size is omitted, the compiler uses the number of values\line     int days[12] = \{31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31\};\line\line     // No intitialization.\line     float p1[1000];\line\line     //To initialize an array to all zeros, initialize only the first value.\line     // All 1000 values initialized to zero.\line     float p2[1000] = \{0.0\};\line\line     // Initial values of pressure(variable) undefined.\line     float pressure[10];\line\line     // Remaining characters zero.\line     char greeting[100] = "Hello";\line\line     // Array size is 6 (final zero on strings).\line     char goodbye[] = "Adios";\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Matrix Addition \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int m, n, c, d, first[10][10], second[10][10], sum[10][10];\line\line     cout << "Enter the number of rows and columns of matrix : ";\line     cin >> m >> n;\line     cout << "Enter the elements of first matrix : \\n";\line\line     for (c = 0; c < m; c++)\line         for (d = 0; d < n; d++)\line             cin >> first[c][d];\line\line     cout << "Enter the elements of second matrix : \\n";\line\line     for (c = 0; c < m; c++)\line         for (d = 0; d < n; d++)\line             cin >> second[c][d];\line\line     for (c = 0; c < m; c++)\line         for (d = 0; d < n; d++)\line             sum[c][d] = first[c][d] + second[c][d];\line\line     cout << "Sum of entered matrices:-\\n";\line\line     for (c = 0; c < m; c++)\line     \{\line         for (d = 0; d < n; d++)\line             cout << sum[c][d] << "\\t";\line\line         cout << endl;\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the number of rows and columns of matrix : 2 2\par
Enter the elements of first matrix :\par
8 1\par
2 3\par
Enter the elements of second matrix :\par
4 9\par
5 2\par
Sum of entered matrices:-\par
12      10\par
7       5\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Matrix Subtraction \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int m, n, c, d, first[10][10], second[10][10], sub[10][10];\line\line     cout << "Enter the number of rows and columns of matrix : ";\line     cin >> m >> n;\line     cout << "Enter the elements of first matrix : \\n";\line\line     for (c = 0; c < m; c++)\line         for (d = 0; d < n; d++)\line             cin >> first[c][d];\line\line     cout << "Enter the elements of second matrix : \\n";\line\line     for (c = 0; c < m; c++)\line         for (d = 0; d < n; d++)\line             cin >> second[c][d];\line\line     for (c = 0; c < m; c++)\line         for (d = 0; d < n; d++)\line             sub[c][d] = first[c][d] - second[c][d];\line\line     cout << "Subtraction of entered matrices:-\\n";\line\line     for (c = 0; c < m; c++)\line     \{\line         for (d = 0; d < n; d++)\line             cout << sub[c][d] << "\\t";\line\line         cout << endl;\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the number of rows and columns of matrix : 3 3\par
Enter the elements of first matrix :\par
7 6 4\par
1 9 8\par
2 3 0\par
Enter the elements of second matrix :\par
2 6 4\par
5 6 1\par
2 0 9\par
Subtraction of entered matrices:-\par
5       0       0\par
-4      3       7\par
0       3       -9\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Array of Objects \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line class Demo\line\{\line     int x;\line\line public:\line     \line     void setX(int i)\line     \{\line         x = i;\line     \}\line\line     int getX()\line     \{\line         return x;\line     \}\line\};\line\line int main()\line\{\line     Demo obj[4];\line     int i;\line\line     for (i = 0; i < 4; i++)\line     \{\line         obj[i].setX(i);\line     \}\line     \line     for (i = 0; i < 4; i++)\line     \{\line         cout << "obj[" << i << "].getX() : " << obj[i].getX() << endl;\line     \}\line     \line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 obj[0].getX() : 0\par
obj[1].getX() : 1\par
obj[2].getX() : 2\par
obj[3].getX() : 3\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Inverse Matrix using Gauss jordan method \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int i, j, k, n;\line     float a[10][10] = \{0\}, d;\line\line     cout << "Enter the order of matrix : ";\line     cin >> n;\line     cout << "Enter the elements : " << endl;\line     for (i = 1; i <= n; i++)\line         for (j = 1; j <= n; j++)\line             cin >> a[i][j];\line\line     for (i = 1; i <= n; i++)\line         for (j = 1; j <= 2 * n; j++)\line             if (j == (i + n))\line                 a[i][j] = 1;\line\line     for (i = n; i > 1; i--)\line     \{\line         if (a[i - 1][1] < a[i][1])\line             for (j = 1; j <= n * 2; j++)\line             \{\line                 d = a[i][j];\line                 a[i][j] = a[i - 1][j];\line                 a[i - 1][j] = d;\line             \}\line     \}\line     cout << "Augmented : " << endl;\line     for (i = 1; i <= n; i++)\line     \{\line         for (j = 1; j <= n * 2; j++)\line             cout << a[i][j] << "    ";\line         cout << endl;\line     \}\line\line     for (i = 1; i <= n; i++)\line     \{\line         for (j = 1; j <= n * 2; j++)\line             if (j != i)\line             \{\line                 d = a[j][i] / a[i][i];\line                 for (k = 1; k <= n * 2; k++)\line                     a[j][k] -= a[i][k] * d;\line             \}\line     \}\line\line     for (i = 1; i <= n; i++)\line     \{\par
 d = a[i][i];\line         for (j = 1; j <= n * 2; j++)\line             a[i][j] = a[i][j] / d;\line     \}\line\line\line     cout << "Inverse Matrix : " << endl;\line     for (i = 1; i <= n; i++)\line     \{\line         for (j = n + 1; j <= n * 2; j++)\line             cout << a[i][j] << "    ";\line         cout << endl;\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the order of matrix : 3\par
Enter the elements :\par
4\par
2\par
7\par
5\par
1\par
8\par
9\par
4\par
7\par
Augmented :\par
9    4    7    0    0    1\par
4    2    7    1    0    0\par
5    1    8    0    1    0\par
Inverse Matrix :\par
-0.490196    0.27451    0.176471\par
0.72549    -0.686274    0.0588236\par
0.215686    0.0392157    -0.117647\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Stack using Array \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <stdio.h>\line #include<iostream>\line\line using namespace std;\line\line //declaration of constant value\line #define MAX 5\line int top, state;\line\line // for deletion of element from stack-POP FUNCTION\line\line int pop(int stack[])\line\{\line     int value;\line     if (top == -1)\line     \{\line         value = 0;\line         state = 0;\line     \}\line     else\line     \{\line         state = 1;\line         value = stack[top];\line         --top;\line     \}\line     return value;\line\}\line\line\line // for insertion of element into stack -PUSH FUNCTION\line\line void push(int stack[], int item)\line\{\line     if (top == (MAX - 1))\line     \{\line         state = 0;\line     \}\line     else\line     \{\line         state = 1;\line         ++top;\line         stack[top] = item;\line     \}\line\}\line\line void showstack(int stack[])\line\{\line     int i;\line\line     cout << "\\n Stack contain: ";\line\line     if (top == -1)\line     \{\line         cout << "empty";\line     \}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24\line else\line\{\line for (i = top; i >= 0; --i)\line cout << stack[i] << "\\t";\line\}\line cout << "\\n";\line\}\line\line // main method\line int main()\line\{\line int stack[MAX], item;\line int ch;\line top = -1;\line\line cout << "\\nSelect one choice from following Menu : ";\line cout << "\\n\\n1.push item in stack";\line cout << "\\n2.pop item from stack";\line cout << "\\n3.Exit ";\line\line do\line\{\line do\line\{\line cout << "\\n\\nEnter your choice : ";\line cin >> ch;\line\line if (ch < 1 || ch > 3)\line\{\line cout << "invalid choice";\line\}\line\}\line\line while (ch < 1 || ch > 3);\line\line switch (ch)\line\{\line case 1:\line cout << "enter element you want to push :";\line cin >> item;\line cout << item;\line push(stack, item);\line\line if (state)\line\{\line cout << "\\n after push operation";\line showstack(stack);\line\line if (top == (MAX - 1))\line\{\line cout << "\\n stack is full";\line\}\line\}\line\line else\line cout << "stack overflow";\line\par
break;\line case 2:\line item = pop(stack);\line if (state)\line\{\line cout << "poped item is :" << item << "\\n after pop operation";\line showstack(stack);\line\}\line\line else\line cout << "stack underflow";\line break;\line\line default:\line cout << "Exit... ";\line\line\}//close switch case\line\}//close do\line\line while (ch != 3);\line\line return 0;\line\}\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 OUTPUT\par
Select one choice from following Menu : \par
\par
1.push item in stack\par
2.pop item from stack\par
3.Exit \par
\par
Enter your choice : 1\par
enter element you want to push :12\par
12\par
 after push operation\par
 Stack contain: 12\tab\par
\par
\par
Enter your choice : 1\par
enter element you want to push :23\par
23\par
 after push operation\par
 Stack contain: 23\tab 12\tab\par
\par
\par
Enter your choice : 1\par
enter element you want to push :34\par
34\par
 after push operation\par
 Stack contain: 34\tab 23\tab 12\tab\par
\par
\par
Enter your choice : 2\par
poped item is :34\par
 after pop operation\par
 Stack contain: 23\tab 12\tab\par
\par
\par
Enter your choice : 3\par
Exit... \par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Display Even numbers in an Array \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line using namespace std;\line\line  int main()\line   \{\line\line    int numarr[100],evenarr[100],i,j=0,k=0,num;\line\line    cout<<"Enter Size of Array : ";\line    cin>>num;\line\line    cout<<"Enter "<<num<<" Data elements in Array : ";\line    for(i=0; i<num;i++)\line    \{\line         cin>>numarr[i];\line    \}\line\line    for(i=0; i<num;i++)\line    \{\line         if(numarr[i]%2==0)\line         \{\line             evenarr[j]=numarr[i];\line             j++;\line         \}\line    \}\line\line    cout<<"\\nEven Elements : ";\line\line     for(i=0; i<j ;i++)\line     \{\line         cout<<evenarr[i]<<"  ";\line     \}\line   \}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter Size of Array : 10 Enter 10 Data elements in Array : 9 8 12 44 23 53 28 30 49 48 Even Elements : 8 12 44 28 30 48\par
Deletions in Array \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line\line     int i, inputarray[10], no, pos;\line\line     cout << "Enter 10 data elements in array: ";\line     for (i = 0; i < 10; i++)\line     \{\line         cin >> inputarray[i];\line     \}\line     cout << "\\nEnter position of element to delete: ";\line     cin >> pos;\line\line     if (pos > 10)\line     \{\line         cout << "\\n position value is not in range: ";\line     \}\line     else\line     \{\line         --pos;\line         for (i = pos; i <= 9; i++)\line         \{\line             inputarray[i] = inputarray[i + 1];\line         \}\line\line         cout << "\\n\\nNew data in array: ";\line\line         for (i = 0; i < 9; i++)\line         \{\line             cout << inputarray[i];\line             cout << " ";\line         \}\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Enter 10 data elements in array: 65\par
56\par
86\par
96\par
35\par
12\par
85\par
65\par
52\par
18\par
\par
Enter position of element to delete: 3\par
\par
\par
New data in array: 65 56 96 35 12 85 65 52 18\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Array Sort \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 // for std::swap, use <utility> instead if C++11\line #include <algorithm>\line #include <iostream>\line\line #define SIZE 10\line using namespace std;\line\line int main()\line\{\line\line     cout << "array values :" << " 132, 520, 210, 510, 140 ,125,52,96,55,85" << "\\n";\line     //input array values\line     int array[SIZE] = \{132, 520, 210, 510, 140, 125, 52, 96, 55, 85\};\line\line     cout << "sorted values : ";\line\line     // Step through each element of the array\line     for (int startIndex = 0; startIndex < SIZE; ++startIndex)\line     \{\line         // smallestIndex is the index of the smallest element we've encountered so far.\line         int smallestIndex = startIndex;\line\line         // Look for smallest element remaining in the array (starting at startIndex+1)\line         for (int nowIndex = startIndex + 1; nowIndex < SIZE; ++nowIndex)\line         \{\line             // If the current element is smaller than our previously found smallest\line             if (array[nowIndex] < array[smallestIndex])\line                 // This is the new smallest number for this iteration\line             \{\line                 smallestIndex = nowIndex;\line             \}\line         \}\line\line         // Swap our start element with our smallest element\line         swap(array[startIndex], array[smallestIndex]);\line     \}\line\line     // Now print our sorted array as proof it works\line     for (int index = 0; index < SIZE; ++index)\line     \{\line         cout << array[index] << ' ';\line     \}\line\line     cout << "\\n";\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
array values : 132, 520, 210, 510, 140 ,125,52,96,55,85 sorted values : 52 55 85 96 125 132 140 210 510 520\par
Merging two Arrays \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line\line int main()\line\{\line\line     int arr1[100], arr2[100], resultarr[100], n, m, i, j, k, s;\line\line     cout << " Merging Two Arrays";\line     cout << "\\n\\nEnter No. of Elements in First Array : ";\line     cin >> n;\line\line     cout << "\\nEnter Elements : \\n";\line\line     for (i = 1; i <= n; i++)\line     \{\line         cin >> arr1[i];\line     \}\line\line     cout << "\\nEnter No. of Elements in Second Array : ";\line     cin >> m;\line\line     cout << "\\nEnter Elements in Sorted Order : \\n";\line\line     for (i = 1; i <= m; i++)\line     \{\line         cin >> arr2[i];\line     \}\line\line     i = 1, j = 1;\line\line     for (k = 1; k <= n + m; k++)\line     \{\line         // Compare Elements of Array A and Array B\line         if (arr1[i] < arr2[j])\line         \{\line             resultarr[k] = arr1[i];\line             i++;\line\line             if (i > n)\line             \{\line                 goto b;\line             \}\line\line         \}\line\par
\line         else\line         \{\line             resultarr[k] = arr2[j];\line             j++;\line\line             if (j > m)\line             \{\line                 goto a;\line             \}\line\line         \}\line     \}\line\line\line     a:\line     // Copy the Remaining Elements of Array A to C\line     for (s = i; s <= n; s++)\line     \{\line         k++;\line         resultarr[k] = arr1[s];\line     \}\line\line\line     b:\line     // Copy the Remaining Elements of Array B to C\line     for (s = j; s <= m; s++)\line     \{\line         k++;\line         resultarr[k] = arr2[s];\line     \}\line\line     cout << "\\n\\nAfter Merging Two Arrays:\\n";\line\line     for (k = 1; k <= n + m; k++)\line     \{\line         cout << resultarr[k] << endl;\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
 Merging Two Arrays\par
\par
Enter No. of Elements in First Array : 4\par
\par
Enter Elements :\par
7\par
5\par
8\par
6\par
\par
Enter No. of Elements in Second Array : 4\par
\par
Enter Elements in Sorted Order :\par
8\par
4\par
1\par
3\par
\par
\par
After Merging Two Arrays:\par
7\par
5\par
8\par
4\par
1\par
3\par
8\par
6\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Display Lower Triangle of a Matrix \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line //method declaration\line void lower_halfmatrix(int mat[10][10], int row);\line\line //define main method\line int main()\line\{\line     //variable declaration\line     int mat[10][10], i, j, row, col;\line\line     //enter number of row and column you want\line     cout << "Enter how many numbers of row and column you want : ";\line     cout << "\\n";\line     cin >> row;\line     cout << "\\n";\line     cin >> col;\line     cout << "\\n";\line     cout << "enter elements";\line     cout << "\\n";\line\line     for (i = 0; i < row; i++)\line     \{\line         cout << "\\n";\line         for (j = 0; j < col; j++)\line         \{\line             cin >> mat[i][j];\line         \}\line     \}\line     lower_halfmatrix(mat, row);\line\line     return 0;\line\}\line\line //method definition\line void lower_halfmatrix(int mat[10][10], int row)\line\{\line     int i, j;\line     cout << "\\n";\line\line     for (i = 0; i < row; i++)\line     \{\line         for (j = 0; j <= i; j++)\line         \{\line             cout << mat[i][j] << " ";\line         \}\line         cout << "\\n";\line     \}\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter how many numbers of row and column you want : 3 3 enter elements 7 5 2 1 3 6 4 9 8 7 1 3 4 9 8\par
Display upper half of matrix \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line //method declaration\line void upper_halfofmatrix(int mat[10][10], int col, int r);\line\line int main()\line\{\line     //variable declaration\line     int mat[10][10], row, col, i, j;\line     //input for row and column\line     cout << "enter how many numbers of row and column you want : ";\line     cin >> row >> col;\line     //enter element into matrix\line     cout << "enter elements: \\n";\line\line     for (i = 0; i < row; i++)\line     \{\line         for (j = 0; j < col; j++)\line         \{\line             cin >> mat[i][j];\line         \}\line     \}\line     upper_halfofmatrix(mat, col, row);\line\line     return 0;\line\}\line\line //method definition\line void upper_halfofmatrix(int mat[10][10], int col, int row)\line\{\line     int i, j;\line\line     for (i = 0; i < row; i++)\line     \{\line         for (j = 0; j < col; j++)\line         \{\line             if (i <= j)\line                 cout << mat[i][j];\line\line             else\line                 cout << " ";\line         \}\line\line         cout << "\\n";\line     \}\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
enter how many numbers of row and column you want : 3\par
3\par
enter elements:\par
1\par
2\par
3\par
4\par
5\par
6\par
7\par
8\par
9\par
123\par
 56\par
  9\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Smallest and Largest number in an Array \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line\line     int size;\line     cout << "enter size of array : ";\line     cin >> size;\line\line     int arra[size];\line\line     int smallelement, largestelement;\line\line     cout << "\\nenter array elements : ";\line     for (int i = 0; i < size; i++)\line     \{\line         cin >> arra[i];\line     \}\line     largestelement = smallelement = arra[0];\line     for (int i = 0; i < size; i++)\line     \{\line         if (arra[i] > largestelement)\line         \{\line             largestelement = arra[i];\line         \}\line         if (arra[i] < smallelement)\line         \{\line             smallelement = arra[i];\line         \}\line     \}\line     cout << "The biggest number is " << largestelement << endl;\line     cout << "The smallest number is " << smallelement << endl;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
enter size of array : 10 enter array elements : 12 43 64 97 36 54 23 98 65 46 The biggest number is 98 The smallest number is 12\par
Array Element Swapping \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     //variable declaration\line     int arr[100], i, temp, size;\line\line     cout << "enter array size : ";\line     cin >> size;\line\line     cout << "enter elements in to array : \\n";\line     for (i = 0; i < size; ++i)\line     \{\line         cin >> arr[i];\line     \}\line\line     cout << "\\narray before swaping elements : \\n";\line     for (i = 0; i < size; ++i)\line     \{\line         cout << arr[i] << " ";\line     \}\line\line     //element swapping logic\line     for (i = 1; i < size; i += 2)\line     \{\line         temp = arr[i];\line         arr[i] = arr[i - 1];\line         arr[i - 1] = temp;\line     \}\line\line     cout << "\\narray after swapping elements : \\n";\line     for (i = 0; i < size; ++i)\line     \{\line         cout << arr[i] << " ";\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
enter array size : 4 enter elements in to array : 1 2 3 4 array before swaping elements : 1 2 3 4 array after swapping elements : 2 1 4 3\par
Identity Matrix \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int mat[5][5], order, i, j, flag = 0;\line\line     cout << "Enter size of matrix : ";\line     cin >> order;\line\line     cout << "Enter matrix element : \\n";\line     for (i = 0; i < order; i++)\line     \{\line         cout << "\\n";\line         for (j = 0; j < order; j++)\line         \{\line             cin >> mat[i][j];\line         \}\line     \}\line\line     for (i = 0; i < order; i++)\line     \{\line         for (j = 0; j < order; j++)\line         \{\line             if (i == j)\line             \{\line                 if (mat[i][j] != 1)\line                 \{\line                     flag = 1;\line                     break;\line                 \}\line             \}\line             else\line             \{\line                 if (mat[i][j] != 0)\line                 \{\line                     flag = 1;\line                     break;\line                 \}\line             \}\line         \}\line     \}\line\line     cout << "The given matrix is ";\line     if (flag == 0)\line         cout << "an identity matrix.\\n";\line     else\line         cout << "not an identity matrix.\\n";\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1 OUTPUT\par
\f0\fs24 Enter size of matrix : 3 Enter matrix element : 1 0 0 0 1 0 0 0 1 The given matrix is an identity matrix.\par
Symmetric Matrix \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<stdlib.h>\line #include<stdio.h>\line\line using namespace std;\line\line int main()\line\{\line     int arr[10][10], i, j, size;\line\line     cout << "Enter size of matrix : ";\line     cin >> size;\line\line\line     cout << "Enter values in matrix : \\n";\line     for (i = 1; i <= size; i++)\line     \{\line         for (j = 1; j <= size; j++)\line         \{\line             cin >> arr[i][j];\line         \}\line     \}\line     for (i = 1; i <= size; i++)\line     \{\line         for (j = 1; j <= size; j++)\line         \{\line             if (arr[i][j] != arr[j][i])\line             \{\line                 cout << "\\n\\nMatrix is not symmetric";\line\line                 exit(0);\line             \}\line         \}\line     \}\line     cout << "\\n\\nMatrix is symmetric";\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter size of matrix : 3 Enter values in matrix : 5 6 7 6 3 2 7 2 1 Matrix is symmetric\par
Skew Symmetric matrix \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<stdio.h>\line #include<stdlib.h>\line\line using namespace std;\line\line int main()\line\{\line     int arr[10][10], i, j, size;\line\line     cout << "Enter order of square matrix : ";\line     cin >> size;\line\line     cout << "\\nEnter matrix values : \\n";\line     for (i = 1; i <= size; i++)\line     \{\line         for (j = 1; j <= size; j++)\line         \{\line\line             cin >> arr[i][j];\line         \}\line     \}\line     for (i = 1; i <= size; i++)\line     \{\line         for (j = 1; j <= size; j++)\line         \{\line             if (arr[i][j] != -arr[j][i])\line             \{\line                 cout << "\\nMatrix is not skew matrix ";\line                 exit(0);\line             \}\line         \}\line     \}\line     cout << "\\nMatrix is skew matrix";\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Enter order of square matrix : 3\par
\par
Enter matrix values :\par
0 2 -1\par
-2 0 -4\par
1 4 0\par
\par
Matrix is skew matrix\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Search Array \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line\line int main()\line\{\line     int size;\line     cout << "Enter How Many Elements You Want To Insert in Array : ";\line     cin >> size;\line     int arr[size];\line     int c, searchelement;\line     int flag = 0;\line\line     cout << "\\nEnter array element : \\n";\line     for (int i = 0; i < size; i++)\line     \{\line         cin >> arr[i];\line     \}\line\line     cout << "Enter the number to search : ";\line     cin >> searchelement;\line\line     for (c = 0; c < size; c++)\line     \{\line         if (arr[c] == searchelement)\line         \{\line             cout << "Element is present at location  : " << c + 1;\line             flag = 1;\line             break;\line         \}\line     \}\line     if (!flag)\line         cout << "Element is not present in array.\\n";\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter How Many Elements You Want To Insert in Array : 6 Enter array element : 1 2 3 4 5 6 Enter the number to search : 3 Element is present at location : 3\par
Remove Duplicates from Array \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<stdio.h>\line #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     //variable declaration\line     int a[20], i, j, k, n;\line\line     //take user input\line     cout << "Enter array size : ";\line     cin >> n;\line\line     //ask for array elements\line     cout << "\\nEnter array " << n << " element : \\n";\line     for (i = 0; i < n; i++)\line     \{\line         cin >> a[i];\line     \}\line\line\line     //display array elements\line     cout << "\\nOriginal array Elements are : ";\line\line     for (i = 0; i < n; i++)\line     \{\line         cout << a[i] << " ";\line     \}\line\line     //display new array elements and remove duplicate numbers from array\line     cout << "\\nNew array Element are  : ";\line\line     for (i = 0; i < n; i++)\line     \{\line         for (j = i + 1; j < n;)\line         \{\line             if (a[j] == a[i])\line             \{\line                 for (k = j; k < n; k++)\line                 \{\line                     a[k] = a[k + 1];\line                 \}\line                 n--;\line             \}\line             else\line             \{\line                 j++;\line             \}\line         \}\line     \}\line\par
  for (i = 0; i < n; i++)\line     \{\line         cout << a[i] << " ";\line     \}\line\line     return 0;\line\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter array size : 5 Enter array 5 element : 9 7 3 6 9 Original array Elements are : 9 7 3 6 9 New array Element are : 9 7 3 6\par
Simple Array \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     //variable declaration\line     int size;\line\line     //take user input for array size\line     cout << "Enter how many elements you want to insert in array : ";\line     cin >> size;\line\line     int num[size];\line\line     //take user input for array elements\line     cout << "\\nEnter Array elements : \\n";\line\line     for (int i = 0; i < size; i++)\line     \{\line         cin >> num[i];\line     \}\line\line     cout << "\\nElements in array : \\n";\line\line     //loop to display array items\line     for (int i = 0; i < size; i++)\line     \{\line         cout << num[i] << "\\n";\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter how many elements you want to insert in array : 4 Enter Array elements : 1 2 3 4 Elements in array : 1 2 3 4\par
Spiral Matrix \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <vector>\line // for auto_ptr\line #include <memory>\line // for the ceil and log10 and floor functions\line #include <cmath>\line #include <iostream>\line // for the setw function\line #include <iomanip> \line\line using namespace std;\line\line typedef vector<int> IntRow;\line typedef vector<IntRow> IntTable;\line\line auto_ptr<IntTable> getSpiralArray(int dimension)\line\{\line     auto_ptr<IntTable> spiralArrayPtr(new IntTable(\line             dimension, IntRow(dimension)));\line\line     int numConcentricSquares = static_cast< int >( ceil(\line             static_cast< double >( dimension ) / 2.0));\line\line     int j;\line     int sideLen = dimension;\line     int currNum = 0;\line\line     for (int i = 0; i < numConcentricSquares; i++)\line     \{\line         // do top side\line         for (j = 0; j < sideLen; j++)\line             (*spiralArrayPtr)[i][i + j] = currNum++;\line\line         // do right side\line         for (j = 1; j < sideLen; j++)\line             (*spiralArrayPtr)[i + j][dimension - 1 - i] = currNum++;\line\line         // do bottom side\line         for (j = sideLen - 2; j > -1; j--)\line             (*spiralArrayPtr)[dimension - 1 - i][i + j] = currNum++;\line\line         // do left side\line         for (j = sideLen - 2; j > 0; j--)\line             (*spiralArrayPtr)[i + j][i] = currNum++;\line\line         sideLen -= 2;\line     \}\line\line     return spiralArrayPtr;\line\}\line\line void printSpiralArray(const auto_ptr<IntTable> &spiralArrayPtr)\line\{\line     size_t dimension = spiralArrayPtr->size();\line\par
  int fieldWidth = static_cast< int >( floor(log10(\line             static_cast< double >( dimension * dimension - 1 )))) + 2;\line\line     size_t col;\line     for (size_t row = 0; row < dimension; row++)\line     \{\line         for (col = 0; col < dimension; col++)\line             cout << setw(fieldWidth) << (*spiralArrayPtr)[row][col];\line         cout << endl;\line     \}\line\}\line\line int main()\line\{\line     printSpiralArray(getSpiralArray(5));\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
0 1 2 3 4 15 16 17 18 5 14 23 24 19 6 13 22 21 20 7 12 11 10 9 8\par
Matrix transpose \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     int a[10][10], trans[10][10], r, c, i, j;\line     cout << "Enter rows and columns of matrix: ";\line     cin >> r >> c;\line\line     // Storing element of matrix entered by user in array a[][].\line     cout << endl << "Enter elements of matrix: " << endl;\line     for (i = 0; i < r; ++i)\line     \{\line         for (j = 0; j < c; ++j)\line         \{\line             cout << "\\nEnter elements a" << i + 1 << j + 1 << " : ";\line             cin >> a[i][j];\line         \}\line     \}\line     \line     // Displaying the matrix a[][]\line     cout << endl << "Entered Matrix: " << endl;\line     for (i = 0; i < r; ++i)\line     \{\line         for (j = 0; j < c; ++j)\line         \{\line             cout << " " << a[i][j];\line             if (j == c - 1)\line                 cout << endl << endl;\line         \}\line     \}\line     // Finding transpose of matrix a[][] and storing it in array trans[][].\line     for (i = 0; i < r; ++i)\line     \{\line         for (j = 0; j < c; ++j)\line         \{\line             trans[j][i] = a[i][j];\line         \}\line     \}\line     \line     // Displaying the transpose,i.e, Displaying array trans[][].\line     cout << endl << "Transpose of Matrix: " << endl;\line     for (i = 0; i < c; ++i)\line     \{\line         for (j = 0; j < r; ++j)\line         \{\line             cout << " " << trans[i][j];\line             if (j == r - 1)\line                 cout << endl << endl;\line         \}\line     \}\line     \line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1 OUTPUT\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631 Enter rows and columns of matrix: 2 3\par
Enter elements of matrix: \par
Enter elements a11 :1\par
Enter elements a12 :2\par
Enter elements a13 :3\par
Enter elements a21 :4\par
Enter elements a22 :5\par
Enter elements a23 :6\par
Entered Matrix: \par
 1 2 3\par
\par
 4 5 6\par
\par
\par
Transpose of Matrix: \par
 1 4\par
\par
 2 5\par
\par
 3 6\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Array Sum and Average \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     int n, i;\line     float sum = 0.0, average;\line     cout << "Enter the numbers of data: ";\line     cin >> n;\line     float num[n];\line     for (i = 0; i < n; ++i)\line     \{\line         cout << endl << i + 1 << ". Enter number: ";\line         cin >> num[i];\line         sum += num[i];\line     \}\line\line     cout << endl << "Sum = " << sum;\line\line     average = sum / n;\line     cout << endl << "Average = " << average;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the numbers of data: 4\par
1. Enter number: 5\par
2. Enter number: 2\par
3. Enter number: 9\par
4. Enter number: 3\par
Sum = 19\par
Average = 4.75\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Sum of the array elements \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int i, Num_arr[50], sum, num;\line\line     cout << "Enter size of array : ";\line     cin >> num;\line\line     //Reading values into Array\line     cout << "\\nEnter array elements : ";\line     for (i = 0; i < num; i++)\line     \{\line         cin >> Num_arr[i];\line     \}\line\line     //Computation of total\line     sum = 0;\line     for (i = 0; i < num; i++)\line     \{\line         sum = sum + Num_arr[i];\line     \}\line\line     //Printing of total\line     cout << "\\nSum of array element is : " << sum;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter size of array : 5\par
\par
Enter array elements : 1\par
2\par
5\par
9\par
6\par
\par
Sum of array element is : 23\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Singly Linked List \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<cstdio>\line #include<cstdlib>\line using namespace std;\line\line struct node\line\{\line     int info;\line     struct node *next;\line\}*start;\line\line class single_llist\line\{\line     public:\line         node* create_node(int);\line         void insert_begin();\line         void insert_pos();\line         void insert_last();\line         void delete_pos();\line         void sort();\line         void search();\line         void update();\line         void reverse();\line         void display();\line         single_llist()\line         \{\line             start = NULL;\line         \}\line\};\line\line main()\line\{\line     int choice, nodes, element, position, i;\line     single_llist sl;\line     start = NULL;\line     while (1)\line     \{\line         cout<<endl<<"---------------------------------"<<endl;\line         cout<<endl<<"Operations on singly linked list"<<endl;\line         cout<<endl<<"---------------------------------"<<endl;\line         cout<<"1.Insert Node at beginning"<<endl;\line         cout<<"2.Insert node at last"<<endl;\line         cout<<"3.Insert node at position"<<endl;\line         cout<<"4.Sort Link List"<<endl;\line         cout<<"5.Delete a Particular Node"<<endl;\line         cout<<"6.Update Node Value"<<endl;\line         cout<<"7.Search Element"<<endl;\line         cout<<"8.Display Linked List"<<endl;\line         cout<<"9.Reverse Linked List "<<endl;\line         cout<<"10.Exit "<<endl;\line         cout<<"Enter your choice : ";\line         cin>>choice;\line         switch(choice)\line         \{\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 case 1:\line cout<<"Inserting Node at Beginning: "<<endl;\line sl.insert_begin();\line cout<<endl;\line break;\line case 2:\line cout<<"Inserting Node at Last: "<<endl;\line sl.insert_last();\line cout<<endl;\line break;\line case 3:\line cout<<"Inserting Node at a given position:"<<endl;\line sl.insert_pos();\line cout<<endl;\line break;\line case 4:\line cout<<"Sort Link List: "<<endl;\line sl.sort();\line cout<<endl;\line break;\line case 5:\line cout<<"Delete a particular node: "<<endl;\line sl.delete_pos();\line break;\line case 6:\line cout<<"Update Node Value:"<<endl;\line sl.update();\line cout<<endl;\line break;\line case 7:\line cout<<"Search element in Link List: "<<endl;\line sl.search();\line cout<<endl;\line break;\line case 8:\line cout<<"Display elements of link list"<<endl;\line sl.display();\line cout<<endl;\line break;\line case 9:\line cout<<"Reverse elements of Link List"<<endl;\line sl.reverse();\line cout<<endl;\line break;\line case 10:\line cout<<"Exiting..."<<endl;\line exit(1);\line break;\line default:\line cout<<"Wrong choice"<<endl;\line\}\line\}\line\}\line\line node *single_llist::create_node(int value)\line\par
\{\line struct node *temp, *s;\line temp = new(struct node);\line if (temp == NULL)\line\{\line cout<<"Memory not allocated "<<endl;\line return 0;\line\}\line else\line\{\line temp->info = value;\line temp->next = NULL;\line return temp;\line\}\line\}\line\line void single_llist::insert_begin()\line\{\line int value;\line cout<<"Enter the value to be inserted: ";\line cin>>value;\line struct node *temp, *p;\line temp = create_node(value);\line if (start == NULL)\line\{\line start = temp;\line start->next = NULL;\line\}\line else\line\{\line p = start;\line start = temp;\line start->next = p;\line\}\line cout<<"Element Inserted at beginning"<<endl;\line\}\line\line void single_llist::insert_last()\line\{\line int value;\line cout<<"Enter the value to be inserted: ";\line cin>>value;\line struct node *temp, *s;\line temp = create_node(value);\line s = start;\line while (s->next != NULL)\line\par
\{\line s = s->next;\line\}\line temp->next = NULL;\line s->next = temp;\line cout<<"Element Inserted at last"<<endl;\line\}\line\line void single_llist::insert_pos()\line\{\line int value, pos, counter = 0;\line cout<<"Enter the value to be inserted: ";\line cin>>value;\line struct node *temp, *s, *ptr;\line temp = create_node(value);\line cout<<"Enter the postion at which node to be inserted: ";\line cin>>pos;\line int i;\line s = start;\line while (s != NULL)\line\{\line s = s->next;\line counter++;\line\}\line if (pos == 1)\line\{\line if (start == NULL)\line\{\line start = temp;\line start->next = NULL;\line\}\line else\line\{\line ptr = start;\line start = temp;\line start->next = ptr;\line\}\line\}\line else if (pos > 1 && pos <= counter)\line\{\line s = start;\line for (i = 1; i < pos; i++)\line\{\line ptr = s;\line s = s->next;\line\}\line\par
ptr->next = temp;\line temp->next = s;\line\}\line else\line\{\line cout<<"Positon out of range"<<endl;\line\}\line\}\line\line void single_llist::sort()\line\{\line struct node *ptr, *s;\line int value;\line if (start == NULL)\line\{\line cout<<"The List is empty"<<endl;\line return;\line\}\line ptr = start;\line while (ptr != NULL)\line\{\line for (s = ptr->next;s !=NULL;s = s->next)\line\{\line if (ptr->info > s->info)\line\{\line value = ptr->info;\line ptr->info = s->info;\line s->info = value;\line\}\line\}\line ptr = ptr->next;\line\}\line\}\line\line void single_llist::delete_pos()\line\{\line int pos, i, counter = 0;\line if (start == NULL)\line\{\line cout<<"List is empty"<<endl;\line return;\line\}\line cout<<"Enter the position of value to be deleted: ";\line cin>>pos;\line struct node *s, *ptr;\line s = start;\line if (pos == 1)\line\{\line start = s->next;\line\}\line else\line\{\line while (s != NULL)\line\{\line s = s->next;\line\par
counter++;\line\}\line if (pos > 0 && pos <= counter)\line\{\line s = start;\line for (i = 1;i < pos;i++)\line\{\line ptr = s;\line s = s->next;\line\}\line ptr->next = s->next;\line\}\line else\line\{\line cout<<"Position out of range"<<endl;\line\}\line free(s);\line cout<<"Element Deleted"<<endl;\line\}\line\}\line\line void single_llist::update()\line\{\line int value, pos, i;\line if (start == NULL)\line\{\line cout<<"List is empty"<<endl;\line return;\line\}\line cout<<"Enter the node postion to be updated: ";\line cin>>pos;\line cout<<"Enter the new value: ";\line cin>>value;\line struct node *s, *ptr;\line s = start;\line if (pos == 1)\line\{\line start->info = value;\line\}\line else\line\{\line for (i = 0;i < pos - 1;i++)\line\{\line if (s == NULL)\line\{\line cout<<"There are less than "<<pos<<" elements";\line return;\line\}\line s = s->next;\line\}\line s->info = value;\line\}\line cout<<"Node Updated"<<endl;\line\par
\}\line\line void single_llist::search()\line\{\line int value, pos = 0;\line bool flag = false;\line if (start == NULL)\line\{\line cout<<"List is empty"<<endl;\line return;\line\}\line cout<<"Enter the value to be searched: ";\line cin>>value;\line struct node *s;\line s = start;\line while (s != NULL)\line\{\line pos++;\line if (s->info == value)\line\{\line flag = true;\line cout<<"Element "<<value<<" is found at position "<<pos<<endl;\line\}\line s = s->next;\line\}\line if (!flag)\line cout<<"Element "<<value<<" not found in the list"<<endl;\line\}\line\line void single_llist::reverse()\line\{\line struct node *ptr1, *ptr2, *ptr3;\line if (start == NULL)\line\{\line cout<<"List is empty"<<endl;\line return;\line\}\line if (start->next == NULL)\line\{\line return;\line\}\line ptr1 = start;\line ptr2 = ptr1->next;\line ptr3 = ptr2->next;\line ptr1->next = NULL;\line ptr2->next = ptr1;\line while (ptr3 != NULL)\line\{\line ptr1 = ptr2;\line ptr2 = ptr3;\line ptr3 = ptr3->next;\line ptr2->next = ptr1;\line\}\line start = ptr2;\line\}\line\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 void single_llist::display()\line\{\line     struct node *temp;\line     if (start == NULL)\line     \{\line         cout<<"The List is Empty"<<endl;\line         return;\line     \}\line     temp = start;\line     cout<<"Elements of list are: "<<endl;\line     while (temp != NULL)\line     \{\line         cout<<temp->info<<"->";\line         temp = temp->next;\line     \}\line     cout<<"NULL"<<endl;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 ---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 8\par
Display elements of link list\par
The List is Empty.\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 5\par
Delete a particular node: \par
List is empty\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 6\par
Update Node Value:\par
List is empty\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 7\par
Search element in Link List: \par
List is empty\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 3\par
Inserting Node at a given position:\par
Enter the value to be inserted: 1010\par
Enter the postion at which node to be inserted: 5\par
Positon out of range\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 1\par
Inserting Node at Beginning:\par
Enter the value to be inserted: 100\par
Element Inserted at beginning\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 1\par
Inserting Node at Beginning:\par
Enter the value to be inserted: 200\par
Element Inserted at beginning\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 8\par
Display elements of link list\par
Elements of list are:\par
200->100->NULL\par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 2\par
Inserting node at last:\par
Enter the value to be inserted: 50\par
Element Inserted at last\par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 2\par
Inserting node at last:\par
Enter the value to be inserted: 150\par
Element Inserted at last\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 8\par
Display elements of link list\par
Elements of list are:\par
200->100->50->150->NULL\par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 3\par
Inserting node at a given position:\par
Enter the value to be inserted: 1111\par
Enter the position at which node to be inserted: 4\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 8\par
Display elements of link list\par
Elements of list are:\par
200->100->50->1111->150->NULL\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 3\par
Inserting node at a given position:\par
Enter the value to be inserted: 1010\par
Enter the position at which node to be inserted: 100\par
Position out of range\par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 8\par
Display elements of link list\par
Elements of list are:\par
200->100->50->1111->150->NULL\par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 5\par
Delete a Particular node:\par
Enter the position of value to be deleted: 1\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 8\par
Display elements of link list\par
Elements of list are:\par
100->50->1111->150->NULL\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 6\par
Update Node Value:\par
Enter the node position to be updated: 1\par
Enter the new value: 1010\par
Node Updated\par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 8\par
Display elements of link list\par
Elements of list are:\par
1010->50->1111->150->NULL\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 7\par
Search element in Link List:\par
Enter the value to be searched: 50\par
Element 50 is found at position 2\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 9\par
Reverse elements of Link List\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 8\par
Display elements of link list\par
Elements of list are:\par
150->1111->50->1010->NULL\par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 4\par
Sort Link List:\par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 8\par
Display elements of link list\par
Elements of list are:\par
50->150->1010->1111->NULL\par
 \par
 \par
---------------------------------\par
 \par
Operations on singly linked list\par
 \par
---------------------------------\par
1.Insert Node at beginning\par
2.Insert node at last\par
3.Insert node at position\par
4.Sort Link List\par
5.Delete a Particular Node\par
6.Update Node Value\par
7.Search Element\par
8.Display Linked List\par
9.Reverse Linked List \par
10.Exit \par
Enter your choice : 10\par
Exiting...\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Doubly linked list \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<cstdio>\line #include<cstdlib>\line using namespace std;\line\line // Node Declaration\line struct node\line\{\line     int info;\line     struct node *next;\line     struct node *prev;\line\}*start;\line\line class double_llist\line\{\line     public:\line         void create_list(int value);\line         void add_begin(int value);\line         void add_after(int value, int position);\line         void delete_element(int value);\line         void search_element(int value);\line         void display_dlist();\line         void count();\line         void reverse();\line         double_llist()\line         \{\line             start = NULL;\line         \}\line\};\line\line int main()\line\{\line     int choice, element, position;\line     double_llist dl;\line\line     cout<<endl<<"Operations on Doubly linked list"<<endl;\line     cout<<"1.Create Node"<<endl;\line     cout<<"2.Add at begining"<<endl;\line     cout<<"3.Add after position"<<endl;\line     cout<<"4.Delete"<<endl;\line     cout<<"5.Display"<<endl;\line     cout<<"6.Count"<<endl;\line     cout<<"7.Reverse"<<endl;\line     cout<<"8.Quit"<<endl;\line     while (1)\line     \{\line         cout<<"Enter your choice : ";\line         cin>>choice;\line         switch ( choice )\line         \{\line         case 1:\line             cout<<"Enter the element: ";\line             cin>>element;\line             dl.create_list(element);\line             cout<<endl;\line             break;\line         case 2:\line             cout<<"Enter the element: ";\line             cin>>element;\line             dl.add_begin(element);\line             cout<<endl;\line             break;\line         case 3:\line             cout<<"Enter the element: ";\line             cin>>element;\line             cout<<"Insert Element after postion: ";\line             cin>>position;\line             dl.add_after(element, position);\line             cout<<endl;\line             break;\line         case 4:\line             if (start == NULL)\line             \{\line                 cout<<"List empty,nothing to delete"<<endl;\line                 break;\line             \}\line             cout<<"Enter the element for deletion: ";\line             cin>>element;\line             dl.delete_element(element);\line             cout<<endl;\line             break;\line         case 5:\line             dl.display_dlist();\line             cout<<endl;\line             break;\line         case 6:\line             dl.count();\line             break;\line         case 7:\line             if (start == NULL)\line             \{\line                 cout<<"List empty,nothing to reverse"<<endl;\line                 break;\line             \}\line             dl.reverse();\line             cout<<endl;\line             break;\line         case 8:\line             exit(1);\line         default:\line             cout<<"Wrong choice"<<endl;\line         \}\line     \}\line     return 0;\line\}\line\line void double_llist::create_list(int value)\line\{\line     struct node *s, *temp;\line     temp = new(struct node);\line     temp->info = value;\line     temp->next = NULL;\line     if (start == NULL)\line     \{\line         temp->prev = NULL;\line         start = temp;\line     \}\line     else\line     \{\line         s = start;\line         while (s->next != NULL)\line             s = s->next;\line         s->next = temp;\line         temp->prev = s;\line     \}\line\}\line\line void double_llist::add_begin(int value)\line\{\line     if (start == NULL)\line     \{\line         cout<<"First Create the list."<<endl;\line         return;\line     \}\line     struct node *temp;\line     temp = new(struct node);\line     temp->prev = NULL;\line     temp->info = value;\line     temp->next = start;\line     start->prev = temp;\line     start = temp;\line     cout<<"Element Inserted"<<endl;\line\}\line\line void double_llist::add_after(int value, int pos)\line\{\line     if (start == NULL)\line     \{\line         cout<<"First Create the list."<<endl;\line         return;\line     \}\line     struct node *tmp, *q;\line     int i;\line     q = start;\line     for (i = 0;i < pos - 1;i++)\line     \{\line         q = q->next;\line         if (q == NULL)\line         \{\line             cout<<"There are less than ";\line             cout<<pos<<" elements."<<endl;\line             return;\line         \}\line     \}\line     tmp = new(struct node);\line     tmp->info = value;\line     if (q->next == NULL)\line     \{\line         q->next = tmp;\line         tmp->next = NULL;\line         tmp->prev = q;\line     \}\line     else\line     \{\line         tmp->next = q->next;\line         tmp->next->prev = tmp;\line         q->next = tmp;\line         tmp->prev = q;\line     \}\line     cout<<"Element Inserted"<<endl;\line\}\line\line void double_llist::delete_element(int value)\line\{\line     struct node *tmp, *q;\line      /*first element deletion*/\line     if (start->info == value)\line     \{\line         tmp = start;\line         start = start->next;\line         start->prev = NULL;\line         cout<<"Element Deleted"<<endl;\line         free(tmp);\line         return;\line     \}\line     q = start;\line     while (q->next->next != NULL)\line     \{\line         /*Element deleted in between*/\line         if (q->next->info == value)\line         \{\line             tmp = q->next;\line             q->next = tmp->next;\line             tmp->next->prev = q;\line             cout<<"Element Deleted"<<endl;\line             free(tmp);\line             return;\line         \}\line         q = q->next;\line     \}\line      /*last element deleted*/\line     if (q->next->info == value)\line     \{\line         tmp = q->next;\line         free(tmp);\line         q->next = NULL;\line         cout<<"Element Deleted"<<endl;\line         return;\line     \}\line     cout<<"Element "<<value<<" not found"<<endl;\line\}\line\line void double_llist::display_dlist()\line\{\line     struct node *q;\line     if (start == NULL)\line     \{\line         cout<<"List empty,nothing to display"<<endl;\line         return;\line     \}\line     q = start;\line     cout<<"The Doubly Link List is :"<<endl;\line     while (q != NULL)\line     \{\line         cout<<q->info<<" <-> ";\line         q = q->next;\line     \}\line     cout<<"NULL"<<endl;\line\}\line\line void double_llist::count()\line\{\line     struct node *q = start;\line     int cnt = 0;\line     while (q != NULL)\line     \{\line         q = q->next;\line         cnt++;\line     \}\line     cout<<"Number of elements are: "<<cnt<<endl;\line\}\line\line void double_llist::reverse()\line\{\line     struct node *p1, *p2;\line     p1 = start;\line     p2 = p1->next;\line     p1->next = NULL;\line     p1->prev = p2;\line     while (p2 != NULL)\line     \{\line         p2->prev = p2->next;\line         p2->next = p1;\line         p1 = p2;\line         p2 = p2->prev;\line     \}\line     start = p1;\line     cout<<"List Reversed"<<endl;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Operations on Doubly linked list 1.Create Node 2.Add at begining 3.Add after position 4.Delete 5.Display 6.Count 7.Reverse 8.Quit Enter your choice : 1 Enter the element: 5 Enter your choice : 5 The Doubly Link List is : 5 <-> NULL Enter your choice : 1 Enter the element: 8 Enter your choice : 5 The Doubly Link List is : 5 <-> 8 <-> NULL Enter your choice : 1 Enter the element: 9 Enter your choice : 5 The Doubly Link List is : 5 <-> 8 <-> 9 <-> NULL Enter your choice : 2 Enter the element: 5 Element Inserted Enter your choice : 5 The Doubly Link List is : 5 <-> 5 <-> 8 <-> 9 <-> NULL Enter your choice : 3 Enter the element: 4 Insert Element after postion: 2 Element Inserted Enter your choice : 5 The Doubly Link List is : 5 <-> 5 <-> 4 <-> 8 <-> 9 <-> NULL Enter your choice : 4 Enter the element for deletion: 8 Element Deleted Enter your choice : 5 The Doubly Link List is : 5 <-> 5 <-> 4 <-> 9 <-> NULL Enter your choice : 6 Number of elements are: 4 Enter your choice : 7 List Reversed Enter your choice : 5 The Doubly Link List is : 9 <-> 4 <-> 5 <-> 5 <-> NULL Enter your choice : 8\par
\f1\fs20\par
\f0\fs24\par
Queue using Array \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line template<class T>\line class Queue\line\{\line     \line private:\line     int front, rear;\line     T *queue;\line     int maxsize;\line     \line public:\line     Queue(int maxqueuesize)\line     \{\line         front = 0;\line         rear = -1;\line         maxsize = maxqueuesize;\line         queue = new T[maxsize];\line     \}\line\line     ~Queue()\line     \{\line         delete[] queue;\line     \}\line\line     int isempty();\line\line     int isfull();\line\line     void insert();\line\line     void deletion();\line\line     void atfront();\line\line     void atrear();\line\line     void display();\line\};\line\line template<class T>\line int Queue<T>::isempty()\line\{\line     if (front == 0 && rear == -1 || front == rear)\line         return 1;\line     else\line         return 0;\line\}\line\line template<class T>\line int Queue<T>::isfull()\line\{\line     if (rear == maxsize - 1)\line         return 1;\line     else\line         return 0;\line\}\line\line template<class T>\line void Queue<T>::atfront()\line\{\line     if (isempty())\line         cout << "\\nSorry the queue is empty!";\line     else\line         cout << "\\nFront element of the queue is : " << queue[front];\line\}\line\line template<class T>\line void Queue<T>::atrear()\line\{\line     if (isempty())\line         cout << "\\nSorry the queue is empty!";\line     else\line         cout << "\\nRear element of the queue is : " << queue[rear];\line\}\line\line template<class T>\line void Queue<T>::insert()\line\{\line     T ele;\line     if (isfull())\line         cout << "\\nSorry the queue is full!";\line     else\line     \{\line         cout << "\\nEnter the element to insert : ";\line         cin >> ele;\line         queue[++rear] = ele;\line     \}\line\}\line\line template<class T>\line void Queue<T>::deletion()\line\{\line     if (isempty())\line         cout << "\\nSorry the queue is empty!";\line     else\line         cout << "\\nDeleted element of the queue is : " << queue[front++];\line\}\line\line template<class T>\line void Queue<T>::display()\line\{\line     if (isempty())\line         cout << "\\nSorry the queue is empty!";\line     else\line     \{\line         cout << "\\nQueue elements are : ";\line         for (int i = front; i <= rear; i++)\line         \{\line             cout << "\\t" << queue[i];\line         \}\line     \}\line\}\line\line int main()\line\{\line     int ch;\line     Queue<int> q(10);\line     cout <<\line     "\\n 1.Insertion \\n 2.Deletion \\n 3.Display Front Element \\n 4.Display Rear Element \\n 5.Display Queue \\n 6.Exit \\n";\line     do\line     \{\line         cout << "\\nEnter your Choice:";\line         cin >> ch;\line         switch (ch)\line         \{\line             case 1:\line                 q.insert();\line                 break;\line             case 2:\line                 q.deletion();\line                 break;\line             case 3:\line                 q.atfront();\line                 break;\line             case 4:\line                 q.atrear();\line                 break;\line             case 5:\line                 q.display();\line                 break;\line             case 6:\line                 break;\line             default:\line                 cout << "\\nWrong Choice Entered!";\line\line         \}\line     \} while (ch <= 5);\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
1.Insertion 2.Deletion 3.Display Front Element 4.Display Rear Element 5.Display Queue 6.Exit Enter your Choice:1 Enter the element to insert : 10 Enter your Choice:1 Enter the element to insert : 20 Enter your Choice:1 Enter the element to insert : 30 Enter your Choice:1 Enter the element to insert : 40 Enter your Choice:1 Enter the element to insert : 50 Enter your Choice:5 Queue elements are : 10 20 30 40 50 Enter your Choice:2 Deleted element of the queue is : 10 Enter your Choice:3 Front element of the queue is : 20 Enter your Choice:4 Rear element of the queue is : 50 Enter your Choice:2 Deleted element of the queue is : 20 Enter your Choice:2 Deleted element of the queue is : 30 Enter your Choice:6\par
Circular Queue \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line #define MAX 5\line using namespace std;\line\line class Circular_Queue\line\{\line     \line private:\line     int *cqueue_arr;\line     int front, rear;\line     \line public:\line     Circular_Queue()\line     \{\line         cqueue_arr = new int[MAX];\line         rear = front = -1;\line     \}\line\line     void insert(int item)\line     \{\line         if ((front == 0 && rear == MAX - 1) || (front == rear + 1))\line         \{\line             cout << "Queue Overflow \\n";\line             return;\line         \}\line         if (front == -1)\line         \{\line             front = 0;\line             rear = 0;\line         \}\line         else\line         \{\line             if (rear == MAX - 1)\line                 rear = 0;\line             else\line                 rear = rear + 1;\line         \}\line         cqueue_arr[rear] = item;\line     \}\line\line     void del()\line     \{\line         if (front == -1)\line         \{\line             cout << "Queue Underflow\\n";\line             return;\line         \}\line         cout << "Element deleted from queue is : " << cqueue_arr[front] << endl;\line         if (front == rear)\line         \{\line             front = -1;\line             rear = -1;\line         \}\line         else\line         \{\line             if (front == MAX - 1)\line                 front = 0;\line             else\line                 front = front + 1;\line         \}\line     \}\line\line     void display()\line     \{\line         int front_pos = front, rear_pos = rear;\line         if (front == -1)\line         \{\line             cout << "Queue is empty\\n";\line             return;\line         \}\line         cout << "Queue elements :\\n";\line         if (front_pos <= rear_pos)\line         \{\line             while (front_pos <= rear_pos)\line             \{\line                 cout << cqueue_arr[front_pos] << "  ";\line                 front_pos++;\line             \}\line         \}\line         else\line         \{\line             while (front_pos <= MAX - 1)\line             \{\line                 cout << cqueue_arr[front_pos] << "  ";\line                 front_pos++;\line             \}\line             front_pos = 0;\line             while (front_pos <= rear_pos)\line             \{\line                 cout << cqueue_arr[front_pos] << "  ";\line                 front_pos++;\line             \}\line         \}\line         cout << endl;\line     \}\line\};\line\line int main()\line\{\line     int choice, item;\line     Circular_Queue cq;\line     cout << "1.Insert\\n";\line     cout << "2.Delete\\n";\line     cout << "3.Display\\n";\line     cout << "4.Quit\\n";\line     \line     do\line     \{\line         cout << "\\nEnter your choice : ";\line         cin >> choice;\line         switch (choice)\line         \{\line             case 1:\line                 cout << "Input the element for insertion in queue : ";\line                 cin >> item;\line                 cq.insert(item);\line                 break;\line             case 2:\line                 cq.del();\line                 break;\line             case 3:\line                 cq.display();\line                 break;\line             case 4:\line                 break;\line             default:\line                 cout << "Wrong choice\\n";\line         \}\line     \}\line     while (choice != 4);\line     \line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 1.Insert\par
2.Delete\par
3.Display\par
4.Quit\par
\par
Enter your choice : 1\par
Input the element for insertion in queue : 2\par
\par
Enter your choice : 1\par
Input the element for insertion in queue : 3\par
\par
Enter your choice : 1\par
Input the element for insertion in queue : 4\par
\par
Enter your choice : 1\par
Input the element for insertion in queue : 5\par
\par
Enter your choice : 1\par
Input the element for insertion in queue : 6\par
\par
Enter your choice : 3\par
Queue elements :\par
2  3  4  5  6\par
\par
Enter your choice : 2\par
Element deleted from queue is : 2\par
\par
Enter your choice : 1\par
Input the element for insertion in queue : 65\par
\par
Enter your choice : 3\par
Queue elements :\par
3  4  5  6  65\par
\par
Enter your choice : 1\par
Input the element for insertion in queue : 8\par
Queue Overflow\par
\par
Enter your choice : 3\par
Queue elements :\par
3  4  5  6  65\par
\par
Enter your choice : 1\par
Input the element for insertion in queue : 65\par
Queue Overflow\par
\par
Enter your choice : 2\par
Element deleted from queue is : 3\par
\par
Enter your choice : 2\par
Element deleted from queue is : 4\par
\par
Enter your choice : 2\par
Element deleted from queue is : 5\par
\par
Enter your choice : 3\par
Queue elements :\par
6  65\par
\par
Enter your choice : 1\par
Input the element for insertion in queue : 56\par
\par
Enter your choice : 3\par
Queue elements :\par
6  65  56\par
\par
Enter your choice :4\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Stack using Linked List \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<cstdlib>\line\line using namespace std;\line\line struct node \{\line     int info;\line     struct node *link;\line\} *top;\line\line\line class stack_list \{\line\line public:\line     node *push(node *, int);\line\line     node *pop(node *);\line\line     void traverse(node *);\line\line     stack_list()\line     \{\line         top = NULL;\line     \}\line\};\line\line int main()\line\{\line     int choice, item;\line     stack_list sl;\line\line     cout << "Operations on Stack" << endl;\line     cout << "\\n-------------" << endl;\line     cout << "1.Push Element into the Stack" << endl;\line     cout << "2.Pop Element from the Stack" << endl;\line     cout << "3.Traverse the Stack" << endl;\line     cout << "4.Quit" << endl;\line     while (1)\line     \{\line         cout << "\\nEnter your Choice: ";\line         cin >> choice;\line         switch (choice)\line         \{\line             case 1:\line                 cout << "Enter value to be pushed into the stack: ";\line                 cin >> item;\line                 top = sl.push(top, item);\line                 break;\line             case 2:\line                 top = sl.pop(top);\line                 break;\line             case 3:\line                 sl.traverse(top);\line                 break;\line             case 4:\line                 exit(1);\line             default:\line                 cout << "Wrong Choice" << endl;\line         \}\line     \}\line\}\line\line node *stack_list::push(node *top, int item)\line\{\line     node *tmp;\line     tmp = new (struct node);\line     tmp->info = item;\line     tmp->link = top;\line     top = tmp;\line     return top;\line\}\line\line node *stack_list::pop(node *top)\line\{\line     node *tmp;\line     if (top == NULL)\line         cout << "Stack is Empty" << endl;\line     else\line     \{\line         tmp = top;\line         cout << "Element Popped: " << tmp->info << endl;\line         top = top->link;\line         free(tmp);\line     \}\line     return top;\line\}\line\line void stack_list::traverse(node *top)\line\{\line     node *ptr;\line     ptr = top;\line     if (top == NULL)\line         cout << "Stack is empty" << endl;\line     else\line     \{\line         cout << "Stack elements :" << endl;\line         while (ptr != NULL)\line         \{\line             cout << ptr->info << endl;\line             ptr = ptr->link;\line         \}\line     \}\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Operations on Stack\par
\par
-------------\par
1.Push Element into the Stack\par
2.Pop Element from the Stack\par
3.Traverse the Stack\par
4.Quit\par
\par
Enter your Choice: 1\par
Enter value to be pushed into the stack: 10\par
\par
Enter your Choice: 1\par
Enter value to be pushed into the stack: 20\par
\par
Enter your Choice: 1\par
Enter value to be pushed into the stack: 30\par
\par
Enter your Choice: 1\par
Enter value to be pushed into the stack: 40\par
\par
Enter your Choice: 3\par
Stack elements :\par
40\par
30\par
20\par
10\par
\par
Enter your Choice: 2\par
Element Popped: 40\par
\par
Enter your Choice: 2\par
Element Popped: 30\par
\par
Enter your Choice: 3\par
Stack elements :\par
20\par
10\par
\par
Enter your Choice: 4\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Linear Search \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int a[100], i, n, item, s = 0;\line\line     cout << "\\n------------ LINEAR SEARCH ------------ \\n\\n";\line     cout << "Enter No. of Elements=";\line     cin >> n;\line\line     cout << "\\nEnter Elements=\\n";\line     for (i = 1; i <= n; i++)\line     \{\line         cin >> a[i];\line     \}\line\line     cout << "\\nEnter Element you want to Search=";\line     cin >> item;\line\line     for (i = 1; i <= n; i++)\line     \{\line         if (a[i] == item)\line         \{\line             cout << "\\nElement is Found at Location : " << i;\line             s = 1;\line             break;\line         \}\line     \}\line\line     if (s == 0)\line     \{\line         cout << "Data is Not Found";\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
------------ LINEAR SEARCH ------------\par
\par
Enter No. of Elements=5\par
\par
Enter Elements=\par
1\par
8\par
4\par
7\par
6\par
\par
Enter Element you want to Search=4\par
\par
Element is Found at Location : 3\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Binary Search \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int a[100], n, i, beg, end, mid, item;\line\line     cout << "\\n------------ BINARY SEARCH ------------ \\n\\n";\line     cout << "Enter No. of Elements= ";\line     cin >> n;\line\line     cout << "\\nEnter Elements in Sorted Order=\\n";\line     for (i = 1; i <= n; i++)\line     \{\line         cin >> a[i];\line     \}\line\line     cout << "\\nEnter Item you want to Search= ";\line     cin >> item;\line\line     beg = 1;\line     end = n;\line\line     mid = (beg + end) / 2;\line\line     while (beg <= end && a[mid] != item)\line     \{\line         if (a[mid] < item)\line             beg = mid + 1;\line         else\line             end = mid - 1;\line\line         mid = (beg + end) / 2;\line     \}\line\line     if (a[mid] == item)\line     \{\line         cout << "\\nElement found at location : " << mid;\line     \}\line     else\line     \{\line         cout << "Element not found";\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
------------ BINARY SEARCH ------------ Enter No. of Elements= 5 Enter Elements in Sorted Order= 10 20 30 40 50 Enter Item you want to Search= 40 Element found at location : 4\par
Priority Queue \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <cstdio>\line #include <cstring>\line #include <cstdlib>\line\line using namespace std;\line\line\line struct node \{\line     int priority;\line     int info;\line     struct node *link;\line\};\line\line class Priority_Queue \{\line private:\line     node *front;\line public:\line     Priority_Queue()\line     \{\line         front = NULL;\line     \}\line\line     void insert(int item, int priority)\line     \{\line         node *tmp, *q;\line         tmp = new node;\line         tmp->info = item;\line         tmp->priority = priority;\line         if (front == NULL || priority < front->priority)\line         \{\line             tmp->link = front;\line             front = tmp;\line         \}\line         else\line         \{\line             q = front;\line             while (q->link != NULL && q->link->priority <= priority)\line                 q = q->link;\line             tmp->link = q->link;\line             q->link = tmp;\line         \}\line     \}\line\line     void del()\line     \{\line         node *tmp;\line         if (front == NULL)\line             cout << "Queue Underflow\\n";\line         else\line         \{\line             tmp = front;\line             cout << "Deleted item is: " << tmp->info << endl;\line             front = front->link;\line             free(tmp);\line         \}\line     \}\line\line     void display()\line     \{\line         node *ptr;\line         ptr = front;\line         if (front == NULL)\line             cout << "Queue is empty\\n";\line         else\line         \{\line             cout << "Queue is :\\n";\line             cout << "Priority       Item\\n";\line             while (ptr != NULL)\line             \{\line                 cout << ptr->priority << "                 " << ptr->info << endl;\line                 ptr = ptr->link;\line             \}\line         \}\line     \}\line\};\line\line int main()\line\{\line     int choice, item, priority;\line     Priority_Queue pq;\line     cout << "1.Insert\\n";\line     cout << "2.Delete\\n";\line     cout << "3.Display\\n";\line     cout << "4.Quit\\n";\line     do\line     \{\line         cout << "\\nEnter your choice : ";\line         cin >> choice;\line         switch (choice)\line         \{\line             case 1:\line                 cout << "Input the item value to be added in the queue : ";\line                 cin >> item;\line                 cout << "Enter its priority : ";\line                 cin >> priority;\line                 pq.insert(item, priority);\line                 break;\line             case 2:\line                 pq.del();\line                 break;\line             case 3:\line                 pq.display();\line                 break;\line             case 4:\line                 break;\line             default :\line                 cout << "Wrong choice\\n";\line         \}\line     \}\line     while (choice != 4);\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 1.Insert\par
2.Delete\par
3.Display\par
4.Quit\par
\par
Enter your choice : 1\par
Input the item value to be added in the queue : 45\par
Enter its priority : 3\par
\par
Enter your choice : 1\par
Input the item value to be added in the queue : 58\par
Enter its priority : 4\par
\par
Enter your choice : 1\par
Input the item value to be added in the queue : 68\par
Enter its priority : 1\par
\par
Enter your choice : 1\par
Input the item value to be added in the queue : 50\par
Enter its priority : 2\par
\par
Enter your choice : 3\par
Queue is :\par
Priority       Item\par
1                 68\par
2                 50\par
3                 45\par
4                 58\par
\par
Enter your choice : 2\par
Deleted item is: 68\par
\par
Enter your choice : 3\par
Queue is :\par
Priority       Item\par
2                 50\par
3                 45\par
4                 58\par
\par
Enter your choice :4\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Binary Search Tree & Operations \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <cstdlib>\line\line using namespace std;\line\line class BinarySearchTree \{\line private:\line     struct tree_node \{\line         tree_node *left;\line         tree_node *right;\line         int data;\line     \};\line\line     tree_node *root;\line\line public:\line     BinarySearchTree()\line     \{\line         root = NULL;\line     \}\line\line     bool isEmpty() const\line     \{ return root == NULL; \}\line\line     void print_inorder();\line\line     void inorder(tree_node *);\line\line     void print_preorder();\line\line     void preorder(tree_node *);\line\line     void print_postorder();\line\line     void postorder(tree_node *);\line\line     void insert(int);\line\line     void remove(int);\line\line\};\line\line // Smaller elements go left\line // larger elements go right\line void BinarySearchTree::insert(int d)\line\{\line     tree_node *t = new tree_node;\line     tree_node *parent;\line     t->data = d;\line     t->left = NULL;\line     t->right = NULL;\line     parent = NULL;\line     // is this a new tree?\line     if (isEmpty()) root = t;\line     else\line     \{\line         //Note: ALL insertions are as leaf nodes\line         tree_node *curr;\line         curr = root;\line         // Find the Node's parent\line         while (curr)\line         \{\line             parent = curr;\line             if (t->data > curr->data) curr = curr->right;\line             else curr = curr->left;\line         \}\line\line         if (t->data < parent->data)\line             parent->left = t;\line         else\line             parent->right = t;\line     \}\line\}\line\line void BinarySearchTree::remove(int d)\line\{\line     //Locate the element\line     bool found = false;\line     if (isEmpty())\line     \{\line         cout << " This Tree is empty! " << endl;\line         return;\line     \}\line     tree_node *curr;\line     tree_node *parent;\line     curr = root;\line     while (curr != NULL)\line     \{\line         if (curr->data == d)\line         \{\line             found = true;\line             break;\line         \}\line         else\line         \{\line             parent = curr;\line             if (d > curr->data) curr = curr->right;\line             else curr = curr->left;\line         \}\line     \}\line     if (!found)\line     \{\line         cout << " Data not found! " << endl;\line         return;\line     \}\line\line\line     // 3 cases :\line     // 1. We're removing a leaf node\line     // 2. We're removing a node with a single child\line     // 3. we're removing a node with 2 children\line\line     // Node with single child\line     if ((curr->left == NULL && curr->right != NULL) || (curr->left != NULL\line                                                         && curr->right == NULL))\line     \{\line         if (curr->left == NULL && curr->right != NULL)\line         \{\line             if (parent->left == curr)\line             \{\line                 parent->left = curr->right;\line                 delete curr;\line             \}\line             else\line             \{\line                 parent->right = curr->right;\line                 delete curr;\line             \}\line         \}\line         else // left child present, no right child\line         \{\line             if (parent->left == curr)\line             \{\line                 parent->left = curr->left;\line                 delete curr;\line             \}\line             else\line             \{\line                 parent->right = curr->left;\line                 delete curr;\line             \}\line         \}\line         return;\line     \}\line\line     //We're looking at a leaf node\line     if (curr->left == NULL && curr->right == NULL)\line     \{\line         if (parent->left == curr) parent->left = NULL;\line         else parent->right = NULL;\line         delete curr;\line         return;\line     \}\line\line\line     //Node with 2 children\line     // replace node with smallest value in right subtree\line     if (curr->left != NULL && curr->right != NULL)\line     \{\line         tree_node *chkr;\line         chkr = curr->right;\line         if ((chkr->left == NULL) && (chkr->right == NULL))\line         \{\line             curr = chkr;\line             delete chkr;\line             curr->right = NULL;\line         \}\line         else // right child has children\line         \{\line             //if the node's right child has a left child\line             // Move all the way down left to locate smallest element\line\line             if ((curr->right)->left != NULL)\line             \{\line                 tree_node *lcurr;\line                 tree_node *lcurrp;\line                 lcurrp = curr->right;\line                 lcurr = (curr->right)->left;\line                 while (lcurr->left != NULL)\line                 \{\line                     lcurrp = lcurr;\line                     lcurr = lcurr->left;\line                 \}\line                 curr->data = lcurr->data;\line                 delete lcurr;\line                 lcurrp->left = NULL;\line             \}\line             else\line             \{\line                 tree_node *tmp;\line                 tmp = curr->right;\line                 curr->data = tmp->data;\line                 curr->right = tmp->right;\line                 delete tmp;\line             \}\line\line         \}\line         return;\line     \}\line\line\}\line\line void BinarySearchTree::print_inorder()\line\{\line     inorder(root);\line\}\line\line void BinarySearchTree::inorder(tree_node *p)\line\{\line     if (p != NULL)\line     \{\line         if (p->left) inorder(p->left);\line         cout << " " << p->data << " ";\line         if (p->right) inorder(p->right);\line     \}\line     else return;\line\}\line\line void BinarySearchTree::print_preorder()\line\{\line     preorder(root);\line\}\line\line void BinarySearchTree::preorder(tree_node *p)\line\{\line     if (p != NULL)\line     \{\line         cout << " " << p->data << " ";\line         if (p->left) preorder(p->left);\line         if (p->right) preorder(p->right);\line     \}\line     else return;\line\}\line\line void BinarySearchTree::print_postorder()\line\{\line     postorder(root);\line\}\line\line void BinarySearchTree::postorder(tree_node *p)\line\{\line     if (p != NULL)\line     \{\line         if (p->left) postorder(p->left);\line         if (p->right) postorder(p->right);\line         cout << " " << p->data << " ";\line     \}\line     else return;\line\}\line\line int main()\line\{\line     BinarySearchTree b;\line     int ch, tmp, tmp1;\line\line     cout << " Binary Search Tree Operations " << endl;\line     cout << " ----------------------------- " << endl;\line     cout << " 1. Insertion/Creation " << endl;\line     cout << " 2. In-Order Traversal " << endl;\line     cout << " 3. Pre-Order Traversal " << endl;\line     cout << " 4. Post-Order Traversal " << endl;\line     cout << " 5. Removal " << endl;\line     cout << " 6. Exit " << endl;\line\line\line     while (1)\line     \{\line         cout << " Enter your choice : ";\line         cin >> ch;\line         switch (ch)\line         \{\line             case 1 :\line                 cout << " Enter Number to be inserted : ";\line                 cin >> tmp;\line                 b.insert(tmp);\line                 break;\line             case 2 :\line                 cout << endl;\line                 cout << " In-Order Traversal " << endl;\line                 cout << " -------------------" << endl;\line                 b.print_inorder();\line                 break;\line             case 3 :\line                 cout << endl;\line                 cout << " Pre-Order Traversal " << endl;\line                 cout << " -------------------" << endl;\line                 b.print_preorder();\line                 break;\line             case 4 :\line                 cout << endl;\line                 cout << " Post-Order Traversal " << endl;\line                 cout << " --------------------" << endl;\line                 b.print_postorder();\line                 break;\line             case 5 :\line                 cout << " Enter data to be deleted : ";\line                 cin >> tmp1;\line                 b.remove(tmp1);\line                 break;\line             case 6 :\line                 return 0;\line         \}\line     \}\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 OUTPUT\par
Binary Search Tree Operations ----------------------------- 1. Insertion/Creation 2. In-Order Traversal 3. Pre-Order Traversal 4. Post-Order Traversal 5. Removal 6. Exit Enter your choice : 1 Enter Number to be inserted : 4 Binary Search Tree Operations ----------------------------- 1. Insertion/Creation 2. In-Order Traversal 3. Pre-Order Traversal 4. Post-Order Traversal 5. Removal 6. Exit Enter your choice : 1 Enter Number to be inserted : 5 Binary Search Tree Operations ----------------------------- 1. Insertion/Creation 2. In-Order Traversal 3. Pre-Order Traversal 4. Post-Order Traversal 5. Removal 6. Exit Enter your choice : 1 Enter Number to be inserted : 6 Binary Search Tree Operations ----------------------------- 1. Insertion/Creation 2. In-Order Traversal 3. Pre-Order Traversal 4. Post-Order Traversal 5. Removal 6. Exit Enter your choice : 2 In-Order Traversal ------------------- 4 5 6 Binary Search Tree Operations ----------------------------- 1. Insertion/Creation 2. In-Order Traversal 3. Pre-Order Traversal 4. Post-Order Traversal 5. Removal 6. Exit Enter your choice : 5 Enter data to be deleted : 5 Binary Search Tree Operations ----------------------------- 1. Insertion/Creation 2. In-Order Traversal 3. Pre-Order Traversal 4. Post-Order Traversal 5. Removal 6. Exit Enter your choice : 2 In-Order Traversal ------------------- 4 6 Binary Search Tree Operations ----------------------------- 1. Insertion/Creation 2. In-Order Traversal 3. Pre-Order Traversal 4. Post-Order Traversal 5. Removal 6. Exit Enter your choice : 6 Press any key to continue . . . \par
Heap Sort \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line void max_heapify(int *a, int i, int n)\line\{\line     int j, temp;\line     temp = a[i];\line     j = 2 * i;\line     while (j <= n)\line     \{\line         if (j < n && a[j + 1] > a[j])\line             j = j + 1;\line         if (temp > a[j])\line             break;\line         else if (temp <= a[j])\line         \{\line             a[j / 2] = a[j];\line             j = 2 * j;\line         \}\line     \}\line     a[j / 2] = temp;\line     return;\line\}\line\line void heapsort(int *a, int n)\line\{\line     int i, temp;\line     for (i = n; i >= 2; i--)\line     \{\line         temp = a[i];\line         a[i] = a[1];\line         a[1] = temp;\line         max_heapify(a, 1, i - 1);\line     \}\line\}\line\line void build_maxheap(int *a, int n)\line\{\line     int i;\line     for (i = n / 2; i >= 1; i--)\line     \{\line         max_heapify(a, i, n);\line     \}\line\}\line\line int main()\line\{\line     int n, i, x;\line     cout << "Enter no of elements of array : ";\line     cin >> n;\line     int a[20];\line     for (i = 1; i <= n; i++)\line     \{\line         cout << "Enter element " << (i) << " : ";\line         cin >> a[i];\line     \}\line     build_maxheap(a, n);\line     heapsort(a, n);\line     cout << "Heap Sort Output" << endl;\line     for (i = 1; i <= n; i++)\line     \{\line         cout << a[i] << endl;\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter no of elements of array : 5\par
Enter element 1 : 6\par
Enter element 2 : 2\par
Enter element 3 : 1\par
Enter element 4 : 8\par
Enter element 5 : 3\par
Heap Sort Output\par
1\par
2\par
3\par
6\par
8\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Insertion Sort \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     int a[100], n, i, j, k, temp;\line     cout << "Enter no of element of array : ";\line     cin >> n;\line     for (i = 1; i <= n; i++)\line     \{\line         cout << "Enter " << i << " element : ";\line         cin >> a[i];\line     \}\line     for (i = 1; i <= n; i++)\line     \{\line         for (j = i; j >= 1; j--)\line         \{\line             if (a[j] < a[j - 1])\line             \{\line                 temp = a[j];\line                 a[j] = a[j - 1];\line                 a[j - 1] = temp;\line             \}\line             else\line                 break;\line         \}\line     \}\line\line     cout << "Insertion  Sort Output" << endl;\line     for (k = 0; k < n; k++)\line     \{\line         cout << a[k] << endl;\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter no of element of array : 5\par
Enter 1 element : 1\par
Enter 2 element : 6\par
Enter 3 element : 7\par
Enter 4 element : 4\par
Enter 5 element : 3\par
Insertion  Sort Output\par
1\par
3\par
4\par
6\par
7\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Queue using Stack \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include <stdio.h>\line #include <stdlib.h>\line using namespace std;\line\line void push1(int);\line void push2(int);\line int pop1();\line int pop2();\line void enqueue();\line void dequeue();\line void display();\line void create();\line\line int st1[100], st2[100];\line int top1 = -1, top2 = -1;\line int count = 0;\line\line int main()\line\{\line     int ch;\line\line     cout<<"1-enter element into queue ";\line     // printf("\\n2 - Dequeu element from queue");\line     cout<<"\\n2-display elements ";\line     cout<<"\\n3-exit from execution";\line     create();\line     while (1)\line     \{\line         cout<<"\\n\\nenter your choice :";\line         cin>>ch;\line\line         switch (ch)\line         \{\line         case 1:\line             enqueue();\line             break;\line         case 2:\line             display();\line             break;\line         case 3:\line             exit(0);\line         default:\line             cout<<"wrong choice";\line         \}\line     \}\line\}\line\line /*Function to create a queue*/\line void create()\line\{\line     top1 = top2 = -1;\line\}\line\line /*Function to push the element on to the stack*/\line void push1(int data)\line\{\line     st1[++top1] = data;\line\}\line\line /*Function to pop the element from the stack*/\line int pop1()\line\{\line     return(st1[top1--]);\line\}\line\line /*Function to push an element on to stack*/\line void push2(int data)\line\{\line     st2[++top2] = data;\line\}\line\line /*Function to pop an element from the stack*/\line\line int pop2()\line\{\line     return(st2[top2--]);\line\}\line\line /*Function to add an element into the queue using stack*/\line void enqueue()\line\{\line     int data, i;\line\line     cout<<"enter data into queue :";\line     cin>>data;\line     push1(data);\line     count++;\line\}\line\line /*Function to display the elements in the stack*/\line\line void display()\line\{\line     int i;\line\line     for (i = 0;i <= top1;i++)\line     \{\line         cout<<st1[i]<<"\\t";\line\line     \}\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
1-enter element into queue 2-display elements 3-exit from execution enter your choice :1 enter data into queue :4 enter your choice :1 enter data into queue :2 enter your choice :1 enter data into queue :5 enter your choice :2 4 2 5 enter your choice :3\par
dequeue \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line class DequeEmptyException \{\line public:\line     DequeEmptyException()\line     \{\line         cout << "Deque empty" << endl;\line     \}\line\};\line\line\line class Node \{\line public:\line     int data;\line     Node *next;\line     Node *prev;\line\};\line\line class Deque \{\line private:\line     Node *front;\line     Node *rear;\line     int count;\line\line public:\line     Deque()\line     \{\line         front = NULL;\line         rear = NULL;\line         count = 0;\line     \}\line\line     void InsertFront(int element)\line     \{\line         // Create a new node\line         Node *tmp = new Node();\line         tmp->data = element;\line         tmp->next = NULL;\line         tmp->prev = NULL;\line\line         if (isEmpty())\line         \{\line             // Add the first element\line             front = rear = tmp;\line         \}\line         else\line         \{\line             // Prepend to the list and fix links\line             tmp->next = front;\line             front->prev = tmp;\line             front = tmp;\line         \}\line\line         count++;\line     \}\line\line     int RemoveFront()\line     \{\line         if (isEmpty())\line         \{\line             throw new DequeEmptyException();\line         \}\line\line         //  Data in the front node\line         int ret = front->data;\line\line         // Delete the front node and fix the links\line         Node *tmp = front;\line         if (front->next != NULL)\line         \{\line             front = front->next;\line             front->prev = NULL;\line         \}\line         else\line         \{\line             front = NULL;\line         \}\line         count--;\line         delete tmp;\line\line         return ret;\line     \}\line\line     void InsertBack(int element)\line     \{\line         // Create a new node\line         Node *tmp = new Node();\line         tmp->data = element;\line         tmp->next = NULL;\line         tmp->prev = NULL;\line\line         if (isEmpty())\line         \{\line             // Add the first element\line             front = rear = tmp;\line         \}\line         else\line         \{\line             // Append to the list and fix links\line             rear->next = tmp;\line             tmp->prev = rear;\line             rear = tmp;\line         \}\line\line         count++;\line     \}\line\line     int RemoveBack()\line     \{\line         if (isEmpty())\line         \{\line             throw new DequeEmptyException();\line         \}\line\line         //  Data in the rear node\line         int ret = rear->data;\line\line         // Delete the front node and fix the links\line         Node *tmp = rear;\line         if (rear->prev != NULL)\line         \{\line             rear = rear->prev;\line             rear->next = NULL;\line         \}\line         else\line         \{\line             rear = NULL;\line         \}\line         count--;\line         delete tmp;\line\line         return ret;\line     \}\line\line     int Front()\line     \{\line         if (isEmpty())\line             throw new DequeEmptyException();\line\line         return front->data;\line     \}\line\line     int Back()\line     \{\line         if (isEmpty())\line             throw new DequeEmptyException();\line\line         return rear->data;\line     \}\line\line     int Size()\line     \{\line         return count;\line     \}\line\line     bool isEmpty()\line     \{\line         return count == 0 ? true : false;\line     \}\line\};\line\line int main()\line\{\line     // Stack behavior using a general dequeue\line     Deque qu;\line     try\line     \{\line         if (qu.isEmpty())\line         \{\line             cout << "Deque is empty" << endl;\line         \}\line\line         // Push elements\line         qu.InsertBack(1500);\line         qu.InsertBack(2020);\line         qu.InsertBack(1300);\line         qu.InsertBack(100);\line         qu.InsertBack(900);\line         qu.InsertBack(10);\line\line         // Size of queue\line         cout << "Size of dequeue = " << qu.Size() << endl;\line\line         // Pop elements\line         cout << qu.RemoveBack() << endl;\line         cout << qu.RemoveBack() << endl;\line         cout << qu.RemoveBack() << endl;\line     \}\line     catch (...)\line     \{\line         cout << "Some exception occured" << endl;\line     \}\line\line     // Queue behavior using a general dequeue\line     Deque dq1;\line     try\line     \{\line         if (dq1.isEmpty())\line         \{\line             cout << "Deque is empty" << endl;\line         \}\line\line         // Push elements\line         dq1.InsertBack(4100);\line         dq1.InsertBack(2400);\line         dq1.InsertBack(3050);\line         dq1.InsertBack(100);\line         dq1.InsertBack(900);\line         dq1.InsertBack(10);\line         // Size of queue\line         cout << "Size of dequeue = " << dq1.Size() << endl;\line\line         // Pop elements\line         cout << dq1.RemoveFront() << endl;\line         cout << dq1.RemoveFront() << endl;\line         cout << dq1.RemoveFront() << endl;\line     \}\line     catch (...)\line     \{\line         cout << "Some exception occured" << endl;\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Deque is empty Size of dequeue = 6 10 900 100 Deque is empty Size of dequeue = 6 4100 2400 3050\par
Minimum Spanning Tree \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line struct node \{\line     int fr, to, cost;\line\} p[6];\line\line int c = 0, dist1 = 0, dist = 0;\line\line void primsalgo(int *ptr, int b[][7], int i, int j)\line\{\line     ptr[i] = 1;\line     while (c < 6)\line     \{\line         int min = 999;\line         for (int i = 0; i < 7; i++)\line         \{\line             if (ptr[i] == 1)\line             \{\line                 for (int j = 0; j < 7;)\line                 \{\line                     if (b[i][j] >= min || b[i][j] == 0)\line                     \{\line                         j++;\line                     \}\line                     else if (b[i][j] < min)\line                     \{\line                         min = b[i][j];\line                         dist = i;\line                         dist1 = j;\line                     \}\line                 \}\line             \}\line         \}\line         ptr[dist1] = 1;\line         p[c].fr = dist;\line         p[c].to = dist1;\line         p[c].cost = min;\line         c++;\line         b[dist][dist1] = b[dist1][dist] = 1000;\line     \}\line     for (int k = 0; k < 6; k++)\line     \{\line         cout << "source node : " << p[k].fr << endl;\line         cout << "destination node : " << p[k].to << endl;\line         cout << "weight of node : " << p[k].cost << endl;\line     \}\line\}\line\line int main()\line\{\line     int a[7];\line     for (int i = 0; i < 7; i++)\line     \{\line         a[i] = 0;\line     \}\line     int b[7][7];\line     for (int i = 0; i < 7; i++)\line     \{\line         cout << "enter values for " << (i + 1) << " row : " << endl;\line         for (int j = 0; j < 7; j++)\line         \{\line             cin >> b[i][j];\line         \}\line     \}\line     primsalgo(a, b, 0, 0);\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
enter values for 1 row :\par
1 1 1 1 1 1 1\par
enter values for 2 row :\par
2 2 2 2 2 2 2\par
enter values for 3 row :\par
3 3 3 3 3 3 3\par
enter values for 4 row :\par
4 4 4 4 4 4 4\par
enter values for 5 row :\par
5 5 5 5 5 5 5\par
enter values for 6 row :\par
6 6 6 6 6 6 6\par
enter values for 7 row :\par
7 7 7 7 7 7 7\par
source node : 0\par
destination node : 0\par
weight of node : 1\par
source node : 0\par
destination node : 1\par
weight of node : 1\par
source node : 0\par
destination node : 2\par
weight of node : 1\par
source node : 0\par
destination node : 3\par
weight of node : 1\par
source node : 0\par
destination node : 4\par
weight of node : 1\par
source node : 0\par
destination node : 5\par
weight of node : 1\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Double Queue \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line class nodecreation \{\line public:\line     int data;\line\line     class nodecreation *next;\line\line     class nodecreation *prev;\line\};\line\line class dqueueoperation : public nodecreation \{\line     nodecreation *head, *tail;\line     int top1, top2;\line\line public:\line     dqueueoperation()\line     \{\line         top1 = 0;\line         top2 = 0;\line         head = NULL;\line         tail = NULL;\line     \}\line\line     void push(int x)\line     \{\line         nodecreation *temp;\line         int ch;\line         if (top1 + top2 >= 5)\line         \{\line             cout << "\\ndqueue overflow!!!";\line             return;\line         \}\line         if (top1 + top2 == 0)\line         \{\line             head = new nodecreation;\line             head->data = x;\line             head->next = NULL;\line             head->prev = NULL;\line             tail = head;\line             top1++;\line         \}\line         else\line         \{\line             cout << "\\nAdd element 1.FIRST 2.LAST\\nEnter your choice : ";\line             cin >> ch;\line\line             if (ch == 1)\line             \{\line                 top1++;\line                 temp = new nodecreation;\line                 temp->data = x;\line                 temp->next = head;\line                 temp->prev = NULL;\line                 head->prev = temp;\line                 head = temp;\line             \}\line             else\line             \{\line                 top2++;\line                 temp = new nodecreation;\line                 temp->data = x;\line                 temp->next = NULL;\line                 temp->prev = tail;\line                 tail->next = temp;\line                 tail = temp;\line             \}\line         \}\line     \}\line\line     void pop()\line     \{\line         int ch;\line         cout << "\\nDelete \\n1.First Node \\n2.Last Node\\nEnter your choice : ";\line         cin >> ch;\line         if (top1 + top2 <= 0)\line         \{\line             cout << "\\nDqueue under flow!!!!";\line             return;\line         \}\line         if (ch == 1)\line         \{\line             head = head->next;\line             head->prev = NULL;\line             top1--;\line         \}\line         else\line         \{\line             top2--;\line             tail = tail->prev;\line             tail->next = NULL;\line         \}\line     \}\line\line     void display()\line     \{\line         int ch;\line         nodecreation *temp;\line         cout << "\\nDisplay from \\n1.Staring \\n2.Ending \\nEnter your choice : ";\line         cin >> ch;\line         if (top1 + top2 <= 0)\line         \{\line             cout << "\\nunder flow";\line             return;\line         \}\line         if (ch == 1)\line         \{\line             temp = head;\line             while (temp != NULL)\line             \{\line                 cout << temp->data << " ";\line                 temp = temp->next;\line             \}\line         \}\line         else\line         \{\line             temp = tail;\line             while (temp != NULL)\line             \{\line                 cout << temp->data << " ";\line                 temp = temp->prev;\line             \}\line         \}\line     \}\line\};\line\line int main()\line\{\line     dqueueoperation d1;\line     int ch;\line     cout << "Enter Dequeue Operation you want to perform" << endl;\line     cout << "1. Insert" << endl;\line     cout << "2. Delete" << endl;\line     cout << "3. Display" << endl;\line     cout << "4. Exit" << endl;\line     while (1)\line     \{\line\line         cout << "\\nEnter your choice : ";\line         cin >> ch;\line         switch (ch)\line         \{\line             case 1:\line                 cout << "\\nEnter element : ";\line                 cin >> ch;\line                 d1.push(ch);\line                 break;\line\line             case 2:\line                 d1.pop();\line                 break;\line\line             case 3:\line                 d1.display();\line                 break;\line             case 4:\line                 return 0;\line         \}\line     \}\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter Dequeue Operation you want to perform\par
1. Insert\par
2. Delete\par
3. Display\par
4. Exit\par
Enter your choice : 1\par
\par
Enter element : 12\par
Enter your choice : 1\par
\par
Enter element : 23\par
\par
Add element 1.FIRST 2.LAST\par
Enter your choice : 1\par
Enter your choice : 1\par
\par
Enter element : 45\par
\par
Add element 1.FIRST 2.LAST\par
Enter your choice : 2\par
Enter your choice : 2\par
\par
Delete \par
1.First Node \par
2.Last Node\par
Enter your choice : 1\par
Enter your choice : 3\par
\par
Display from \par
1.Staring \par
2.Ending \par
Enter your choice : 1\par
12 45 \par
Enter your choice : 4\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Bubble Sort \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<vector>\line\line using namespace std;\line\line void bubble_sort(vector<int> &a)\line\{\line     for (int i = a.size(); i > 0; i--)\line     \{\line         for (int j = 0, k = 1; k < i; j++, k++)\line         \{\line             if (a[j] > a[k])\line             \{\line                 int swap = a[j];\line                 a[j] = a[k];\line                 a[k] = swap;\line             \}\line         \}\line     \}\line\}\line\line int main()\line\{\line     int alen, val;\line     vector<int> a;\line\line     cout << "Enter the number of elements : ";\line     cin >> alen;\line     for (int i = 0; i < alen; i++)\line     \{\line         cin >> val;\line         a.push_back(val);\line     \}\line\line     bubble_sort(a);\line\line     cout << "List of sorted elements: " << endl;\line     for (int i = 0; i < alen; i++)\line     \{\line         cout << a[i] << " ";\line     \}\line     cout << endl;\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter the number of elements : 8\par
6\par
4\par
2\par
3\par
5\par
1\par
7\par
8\par
List of sorted elements:\par
1 2 3 4 5 6 7 8\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Selection Sort \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int a[100], i, n, p, k, min, loc, temp;\line\line     cout << "\\n------------ SELECTION SORT ------------ \\n\\n";\line     cout << "Enter No. of Elements=";\line     cin >> n;\line\line     cout << "\\nEnter Elements=\\n";\line     for (i = 1; i <= n; i++)\line     \{\line         cin >> a[i];\line     \}\line\line     for (p = 1; p <= n - 1; p++)\line     \{\line         min = a[p];\line         loc = p;\line\line         for (k = p + 1; k <= n; k++)\line         \{\line             if (min > a[k])\line             \{\line                 min = a[k];\line                 loc = k;\line             \}\line         \}\line         temp = a[p];\line         a[p] = a[loc];\line         a[loc] = temp;\line     \}\line\line     cout << "\\nAfter Sorting : \\n";\line\line     for (i = 1; i <= n; i++)\line     \{\line         cout << a[i] << endl;\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
------------ SELECTION SORT ------------ Enter No. of Elements=8 Enter Elements= 6 4 1 8 7 2 5 3 After Sorting : 1 2 3 4 5 6 7 8\par
Insertion Sort \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int a[100], i, n, p, ptr, temp;\line\line     cout << "\\n------------ INSERTION SORT ------------ \\n\\n";\line     cout << "Enter No. of Elements : ";\line     cin >> n;\line\line     cout << "\\nEnter Elements : \\n";\line     for (i = 1; i <= n; i++)\line     \{\line         cin >> a[i];\line     \}\line\line     a[0] = 0;\line\line     for (p = 2; p <= n; p++)\line     \{\line         temp = a[p];\line         ptr = p - 1;\line\line         while (temp < a[ptr])\line         \{\line             a[ptr + 1] = a[ptr];\line             ptr--;\line         \}\line\line         a[ptr + 1] = temp;\line     \}\line\line     cout << "\\nAfter Sorting : \\n";\line     for (i = 1; i <= n; i++)\line     \{\line         cout << a[i] << endl;\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
------------ INSERTION SORT ------------\par
\par
Enter No. of Elements : 8\par
\par
Enter Elements :\par
9\par
7\par
1\par
6\par
3\par
4\par
5\par
8\par
\par
After Sorting :\par
1\par
3\par
4\par
5\par
6\par
7\par
8\par
9\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Quick Sort \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int Partition(int a[], int beg, int end)\line\{\line     int p = beg, pivot = a[beg], loc;\line\line     for (loc = beg + 1; loc <= end; loc++)\line     \{\line         if (pivot > a[loc])\line         \{\line             a[p] = a[loc];\line             a[loc] = a[p + 1];\line             a[p + 1] = pivot;\line\line             p = p + 1;\line         \}\line     \}\line     return p;\line\}\line\line\line void QuickSort(int a[], int beg, int end)\line\{\line     if (beg < end)\line     \{\line         int p = Partition(a, beg, end);\line         QuickSort(a, beg, p - 1);\line         QuickSort(a, p + 1, end);\line     \}\line\}\line\line\line int main()\line\{\line     int a[100], i, n, beg, end;\line\line     cout << "\\n------- QUICK SORT -------\\n\\n";\line     cout << "Enter the No. of Elements : ";\line     cin >> n;\line\line     for (i = 1; i <= n; i++)\line     \{\line         cin >> a[i];\line     \}\line     beg = 1;\line     end = n;\line\line     QuickSort(a, beg, end);\line\line     cout << "\\nAfter Sorting : \\n";\line     for (i = 1; i <= n; i++)\line     \{\line         cout << a[i] << endl;\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output\par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 ------- QUICK SORT -------\par
\par
Enter the No. of Elements : 8\par
9\par
1\par
6\par
4\par
2\par
8\par
3\par
7\par
\par
After Sorting :\par
1\par
2\par
3\par
4\par
6\par
7\par
8\par
9\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Merge Sort \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line void merge(int *, int, int, int);\line\line void mergesort(int *a, int low, int high)\line\{\line     int mid;\line     if (low < high)\line     \{\line         mid = (low + high) / 2;\line         mergesort(a, low, mid);\line         mergesort(a, mid + 1, high);\line         merge(a, low, high, mid);\line     \}\line     return;\line\}\line\line void merge(int *a, int low, int high, int mid)\line\{\line     int i, j, k, c[50];\line     i = low;\line     k = low;\line     j = mid + 1;\line     while (i <= mid && j <= high)\line     \{\line         if (a[i] < a[j])\line         \{\line             c[k] = a[i];\line             k++;\line             i++;\line         \}\line         else\line         \{\line             c[k] = a[j];\line             k++;\line             j++;\line         \}\line     \}\line     while (i <= mid)\line     \{\line         c[k] = a[i];\line         k++;\line         i++;\line     \}\line     while (j <= high)\line     \{\line         c[k] = a[j];\line         k++;\line         j++;\line     \}\line     for (i = low; i < k; i++)\line     \{\line         a[i] = c[i];\line     \}\line\}\line\line int main()\line\{\line     int a[20], i;\line     cout << "Enter 5 elements to sort : \\n";\line     for (i = 0; i < 5; i++)\line     \{\line         cin >> a[i];\line     \}\line\line     mergesort(a, 0, 4);\line\line     cout << "sorted array : \\n";\line     for (i = 0; i < 5; i++)\line     \{\line         cout << a[i] << "\\t";\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Enter 5 elements to sort :\par
9\par
1\par
5\par
6\par
7\par
sorted array :\par
1       5       6       7       9\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Sorting a Matrix \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <algorithm>\line #include <vector>\line\line using namespace std;\line\line bool myfunction(int i, int j)\line\{\line     return (i < j);\line\}\line\line struct myclass \{\line     bool operator()(int i, int j)\line     \{ return (i < j); \}\line\}\line         myobject;\line\line int main()\line\{\line     int arr[] = \{312, 171, 152, 435, 26, 980, 353, 334\};\line     vector<int> myvector(arr, arr + 8);\line\line     sort(myvector.begin(), myvector.begin() + 4);\line\line     // using function as comp\line     sort(myvector.begin() + 4, myvector.end(), myfunction);\line\line     // using object as comp\line     sort(myvector.begin(), myvector.end(), myobject);\line\line     // print out content:\line\line     cout << "sorted matrix contains:";\line     for (vector<int>::iterator it = myvector.begin(); it != myvector.end(); ++it)\line         cout << ' ' << *it;\line\line     cout << '\\n';\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
sorted matrix contains: 26 152 171 312 334 353 435 980\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Linear Sort \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line #define MAXSIZE 100\line using namespace std;\line\line class linearsort\line\{\line     int arr[MAXSIZE], n;\line\line public:\line     void getdataelements();\line\line     void showdataelements();\line\line     void sortelements();\line\};\line\line void linearsort::getdataelements()\line\{\line     cout << "How many elements you want : ";\line     cin >> n;\line\line     cout << "enter elements :\\n";\line     for (int i = 0; i < n; i++)\line     \{\line         cin >> arr[i];\line     \}\line\}\line\line void linearsort::showdataelements()\line\{\line     cout << "\\nDisplay sorted elements\\n";\line\line     for (int i = 0; i < n; i++)\line     \{\line         cout << arr[i] << "   ";\line     \}\line\line\}\line\line void linearsort::sortelements()\line\{\line     int temp;\line\line     for (int i = 0; i < n; i++)\line     \{\line         for (int j = i; j < n; j++)\line         \{\line             if (arr[i] > arr[j])\line             \{\line                 temp = arr[i];\line                 arr[i] = arr[j];\line                 arr[j] = temp;\line             \}\line         \}\line     \}\line\}\line\line //main method\line int main()\line\{\line     cout << "\\nLinear Sort Method\\n\\n";\line     linearsort obj;\line     obj.getdataelements();\line     obj.sortelements();\line     obj.showdataelements();\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Linear Sort Method\par
\par
How many elements you want : 7\par
enter elements :\par
2\par
5\par
3\par
6\par
7\par
4\par
6\par
\par
Display sorted elements\par
2   3   4   5   6   6   7\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Radix Sort \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line // A utility function to get maximum value in arr[]\line int getMax(int arr[], int n)\line\{\line     int mx = arr[0];\line     for (int i = 1; i < n; i++)\line     \{\line         if (arr[i] > mx)\line             mx = arr[i];\line     \}\line     return mx;\line\}\line\line // A function to do counting sort of arr[] according to\line // the digit represented by exp.\line void countSort(int arr[], int n, int exp)\line\{\line     int output[n]; // output array\line     int i, count[10] = \{0\};\line\line     // Store count of occurrences in count[]\line     for (i = 0; i < n; i++)\line         count[(arr[i] / exp) % 10]++;\line\line     // Change count[i] so that count[i] now contains actual\line     //  position of this digit in output[]\line     for (i = 1; i < 10; i++)\line         count[i] += count[i - 1];\line\line     // Build the output array\line     for (i = n - 1; i >= 0; i--)\line     \{\line         output[count[(arr[i] / exp) % 10] - 1] = arr[i];\line         count[(arr[i] / exp) % 10]--;\line     \}\line\line     // Copy the output array to arr[], so that arr[] now\line     // contains sorted numbers according to current digit\line     for (i = 0; i < n; i++)\line         arr[i] = output[i];\line\}\line\line // The main function to that sorts arr[] of size n using \line // Radix Sort\line void radixsort(int arr[], int n)\line\{\line     // Find the maximum number to know number of digits\line     int m = getMax(arr, n);\line\line     // Do counting sort for every digit. Note that instead\line     // of passing digit number, exp is passed. exp is 10^i\line     // where i is current digit number\line     for (int exp = 1; m / exp > 0; exp *= 10)\line         countSort(arr, n, exp);\line\}\line\line // A utility function to print an array\line void print(int arr[], int n)\line\{\line     for (int i = 0; i < n; i++)\line         cout << arr[i] << " ";\line\}\line\line // Driver program to test above functions\line int main()\line\{\line     int arr[] = \{170, 45, 75, 90, 802, 24, 2, 66\};\line     int n = sizeof(arr) / sizeof(arr[0]);\line     radixsort(arr, n);\line     print(arr, n);\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 2 24 45 66 75 90 170 802 \par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Shell Sort \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line //Print values\line void print_ar(int ar[], int size)\line\{\line     for (int i = 0; i < size; ++i)\line     \{\line         cout << ar[i] << " ";\line     \}\line     cout << endl;\line\}\line\line //Shell sort function\line void shell_sort(int ar[], int size)\line\{\line     int j;\line\line     //Narrow the array by 2 everytime\line     for (int gap = size / 2; gap > 0; gap /= 2)\line     \{\line         for (int i = gap; i < size; ++i)\line         \{\line             int temp = ar[i];\line             for (j = i; j >= gap && temp < ar[j - gap]; j -= gap)\line             \{\line                 ar[j] = ar[j - gap];\line             \}\line             ar[j] = temp;\line         \}\line     \}\line\}\line\line int main()\line\{\line     int ar[] = \{1, 4, 16, 30, 29, 18, 100, 2, 43, 1\};\line\line     cout << "Intial Array : ";\line     print_ar(ar, 10);\line\line     shell_sort(ar, 10);\line\line     cout << "Sorted Array : ";\line     print_ar(ar, 10);\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 Intial Array : 1 4 16 30 29 18 100 2 43 1 \par
Sorted Array : 1 1 2 4 16 18 29 30 43 100 \par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Template Function \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <string>\line\line using namespace std;\line\line template<typename T>\line inline T const &Max(T const &val1, T const &val2)\line\{\line     return val1 < val2 ? val2 : val1;\line\}\line\line int main()\line\{\line\line     int num1 = 9;\line     int num2 = 210;\line     cout << "Max(num1, num2): " << Max(num1, num2) << endl;\line\line     double dbl1 = 1.5;\line     double dbl2 = 210.87;\line     cout << "Max(dbl1, dbl2): " << Max(dbl1, dbl2) << endl;\line\line     string str1 = "Hey";\line     string str2 = "maximum here";\line     cout << "Max(str1, str2): " << Max(str1, str2) << endl;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Max(num1, num2): 210 Max(dbl1, dbl2): 210.87 Max(str1, str2): maximum here\par
Pass by value \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<stdio.h>\line #include<iostream>\line\line using namespace std;\line\line //Function prototyping\line int add(int, int);\line\line int main()\line\{\line     int num1, num2, output;\line\line     cout << "enter two numbers : ";\line     cin >> num1;\line     cin >> num2;\line\line     /*\line         Pass the value of num1 and num2 as parameter to function add.\line         The value returned is stored in the variable output\line     */\line\line     output = add(num1, num2);\line     cout << "addition of number " << num1 << " and " << num2 << " = " << output;\line\line\}\line\line // Defining the function add()\line int add(int no1, int no2)\line\{\line     int result;\line     result = no1 + no2;\line     return result;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
enter two numbers : 5 6 addition of number 5 and 6 = 11\par
Call by Reference \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<stdio.h>\line #include<iostream>\line\line using namespace std;\line\line int add(int *, int *);\line\line int main()\line\{\line     int num1 = 0, num2 = 0, output;\line\line     cout << "enter two numbers : ";\line     cin >> num1;\line     cin >> num2;\line\line     output = add(&num1, &num2);\line\line     cout << "addition of two numbers = " << num1 << " + " << num2 << " = " << output;\line\line\}\line\line // Defining the function add()\line int add(int *n1, int *n2)\line\{\line     int result;\line     result = *n1 + *n2;\line     return result;\line     \line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
enter two numbers : 5 5\par
addition of two numbers = 5 + 5 = 10\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Calculation using inline function \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line inline int add(int num1, int num2)\line\{\line     return num1 + num2;\line\}\line\line inline int sub(int num1, int num2)\line\{\line     return num1 - num2;\line\}\line\line inline int mult(int num1, int num2)\line\{\line     return num1 * num2;\line\}\line\line inline int div(int num1, int num2)\line\{\line     return num1 / num2;\line\}\line\line // Main function for the program\line int main()\line\{\line\line     cout << "add (20,10)         : " << add(20, 10) << "\\n";\line     cout << "sub (1220,200)      : " << sub(1220, 200) << "\\n";\line     cout << "multiply (100,1010) : " << mult(100, 1010) << "\\n";\line     cout << "division (20,10)    : " << div(20, 10) << "\\n";\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
add (20,10)         : 30\par
sub (1220,200)      : 1020\par
multiply (100,1010) : 101000\par
division (20,10)    : 2\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Sort Characters in Ascending order \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     int size, i, j;\line     cout << "Enter the number of characters:";\line     cin >> size;\line\line     char chars[size];\line     cout << "Enter " << size << " characters:";\line     for (i = 0; i < size; i++)\line     \{\line         cin >> chars[i];\line     \}\line\line     char temp;\line\line     for (i = 0; i < size; i++)\line     \{\line         for (j = 0; j < size - 1; j++)\line         \{\line             if (chars[j + 1] < chars[j])\line             \{\line                 temp = chars[j];\line                 chars[j] = chars[j + 1];\line                 chars[j + 1] = temp;\line             \}\line         \}\line     \}\line\line     for (int i = 0; i < size; i++)\line     \{\line         cout << chars[i] << " ";\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Enter the number of characters:6\par
Enter 6 characters:batman\par
a a b m n t\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 inline function \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line inline int add(int num1, int num2)\line\{\line     return num1 + num2;\line\}\line\line inline int sub(int num1, int num2)\line\{\line     return num1 - num2;\line\}\line\line inline int mult(int num1, int num2)\line\{\line     return num1 * num2;\line\}\line\line inline int div(int num1, int num2)\line\{\line     return num1 / num2;\line\}\line\line // Main function for the program\line int main()\line\{\line     cout << "add (20,10)         : " << add(20, 10) << "\\n";\line     cout << "sub (1220,200)      : " << sub(1220, 200) << "\\n";\line     cout << "multiply (100,1010) : " << mult(100, 1010) << "\\n";\line     cout << "division (20,10)    : " << div(20, 10) << "\\n";\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
add (20,10) : 30 sub (1220,200) : 1020 multiply (100,1010) : 101000 division (20,10) : 2\par
getline function \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     string name;\line\line     cout << "Enter your full name: ";\line     getline(cin, name);\line     cout << "Hello, " << name << "!\\n";\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Enter your full name: Creative Cub\par
Hello, Creative Cub!\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Using flush member function \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <iomanip>\line\line using namespace std;\line\line int main()\line\{\line     cout << "hey hello\\n";\line     cout << "you have many letters to read in letter box\\n";\line     //flush clears the output buffer\line     cout.flush();\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
hey hello\par
you have many letters to read in letter box\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Static method and Static Variable \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line //class declaration\line class staticDemo\line\{\line\line private:\line     //static variable declaration\line     static int sum;\line     //normal variable declaration\line     int x;\line\line public:\line     //Constructor of the class\line     staticDemo()\line     \{\line         sum = sum + 1;\line         x = sum;\line     \}\line\line     //Static function staticFunction( ) defined with keyword static\line     static void staticFunction()\line     \{\line         cout << "\\nResult is : " << sum;\line     \}\line\line     //Normal member function normalFunctionNumber()\line     void normalFunctionNumber()\line     \{\line         cout << "\\nNumber is : " << x;\line     \}\line\};\line\line\line int staticDemo::sum = 0;\line\line //declaration of main method\line int main()\line\{\line     cout << "This is how static method and variable work : \\n";\line     //creation of object\line     staticDemo stat;\line\line     //Static function staticFunction() accessed using class name staticDemo and the scope resolution operator ::\line     staticDemo::staticFunction();\line\line     //\line     staticDemo stat1, stat2, stat3;\line     staticDemo::staticFunction();\line     stat.normalFunctionNumber();\line\line     //Normal member function accessed using object stat and the dot member access operator.\line     stat1.normalFunctionNumber();\line     stat2.normalFunctionNumber();\line     stat3.normalFunctionNumber();\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
This is how static method and variable work : Result is : 1 Result is : 4 Number is : 1 Number is : 2 Number is : 3 Number is : 4\par
flush member function \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <iomanip>\line\line using namespace std;\line\line int main()\line\{\line     cout << "hey hello\\n";\line     cout << "you have many letters to read in letter box\\n";\line     //flush clears the output buffer\line     cout.flush();\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
\f1\fs20 you have many letters to read in letter box\f0\fs24\par
While Loop Example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line\line     int i = 1;\line\line\line     while (i <= 10)\line     \{\line         cout << "value of i: " << i << endl;\line         i++;\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
value of i: 1 value of i: 2 value of i: 3 value of i: 4 value of i: 5 value of i: 6 value of i: 7 value of i: 8 value of i: 9 value of i: 10\par
For Loop \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     // for loop execution\line     for (int i = 0; i <= 10; i++)\line     \{\line         cout << "value of i: " << i << endl;\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
value of i: 0\par
value of i: 1\par
value of i: 2\par
value of i: 3\par
value of i: 4\par
value of i: 5\par
value of i: 6\par
value of i: 7\par
value of i: 8\par
value of i: 9\par
value of i: 10\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 do while Loop \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line\line     int i = 1;\line\line     do\line     \{\line         cout << "value of i: " << i << endl;\line         i++;\line     \}\line     while (i <= 10);\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
value of i: 1\par
value of i: 2\par
value of i: 3\par
value of i: 4\par
value of i: 5\par
value of i: 6\par
value of i: 7\par
value of i: 8\par
value of i: 9\par
value of i: 10\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Vector Example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line #include <vector>\line\line using namespace std;\line\line int main()\line\{\line     //Vector to store integers\line     vector<int> vex;\line     cout << "added value in vector  :\\n";\line\line     //add value in vector\line     vex.push_back(130);\line     vex.push_back(500);\line     vex.push_back(353);\line\line     for (int x = 0; x < vex.size(); x++)\line     \{\line         //Should output 130 500 353\line         cout << vex[x] << " ";\line     \}\line\line     //Checks if empty\line     if (!vex.empty())\line     \{\line         //Clears vector\line         vex.clear();\line     \}\line\line     vector<int> another_vector;\line     another_vector.push_back(10);\line     vex.push_back(10);\line\line     if (vex == another_vector)\line     \{\line         vex.push_back(20);\line     \}\line\line     for (int y = 0; y < vex.size(); y++)\line     \{\line         //Should output 10 20\line         cout << vex[y] << " ";\line     \}\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
added value in vector  :\par
130 500 353 10 20\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 break keyword \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     // Local variable declaration:\line     int num = 10;\line\line     // do loop execution\line     do\line     \{\line         cout << "value of number: " << num << endl;\line         num = num + 1;\line         if (num > 15)\line         \{\line             // terminate the loop\line             break;\line         \}\line     \} while (num < 20);\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
value of number: 10\par
value of number: 11\par
value of number: 12\par
value of number: 13\par
value of number: 14\par
value of number: 15\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Check if the number is Positive or Negative \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int num;\line     cout << "Enter any non-zero Number : ";\line     cin >> num;\line     if (num > 0)\line     \{\line         cout << "Number is positive";\line     \}\line     else\line     \{\line         cout << "Number is negative";\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Enter any non-zero Number : -9\par
Number is negative\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 endl keyword \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     int num;\line     num = 50;\line\line     cout << "number is=" << num << endl;\line     //endl is manipulator\line     //endl is output manipulator\line     cout << "value of number=" << num << "\\n";\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
number is=50 value of number=50\par
Pointer Example \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     int var;\line     char var_array[10];\line\line     cout << "Address of variable1 is : ";\line     cout << &var << "\\n";\line\line     cout << "Address of variable2 is : ";\line     cout << &var_array << "\\n";\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Address of variable1 is : 0x29feec\par
Address of variable2 is : 0x29fee2\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Find ASCII value of a character \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line     //variable declaration\line     char asciichar;\line\line     //take user input\line     cout << "Enter a character : ";\line     cin >> asciichar;\line\line     //display ascii value of character\line     cout << "\\nIt's ascii  value is : " << (int) asciichar << endl;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Enter a character : a It's ascii value is : 97\par
Add Two Numbers \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     //variable declaration\line     int num1, num2, result;\line\line     //take user input\line     cout << "Enter first Number : ";\line     cin >> num1;\line\line     cout << "\\nEnter second Number : ";\line     cin >> num2;\line\line     //to add two number\line     result = num1 + num2;\line\line     //display addition\line     cout << "\\nAddition is : " << result;\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Enter first Number : 2 3\par
\par
Enter second Number :\par
Addition is : 5\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Try catch \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <iostream>\line\line using namespace std;\line\line double divisionby(int num1, int num2)\line\{\line     if (num2 == 0)\line     \{\line         throw "Division by zero condition!";\line     \}\line     cout << "answer = ";\line     return (num1 / num2);\line\}\line\line int main()\line\{\line     int n1, n2;\line     cout << "enter two numbers for division operation  :  ";\line     cin >> n1 >> n2;\line     double n3 = 0;\line\line     //try catch to handle run time error\line     try\line     \{\line         n3 = divisionby(n1, n2);\line         cout << n3 << endl;\line     \}\line     catch (const char *msg)\line     \{\line         //it will display error msg\line         cout << msg << endl;\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
enter two numbers for division operation : 9 3 answer = 3\par
Excetpion \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 //program to show how exception handling work\line\line #include <iostream>\line using namespace std;\line\line //method definition\line double divisionby(int num1, int num2)\line\{\line     if( num2 == 0 )\line     \{\line         throw "Division by zero condition!";\line     \}\line     cout<<"answer = ";\line     return (num1/num2);\line\}\line\line int main ()\line\{\line     //variable declaration\line     int n1,n2;\line\line     //take user input\line     cout<<"enter two numbers for division operation  :  ";\line     cin>>n1>>n2;\line     double n3 = 0;\line\line     //try catch to handle run time error\line     try\line     \{\line         n3 = divisionby(n1, n2);\line         cout << n3 << endl;\line     \}\line     catch (const char* msg)\line     \{\line         //it will display error msg\line         cout << msg << endl;\line     \}\line\line    return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
enter two numbers for division operation  :  3 5\par
answer = 0\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Copy contents from file A to B \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line #include<iomanip>\line #include<fstream>\line\line using namespace std;\line\line int main()\line\{\line     //variable declaration\line     ofstream outfile;\line     ifstream infile;\line     char fname1[10], fname2[20];\line     char ch, uch;\line\line     //user Input\line     cout << "Enter a file name to be copied ";\line     cin >> fname1;\line     cout << "Enter new file name";\line     cin >> fname2;\line     infile.open(fname1);\line\line     if (infile.fail())\line     \{\line         cerr << " No such a file Exit";\line         return 0;\line     \}\line     outfile.open(fname2);\line     if (outfile.fail())\line     \{\line         cerr << "Unable to create a file";\line         return 0;\line     \}\line     while (!infile.eof())\line     \{\line         ch = (char) infile.get();\line         uch = (char) toupper(ch);\line         outfile.put(uch);\line     \}\line     infile.close();\line     outfile.close();\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Enter a file name to be copied : old.txt\par
Enter new file name : new.txt\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Writing content to the text file \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <fstream>\line #include <iostream>\line\line using namespace std;\line\line int main()\line\{\line\line     char data[1000];\line\line     //in write mode.\line     ofstream outfile;\line     outfile.open("file.txt");\line\line     cout << "Writing content to the text file" << endl;\line     cout << "Enter your name : ";\line     cin.getline(data, 1000);\line\line     // write data into the file.\line     outfile << data << endl;\line\line     cout << "Enter your age : ";\line     cin >> data;\line     cin.ignore();\line\line     // again write inputted data into the file.\line     outfile << data << endl;\line\line     cout << "successfully inserted data into file";\line     // close the opened file.\line     outfile.close();\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Writing content to the text file\par
Enter your name : Yogesh\par
Enter your age : 22\par
successfully inserted data into file\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Reading content from the file \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include <fstream>\line #include <iostream>\line\line using namespace std;\line\line //main method declaration\line int main()\line\{\line\line     char data[1000];\line\line     // open a file in read mode.\line     ifstream infile;\line     infile.open("file.cpp");\line\line     cout << "Reading content from the file" << endl;\line     infile >> data;\line\line     // write the data\line     cout << data << endl;\line\line     //read the data from the file and display it.\line     infile >> data;\line     cout << data << endl;\line\line     // close the opened file.\line     infile.close();\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par
Reading content from the file Bhagyashree 22 \par
Depth First Search \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20 #include<iostream>\line\line using namespace std;\line\line int main()\line\{\line     int cost[10][10], i, j, k, vertice, stk[10], top, v, visit[10], visited[10], edge;\line\line     cout << "Enter numbers of vertice : ";\line     cin >> vertice;\line     cout << "\\nEnter numbers of edge : ";\line     cin >> edge;\line     cout << "\\nEDGES \\n";\line\line     for (k = 1; k <= edge; k++)\line     \{\line         cin >> i >> j;\line         cost[i][j] = 1;\line     \}\line\line     cout << "\\nEnter initial vertex : ";\line     cin >> v;\line     cout << "\\nORDER OF VISITED VERTICES IS : ";\line     cout << v << " ";\line     visited[v] = 1;\line     k = 1;\line     while (k < vertice)\line     \{\line         for (j = vertice; j >= 1; j--)\line         \{\line             if (cost[v][j] != 0 && visited[j] != 1 && visit[j] != 1)\line             \{\line                 visit[j] = 1;\line                 stk[top] = j;\line                 top++;\line             \}\line         \}\line\line         v = stk[--top];\line         cout << v << " ";\line         k++;\line         visit[v] = 0;\line         visited[v] = 1;\line     \}\line\line     return 0;\line\}\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24 Output \par

\pard\sl240\slmult1\tx959\tx1918\tx2877\tx3836\tx4795\tx5754\tx6713\tx7672\tx8631\f1\fs20\par
Enter numbers of vertice : 3\par
\par
Enter numbers of edge : 2\par
\par
EDGES\par
1 2\par
3 4\par
\par
Enter initial vertex : 2\par
\par
ORDER OF VISITED VERTICES IS : 2 1 3\par

\pard\sb100\sa100\sl240\slmult1\f0\fs24\par
}
 